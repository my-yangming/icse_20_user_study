package com.us.example.config;

import org.springframework.context.annotation.Configuration;
import org.springframework.messaging.simp.config.MessageBrokerRegistry;
import org.springframework.web.socket.config.annotation.AbstractWebSocketMessageBrokerConfigurer;
import org.springframework.web.socket.config.annotation.EnableWebSocketMessageBroker;
import org.springframework.web.socket.config.annotation.StompEndpointRegistry;

/**
 * Created by yangyibo on 16/12/29.
 */
@Configuration
@EnableWebSocketMessageBroker
//é€šè¿‡EnableWebSocketMessageBroker å¼€å?¯ä½¿ç”¨STOMPå??è®®æ?¥ä¼ è¾“åŸºäºŽä»£ç?†(message broker)çš„æ¶ˆæ?¯,æ­¤æ—¶æµ?è§ˆå™¨æ”¯æŒ?ä½¿ç”¨@MessageMapping å°±åƒ?æ”¯æŒ?@RequestMappingä¸€æ ·ã€‚
public class WebSocketConfig extends AbstractWebSocketMessageBrokerConfigurer{


    @Override
    public void registerStompEndpoints(StompEndpointRegistry registry) { //endPoint æ³¨å†Œå??è®®èŠ‚ç‚¹,å¹¶æ˜ å°„æŒ‡å®šçš„URl

        //æ³¨å†Œä¸€ä¸ªStomp å??è®®çš„endpoint,å¹¶æŒ‡å®š SockJSå??è®®
        registry.addEndpoint("/endpointWisely").withSockJS();

        //æ³¨å†Œä¸€ä¸ªå??å­—ä¸º"endpointChat" çš„endpoint,å¹¶æŒ‡å®š SockJSå??è®®ã€‚   ç‚¹å¯¹ç‚¹-ç”¨
        registry.addEndpoint("/endpointChat").withSockJS();
    }


    @Override
    public void configureMessageBroker(MessageBrokerRegistry registry) {//é…?ç½®æ¶ˆæ?¯ä»£ç?†(message broker)
        //å¹¿æ’­å¼?åº”é…?ç½®ä¸€ä¸ª/topic æ¶ˆæ?¯ä»£ç?†
        registry.enableSimpleBroker("/topic");

        //ç‚¹å¯¹ç‚¹å¼?å¢žåŠ ä¸€ä¸ª/queue æ¶ˆæ?¯ä»£ç?†
        registry.enableSimpleBroker("/queue","/topic");

    }
}
