/*
 * Copyright 2015-2102 RonCoo(http://www.roncoo.com) Group.
 *  
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *  
 *      http://www.apache.org/licenses/LICENSE-2.0
 *  
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.roncoo.pay.common.core.page;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * åˆ†é¡µç»„ä»¶.
 * @companyï¼šå¹¿å·žé¢†è¯¾ç½‘ç»œç§‘æŠ€æœ‰é™?å…¬å?¸ï¼ˆé¾™æžœå­¦é™¢ www.roncoo.comï¼‰.
 * @author along
 */
public class PageBean<T> implements Serializable {
    /**
   * 
   */
    private static final long serialVersionUID = 8470697978259453214L;

    // æŒ‡å®šçš„æˆ–æ˜¯é¡µé?¢å?‚æ•°
    private int currentPage; // å½“å‰?é¡µ
    private int numPerPage; // æ¯?é¡µæ˜¾ç¤ºå¤šå°‘æ?¡

    // æŸ¥è¯¢æ•°æ?®åº“
    private int totalCount; // æ€»è®°å½•æ•°
    private List<T> recordList =new  ArrayList<T>(0); // æœ¬é¡µçš„æ•°æ?®åˆ—è¡¨

    // è®¡ç®—
    private int totalPage; // æ€»é¡µæ•°
    private int beginPageIndex; // é¡µç ?åˆ—è¡¨çš„å¼€å§‹ç´¢å¼•ï¼ˆåŒ…å?«ï¼‰
    private int endPageIndex; // é¡µç ?åˆ—è¡¨çš„ç»“æ?Ÿç´¢å¼•ï¼ˆåŒ…å?«ï¼‰

    private Map<String, Object> countResultMap; // å½“å‰?åˆ†é¡µæ?¡ä»¶ä¸‹çš„ç»Ÿè®¡ç»“æžœ

    public PageBean() {
    }

    /**
     * è®¡ç®—æ€»é¡µæ•° .
     * 
     * @param totalCount
     *            æ€»è®°å½•æ•°.
     * @param numPerPage
     *            æ¯?é¡µè®°å½•æ•°.
     * @return totalPage æ€»é¡µæ•°.
     */
    public static int countTotalPage(int totalCount, int numPerPage) {
        if (totalCount % numPerPage == 0) {
            // åˆšå¥½æ•´é™¤
            return totalCount / numPerPage;
        } else {
            // ä¸?èƒ½æ•´é™¤åˆ™æ€»é¡µæ•°ä¸ºï¼šå•† + 1
            return totalCount / numPerPage + 1;
        }
    }

    /**
     * æ ¡éªŒå½“å‰?é¡µæ•°currentPage.<br/>
     * 1ã€?å…ˆæ ¹æ?®æ€»è®°å½•æ•°totalCountå’Œæ¯?é¡µè®°å½•æ•°numPerPageï¼Œè®¡ç®—å‡ºæ€»é¡µæ•°totalPage.<br/>
     * 2ã€?åˆ¤æ–­é¡µé?¢æ??äº¤è¿‡æ?¥çš„å½“å‰?é¡µæ•°currentPageæ˜¯å?¦å¤§äºŽæ€»é¡µæ•°totalPageï¼Œå¤§äºŽåˆ™è¿”å›žtotalPage.<br/>
     * 3ã€?åˆ¤æ–­currentPageæ˜¯å?¦å°?äºŽ1ï¼Œå°?äºŽåˆ™è¿”å›ž1.<br/>
     * 4ã€?å…¶å®ƒåˆ™ç›´æŽ¥è¿”å›žcurrentPage .
     * 
     * @param totalCount
     *            è¦?åˆ†é¡µçš„æ€»è®°å½•æ•° .
     * @param numPerPage
     *            æ¯?é¡µè®°å½•æ•°å¤§å°? .
     * @param currentPage
     *            è¾“å…¥çš„å½“å‰?é¡µæ•° .
     * @return currentPage .
     */
    public static int checkCurrentPage(int totalCount, int numPerPage,
            int currentPage) {
        int totalPage = PageBean.countTotalPage(totalCount, numPerPage); // æœ€å¤§é¡µæ•°
        if (currentPage > totalPage) {
            // å¦‚æžœé¡µé?¢æ??äº¤è¿‡æ?¥çš„é¡µæ•°å¤§äºŽæ€»é¡µæ•°ï¼Œåˆ™å°†å½“å‰?é¡µè®¾ä¸ºæ€»é¡µæ•°
            // æ­¤æ—¶è¦?æ±‚totalPageè¦?å¤§äºŽèŽ·ç­‰äºŽ1
            if (totalPage < 1) {
                return 1;
            }
            return totalPage;
        } else if (currentPage < 1) {
            return 1; // å½“å‰?é¡µä¸?èƒ½å°?äºŽ1ï¼ˆé?¿å…?é¡µé?¢è¾“å…¥ä¸?æ­£ç¡®å€¼ï¼‰
        } else {
            return currentPage;
        }
    }

    /**
     * æ ¡éªŒé¡µé?¢è¾“å…¥çš„æ¯?é¡µè®°å½•æ•°numPerPageæ˜¯å?¦å?ˆæ³• .<br/>
     * 1ã€?å½“é¡µé?¢è¾“å…¥çš„æ¯?é¡µè®°å½•æ•°numPerPageå¤§äºŽå…?è®¸çš„æœ€å¤§æ¯?é¡µè®°å½•æ•°MAX_PAGE_SIZEæ—¶ï¼Œè¿”å›žMAX_PAGE_SIZE.
     * 2ã€?å¦‚æžœnumPerPageå°?äºŽ1ï¼Œåˆ™è¿”å›žé»˜è®¤çš„æ¯?é¡µè®°å½•æ•°DEFAULT_PAGE_SIZE.
     * 
     * @param numPerPage
     *            é¡µé?¢è¾“å…¥çš„æ¯?é¡µè®°å½•æ•° .
     * @return checkNumPerPage .
     */
    public static int checkNumPerPage(int numPerPage) {
        if (numPerPage > PageParam.MAX_PAGE_SIZE) {
            return PageParam.MAX_PAGE_SIZE;
        } else if (numPerPage < 1) {
            return PageParam.DEFAULT_NUM_PER_PAGE;
        } else {
            return numPerPage;
        }
    }

    /**
     * å?ªæŽ¥å?—å‰?4ä¸ªå¿…è¦?çš„å±žæ€§ï¼Œä¼šè‡ªåŠ¨çš„è®¡ç®—å‡ºå…¶ä»–3ä¸ªå±žç”Ÿçš„å€¼
     * 
     * @param currentPage
     * @param numPerPage
     * @param totalCount
     * @param recordList
     */
    public PageBean(int currentPage, int numPerPage, int totalCount,
            List<T> recordList) {
        this.currentPage = currentPage;
        this.numPerPage = numPerPage;
        this.totalCount = totalCount;
        this.recordList = recordList;

        // è®¡ç®—æ€»é¡µç ?
        totalPage = (totalCount + numPerPage - 1) / numPerPage;

        // è®¡ç®— beginPageIndex å’Œ endPageIndex
        if (totalPage <= 10) {
            // å¦‚æžœæ€»é¡µæ•°ä¸?å¤šäºŽ10é¡µï¼Œåˆ™å…¨éƒ¨æ˜¾ç¤º
            beginPageIndex = 1;
            endPageIndex = totalPage;
        } else {
            // å¦‚æžœæ€»é¡µæ•°å¤šäºŽ10é¡µï¼Œåˆ™æ˜¾ç¤ºå½“å‰?é¡µé™„è¿‘çš„å…±10ä¸ªé¡µç ?
            // å½“å‰?é¡µé™„è¿‘çš„å…±10ä¸ªé¡µç ?ï¼ˆå‰?4ä¸ª + å½“å‰?é¡µ + å?Ž5ä¸ªï¼‰
            beginPageIndex = currentPage - 4;
            endPageIndex = currentPage + 5;
            // å½“å‰?é?¢çš„é¡µç ?ä¸?è¶³4ä¸ªæ—¶ï¼Œåˆ™æ˜¾ç¤ºå‰?10ä¸ªé¡µç ?
            if (beginPageIndex < 1) {
                beginPageIndex = 1;
                endPageIndex = 10;
            }
            // å½“å?Žé?¢çš„é¡µç ?ä¸?è¶³5ä¸ªæ—¶ï¼Œåˆ™æ˜¾ç¤ºå?Ž10ä¸ªé¡µç ?
            if (endPageIndex > totalPage) {
                endPageIndex = totalPage;
                beginPageIndex = totalPage - 10 + 1;
            }
        }
    }

    /**
     * å?ªæŽ¥å?—å‰?5ä¸ªå¿…è¦?çš„å±žæ€§ï¼Œä¼šè‡ªåŠ¨çš„è®¡ç®—å‡ºå…¶ä»–3ä¸ªå±žç”Ÿçš„å€¼
     * 
     * @param currentPage
     * @param numPerPage
     * @param totalCount
     * @param recordList
     */
    public PageBean(int currentPage, int numPerPage, int totalCount,
            List<T> recordList, Map<String, Object> countResultMap) {
        this.currentPage = currentPage;
        this.numPerPage = numPerPage;
        this.totalCount = totalCount;
        this.recordList = recordList;
        this.countResultMap = countResultMap;

        // è®¡ç®—æ€»é¡µç ?
        totalPage = (totalCount + numPerPage - 1) / numPerPage;

        // è®¡ç®— beginPageIndex å’Œ endPageIndex
        if (totalPage <= 10) {
            // å¦‚æžœæ€»é¡µæ•°ä¸?å¤šäºŽ10é¡µï¼Œåˆ™å…¨éƒ¨æ˜¾ç¤º
            beginPageIndex = 1;
            endPageIndex = totalPage;
        } else {
            // å¦‚æžœæ€»é¡µæ•°å¤šäºŽ10é¡µï¼Œåˆ™æ˜¾ç¤ºå½“å‰?é¡µé™„è¿‘çš„å…±10ä¸ªé¡µç ?
            // å½“å‰?é¡µé™„è¿‘çš„å…±10ä¸ªé¡µç ?ï¼ˆå‰?4ä¸ª + å½“å‰?é¡µ + å?Ž5ä¸ªï¼‰
            beginPageIndex = currentPage - 4;
            endPageIndex = currentPage + 5;
            // å½“å‰?é?¢çš„é¡µç ?ä¸?è¶³4ä¸ªæ—¶ï¼Œåˆ™æ˜¾ç¤ºå‰?10ä¸ªé¡µç ?
            if (beginPageIndex < 1) {
                beginPageIndex = 1;
                endPageIndex = 10;
            }
            // å½“å?Žé?¢çš„é¡µç ?ä¸?è¶³5ä¸ªæ—¶ï¼Œåˆ™æ˜¾ç¤ºå?Ž10ä¸ªé¡µç ?
            if (endPageIndex > totalPage) {
                endPageIndex = totalPage;
                beginPageIndex = totalPage - 10 + 1;
            }
        }
    }

    public List<T> getRecordList() {
        return recordList;
    }

    public void setRecordList(List<T> recordList) {
        this.recordList = recordList;
    }

    public int getCurrentPage() {
        return currentPage;
    }

    public void setCurrentPage(int currentPage) {
        this.currentPage = currentPage;
    }

    public int getTotalPage() {
        return totalPage;
    }

    public void setTotalPage(int totalPage) {
        this.totalPage = totalPage;
    }

    public int getNumPerPage() {
        return numPerPage;
    }

    public void setNumPerPage(int numPerPage) {
        this.numPerPage = numPerPage;
    }

    public int getTotalCount() {
        return totalCount;
    }

    public void setTotalCount(int totalCount) {
        this.totalCount = totalCount;
    }

    public int getBeginPageIndex() {
        return beginPageIndex;
    }

    public void setBeginPageIndex(int beginPageIndex) {
        this.beginPageIndex = beginPageIndex;
    }

    public int getEndPageIndex() {
        return endPageIndex;
    }

    public void setEndPageIndex(int endPageIndex) {
        this.endPageIndex = endPageIndex;
    }

    public Map<String, Object> getCountResultMap() {
        return countResultMap;
    }

    public void setCountResultMap(Map<String, Object> countResultMap) {
        this.countResultMap = countResultMap;
    }

}
