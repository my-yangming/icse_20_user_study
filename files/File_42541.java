/*
 * Copyright 2015-2102 RonCoo(http://www.roncoo.com) Group.
 *  
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *  
 *      http://www.apache.org/licenses/LICENSE-2.0
 *  
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.roncoo.pay.reconciliation.fileDown.impl;

import com.roncoo.pay.common.core.utils.DateUtils;
import com.roncoo.pay.reconciliation.fileDown.service.FileDown;
import com.roncoo.pay.reconciliation.utils.alipay.AlipaySubmit;
import com.roncoo.pay.reconciliation.utils.alipay.httpClient.HttpProtocolHandler;
import com.roncoo.pay.reconciliation.utils.alipay.httpClient.HttpRequest;
import com.roncoo.pay.reconciliation.utils.alipay.httpClient.HttpResponse;
import com.roncoo.pay.reconciliation.utils.alipay.httpClient.HttpResultType;
import com.roncoo.pay.trade.utils.AlipayConfigUtil;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * æ”¯ä»˜å®?è´¦å?•ä¸‹è½½.
 *
 * é¾™æžœå­¦é™¢ï¼šwww.roncoo.com
 * 
 * @authorï¼šshenjialong
 */
public class AlipayFileDown implements FileDown {
	private static final Log LOG = LogFactory.getLog(AlipayFileDown.class);
	SimpleDateFormat timestampSDF = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
	SimpleDateFormat billDateSDF = new SimpleDateFormat("yyyy-MM-dd");

	/*** é…?ç½®å…¨éƒ¨æ”¾å…¥alipay_config.propertiesé…?ç½®æ–‡ä»¶ä¸­/ ***/
	// #å?ˆä½œèº«ä»½è€…IDï¼Œç­¾çº¦è´¦å?·
	private String partner = AlipayConfigUtil.readConfig("partner");

	// æ”¯ä»˜å®?ç½‘å…³
	private String url = AlipayConfigUtil.readConfig("alipay_gateway_new");

	// è¯·æ±‚ä½¿ç”¨çš„ç¼–ç ?æ ¼å¼?
	private String charset = AlipayConfigUtil.readConfig("input_charset");

	// è´¦å?•æŸ¥è¯¢å¼€å§‹æ—¶é—´ï¼šæ ¼å¼?ä¸ºï¼šyyyy-MM-dd HH:mm:ss
	private String gmt_start_time = "";

	// è´¦å?•æŸ¥è¯¢å¼€å§‹æ—¶é—´ï¼šæ ¼å¼?ä¸ºï¼šyyyy-MM-dd HH:mm:ss
	private String gmt_end_time = "";

	// pageNo åˆ†é¡µæŸ¥è¯¢çš„é¡µå?·ï¼šé»˜è®¤æ˜¯1
	private String pageNo = "1";

	/**
	 * æ–‡ä»¶ä¸‹è½½ç±»
	 *
	 * @param billDate
	 *            è´¦å?•æ—¥
	 * @param dir
	 *            è´¦å?•ä¿?å­˜è·¯å¾„
	 * 
	 */
	public File fileDown(Date fileDate, String dir) throws Exception {

		LOG.info("======å¼€å§‹ä¸‹è½½æ”¯ä»˜å®?å¯¹è´¦å?•");
		// æ ¼å¼?åŒ–è´¦å?•æ—¥æœŸ
		String bill_begin_date = billDateSDF.format(fileDate);
		String bill_end_date = billDateSDF.format(DateUtils.addDay(fileDate, 1));
		gmt_start_time = bill_begin_date + " 00:00:00";
		gmt_end_time = bill_end_date + " 00:00:00";

		HttpResponse response = null;

		// æŠŠè¯·æ±‚å?‚æ•°æ‰“åŒ…æˆ?æ•°ç»„
		Map<String, String> sParaTemp = new HashMap<String, String>();
		sParaTemp.put("service", "account.page.query");
		sParaTemp.put("partner", partner);
		sParaTemp.put("_input_charset", charset);
		sParaTemp.put("page_no", pageNo);
		sParaTemp.put("gmt_start_time", gmt_start_time);
		sParaTemp.put("gmt_end_time", gmt_end_time);

		response = this.buildRequest(sParaTemp);
		if (response == null) {
			return null;
		}
		// å¾—åˆ°æ”¯ä»˜å®?æŽ¥å?£è¿”å›žæ•°æ?®
		String stringResult = response.getStringResult();

		// åˆ›å»ºä¿?å­˜å¯¹è´¦å?•çš„æœ¬åœ°æ–‡ä»¶
		File file = this.createFile(bill_begin_date, stringResult, dir);

		return file;
	}

	/**
	 * å»ºç«‹è¯·æ±‚ï¼Œä»¥æ¨¡æ‹Ÿè¿œç¨‹HTTPçš„POSTè¯·æ±‚æ–¹å¼?æž„é€ å¹¶èŽ·å?–æ”¯ä»˜å®?çš„å¤„ç?†ç»“æžœ
	 * 
	 * @param sParaTemp
	 *            è¯·æ±‚å?‚æ•°
	 * @return æ”¯ä»˜å®?å¤„ç?†ç»“æžœ
	 * @throws Exception
	 */
	public HttpResponse buildRequest(Map<String, String> sParaTemp) throws Exception {
		// å¾…è¯·æ±‚å?‚æ•°æ•°ç»„
		Map<String, String> sPara = AlipaySubmit.buildRequestPara(sParaTemp);

		HttpProtocolHandler httpProtocolHandler = HttpProtocolHandler.getInstance();

		HttpRequest request = new HttpRequest(HttpResultType.BYTES);
		// è®¾ç½®ç¼–ç ?é›†
		request.setCharset(charset);
		// è®¾ç½®è¯·æ±‚å?‚æ•°
		request.setParameters(AlipaySubmit.generatNameValuePair(sPara));
		// è®¾ç½®è¯·æ±‚åœ°å?€
		request.setUrl(url + "_input_charset=" + charset);
		// è¯·æ±‚æŽ¥å?£
		HttpResponse response = httpProtocolHandler.execute(request, "", "");
		if (response == null) {
			return null;
		}
		return response;
	}

	/**
	 * åˆ›å»ºè´¦å?•æ–‡ä»¶
	 * 
	 * @param bill_date
	 *            è´¦å?•æ—¥
	 * @param stringResult
	 *            æ–‡ä»¶å†…å®¹
	 * @param dir
	 *            æ–‡ä»¶ä¿?å­˜è·¯å¾„
	 * @return
	 * @throws IOException
	 */
	private File createFile(String bill_date, String stringResult, String dir) throws IOException {

		// åˆ›å»ºæœ¬åœ°æ–‡ä»¶ï¼Œç”¨äºŽå­˜å‚¨æ”¯ä»˜å®?å¯¹è´¦æ–‡ä»¶
		// String dir = "/home/roncoo/app/accountcheck/billfile/alipay";
		File file = new File(dir, bill_date + "_" + ".xml");
		int index = 1;
		// åˆ¤æ–­æ–‡ä»¶æ˜¯å?¦å·²ç»?å­˜åœ¨
		while (file.exists()) {
			file = new File(dir, bill_date + "_" + index + ".xml");
			index++;
		}

		// åˆ¤æ–­çˆ¶æ–‡ä»¶æ˜¯å?¦å­˜åœ¨,ä¸?å­˜åœ¨å°±åˆ›å»º
		if (!file.getParentFile().exists()) {
			if (!file.getParentFile().mkdirs()) {
				// æ–°å»ºæ–‡ä»¶ç›®å½•å¤±è´¥ï¼ŒæŠ›å¼‚å¸¸
				throw new IOException("åˆ›å»ºæ–‡ä»¶(çˆ¶å±‚æ–‡ä»¶å¤¹)å¤±è´¥, filepath: " + file.getAbsolutePath());
			}
		}
		// åˆ¤æ–­æ–‡ä»¶æ˜¯å?¦å­˜åœ¨ï¼Œä¸?å­˜åœ¨åˆ™åˆ›å»º
		if (!file.exists()) {
			if (!file.createNewFile()) {
				// æ–°å»ºæ–‡ä»¶å¤±è´¥ï¼ŒæŠ›å¼‚å¸¸
				throw new IOException("åˆ›å»ºæ–‡ä»¶å¤±è´¥, filepath: " + file.getAbsolutePath());
			}
		}

		try {
			// æŠŠæ”¯ä»˜å®?è¿”å›žæ•°æ?®å†™å…¥æ–‡ä»¶
			FileWriter fileWriter = new FileWriter(file);
			fileWriter.write(stringResult);
			fileWriter.close(); // å…³é—­æ•°æ?®æµ?

		} catch (IOException e) {
			LOG.info("æŠŠæ”¯ä»˜å®?è¿”å›žçš„å¯¹è´¦æ•°æ?®å†™å…¥æ–‡ä»¶å¼‚å¸¸:" + e);
		}

		return file;
	}

}
