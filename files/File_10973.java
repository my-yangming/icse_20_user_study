package com.vondear.rxui.fragment;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

/**
 *
 * è‹¥éœ€è¦?é‡‡ç”¨Lazyæ–¹å¼?åŠ è½½çš„Fragmentï¼Œåˆ?å§‹åŒ–å†…å®¹æ”¾åˆ°initDataå®žçŽ°
 * è‹¥ä¸?éœ€è¦?LazyåŠ è½½åˆ™initDataæ–¹æ³•å†…ç•™ç©º,åˆ?å§‹åŒ–å†…å®¹æ”¾åˆ°initViewså?³å?¯
 *
 * æ³¨æ„?äº‹é¡¹ 1:
 * å¦‚æžœæ˜¯ä¸ŽViewPagerä¸€èµ·ä½¿ç”¨ï¼Œè°ƒç”¨çš„æ˜¯setUserVisibleHintã€‚
 *
 * æ³¨æ„?äº‹é¡¹ 2:
 * å¦‚æžœæ˜¯é€šè¿‡FragmentTransactionçš„showå’Œhideçš„æ–¹æ³•æ?¥æŽ§åˆ¶æ˜¾ç¤ºï¼Œè°ƒç”¨çš„æ˜¯onHiddenChanged.
 * é’ˆå¯¹åˆ?å§‹å°±showçš„Fragment ä¸ºäº†è§¦å?‘onHiddenChangedäº‹ä»¶ è¾¾åˆ°lazyæ•ˆæžœ éœ€è¦?å…ˆhideå†?show
 *
 * @author vondear
 * @date 2015/11/21.
 */
public abstract class FragmentLazy extends Fragment {

    /**
     * æ˜¯å?¦å?¯è§?çŠ¶æ€?
     */
    private boolean isVisible;

    /**
     * æ ‡å¿—ä½?ï¼ŒViewå·²ç»?åˆ?å§‹åŒ–å®Œæˆ?ã€‚
     */
    private boolean isPrepared;

    /**
     * æ˜¯å?¦ç¬¬ä¸€æ¬¡åŠ è½½
     */
    private boolean isFirstLoad = true;

    public FragmentActivity mContext;

    @Override
    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle savedInstanceState) {
        // è‹¥ viewpager ä¸?è®¾ç½® setOffscreenPageLimit æˆ–è®¾ç½®æ•°é‡?ä¸?å¤Ÿ
        // é”€æ¯?çš„Fragment onCreateView æ¯?æ¬¡éƒ½ä¼šæ‰§è¡Œ(ä½†å®žä½“ç±»æ²¡æœ‰ä»Žå†…å­˜é”€æ¯?)
        // å¯¼è‡´initDataå??å¤?æ‰§è¡Œ,æ‰€ä»¥è¿™é‡Œæ³¨é‡ŠæŽ‰
        // isFirstLoad = true;

        // å?–æ¶ˆ isFirstLoad = trueçš„æ³¨é‡Š , å› ä¸ºä¸Šè¿°çš„initDataæœ¬èº«å°±æ˜¯åº”è¯¥æ‰§è¡Œçš„
        // onCreateViewæ‰§è¡Œ è¯?æ˜Žè¢«ç§»å‡ºè¿‡FragmentManager initDataç¡®å®žè¦?æ‰§è¡Œ.
        // å¦‚æžœè¿™é‡Œæœ‰æ•°æ?®ç´¯åŠ çš„Bug è¯·åœ¨initViewsæ–¹æ³•é‡Œåˆ?å§‹åŒ–æ‚¨çš„æ•°æ?® æ¯”å¦‚ list.clear();
        mContext = getActivity();

        isFirstLoad = true;
        View view = initViews(layoutInflater, viewGroup, savedInstanceState);
        isPrepared = true;
        lazyLoad();
        return view;
    }

    /**
     * å¦‚æžœæ˜¯ä¸ŽViewPagerä¸€èµ·ä½¿ç”¨ï¼Œè°ƒç”¨çš„æ˜¯setUserVisibleHint
     *
     * @param isVisibleToUser æ˜¯å?¦æ˜¾ç¤ºå‡ºæ?¥äº†
     */
    @Override
    public void setUserVisibleHint(boolean isVisibleToUser) {
        super.setUserVisibleHint(isVisibleToUser);
        if (getUserVisibleHint()) {
            isVisible = true;
            onVisible();
        } else {
            isVisible = false;
            onInvisible();
        }
    }

    /**
     * å¦‚æžœæ˜¯é€šè¿‡FragmentTransactionçš„showå’Œhideçš„æ–¹æ³•æ?¥æŽ§åˆ¶æ˜¾ç¤ºï¼Œè°ƒç”¨çš„æ˜¯onHiddenChanged.
     * è‹¥æ˜¯åˆ?å§‹å°±showçš„Fragment ä¸ºäº†è§¦å?‘è¯¥äº‹ä»¶ éœ€è¦?å…ˆhideå†?show
     *
     * @param hidden hidden True if the fragment is now hidden, false if it is not
     *               visible.
     */
    @Override
    public void onHiddenChanged(boolean hidden) {
        super.onHiddenChanged(hidden);
        if (!hidden) {
            isVisible = true;
            onVisible();
        } else {
            isVisible = false;
            onInvisible();
        }
    }

    protected void onVisible() {
        lazyLoad();
    }

    protected void onInvisible() {
    }

    /**
     * è¦?å®žçŽ°å»¶è¿ŸåŠ è½½Fragmentå†…å®¹,éœ€è¦?åœ¨ onCreateView
     * isPrepared = true;
     */
    protected void lazyLoad() {
        if (!isPrepared || !isVisible || !isFirstLoad) {
            return;
        }
        isFirstLoad = false;
        initData();
    }

    protected abstract View initViews(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle savedInstanceState);

    protected abstract void initData();

}
