/*Copyright Â©2016 TommyLemon(https://github.com/TommyLemon)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.*/

package apijson.demo.client.activity_fragment;

import zuo.biao.apijson.JSONResponse;
import zuo.biao.library.interfaces.OnBottomDragListener;
import zuo.biao.library.manager.HttpManager.OnHttpResponseListener;
import zuo.biao.library.ui.EditTextInfoActivity;
import zuo.biao.library.ui.EditTextInfoWindow;
import zuo.biao.library.util.StringUtil;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.TextView;
import apijson.demo.client.R;
import apijson.demo.client.base.BaseActivity;
import apijson.demo.client.util.HttpRequest;
import apijson.demo.server.model.Privacy;

/**é’±åŒ…ç•Œé?¢
 * @author Lemon
 * @use toActivity(WalletActivity.createIntent(...));
 */
public class WalletActivity extends BaseActivity implements OnClickListener, OnBottomDragListener
, OnHttpResponseListener {
	private static final String TAG = "WalletActivity";

	//å?¯åŠ¨æ–¹æ³•<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

	/**å?¯åŠ¨è¿™ä¸ªActivityçš„Intent
	 * @param context
	 * @return
	 */
	public static Intent createIntent(Context context) {
		return new Intent(context, WalletActivity.class);
	}

	//å?¯åŠ¨æ–¹æ³•>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


	@Override
	public Activity getActivity() {
		return this;
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.wallet_activity, this);

		//åŠŸèƒ½å½’ç±»åˆ†åŒºæ–¹æ³•ï¼Œå¿…é¡»è°ƒç”¨<<<<<<<<<<
		initView();
		initData();
		initEvent();
		//åŠŸèƒ½å½’ç±»åˆ†åŒºæ–¹æ³•ï¼Œå¿…é¡»è°ƒç”¨>>>>>>>>>>

	}


	//UIæ˜¾ç¤ºåŒº(æ“?ä½œUIï¼Œä½†ä¸?å­˜åœ¨æ•°æ?®èŽ·å?–æˆ–å¤„ç?†ä»£ç ?ï¼Œä¹Ÿä¸?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?)<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

	private TextView tvWalletCount;
	@Override
	public void initView() {//å¿…é¡»è°ƒç”¨
		autoSetTitle();

		tvWalletCount = (TextView) findViewById(R.id.tvWalletCount);
	}


	private Privacy privacy;
	public void setWallet(Privacy privacy_) {
		this.privacy = privacy_;
		runUiThread(new Runnable() {

			@Override
			public void run() {
				dismissProgressDialog();
				tvBaseTitle.setText(getTitleName());
				if (privacy == null) {
					privacy = new Privacy();
				}
				tvWalletCount.setText(StringUtil.getPrice(privacy.getBalance(), StringUtil.PRICE_FORMAT_PREFIX));
			}
		});
	}

	//UIæ˜¾ç¤ºåŒº(æ“?ä½œUIï¼Œä½†ä¸?å­˜åœ¨æ•°æ?®èŽ·å?–æˆ–å¤„ç?†ä»£ç ?ï¼Œä¹Ÿä¸?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?)>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>










	//Dataæ•°æ?®åŒº(å­˜åœ¨æ•°æ?®èŽ·å?–æˆ–å¤„ç?†ä»£ç ?ï¼Œä½†ä¸?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?)<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

	@Override
	public void initData() {//å¿…é¡»è°ƒç”¨

		showProgressDialog(getTitleName());
		HttpRequest.getPrivacy(HTTP_GET, this);
	}

	public String getTitleName() {
		return isSucceed || isShowingProgress() ? "é’±åŒ…" : "æœ‰ç‚¹é—®é¢˜ï¼Œç‚¹å‡»é‡?è¯•";
	}

	//Dataæ•°æ?®åŒº(å­˜åœ¨æ•°æ?®èŽ·å?–æˆ–å¤„ç?†ä»£ç ?ï¼Œä½†ä¸?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?)>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>








	//Eventäº‹ä»¶åŒº(å?ªè¦?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?å°±æ˜¯)<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

	@Override
	public void initEvent() {//å¿…é¡»è°ƒç”¨

		findViewById(R.id.tvWalletRecharge).setOnClickListener(this);
		findViewById(R.id.tvWalletWithdraw).setOnClickListener(this);
	}

	@Override
	public void onDragBottom(boolean rightToLeft) {
		if (rightToLeft) {

			return;
		}	

		finish();
	}


	private static final int HTTP_GET = 1;
	private static final int HTTP_RECHARGE = 2;
	private static final int HTTP_WITHDRAW = 3;

	private boolean isSucceed = true;
	@Override
	public void onHttpResponse(final int requestCode, final String resultJson, Exception e) {
		runThread(TAG + "onHttpResponse", new Runnable() {

			@Override
			public void run() {

				JSONResponse response = new JSONResponse(resultJson);
				if (verifyHttpLogin(response.getCode()) == false) {
					return;
				}
				
				isSucceed = JSONResponse.isSuccess(response);
				
				dismissProgressDialog();
				switch (requestCode) {
				case HTTP_RECHARGE:
				case HTTP_WITHDRAW:
					if (response.getCode() == JSONResponse.CODE_CONDITION_ERROR) {
						showShortToast("å¯†ç ?é”™è¯¯ï¼?");
					} else if (requestCode == HTTP_WITHDRAW && response.getCode() == JSONResponse.CODE_OUT_OF_RANGE) {
						showShortToast("ä½™é¢?ä¸?è¶³ï¼?");
					} else {
						showShortToast((requestCode == HTTP_RECHARGE ? "å……å€¼" : "æ??çŽ°")
								+ getString(isSucceed ? R.string.succeed : R.string.failed));
						if (isSucceed) {
							initData();
						}
					}
					break;
				case HTTP_GET:
					if (isSucceed) {
						setWallet(response.getObject(Privacy.class));
					} else {
						showShortToast(R.string.get_failed);
					}
					break;
				default:
					break;
				}
			}
		});
	}

	//ç³»ç»Ÿè‡ªå¸¦ç›‘å?¬<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.tvWalletRecharge:
			toActivity(EditTextInfoWindow.createIntent(context, EditTextInfoWindow.TYPE_DECIMAL, "å……å€¼", null)
					, REQUEST_RECHARGE, false);
			break;
		case R.id.tvWalletWithdraw:
			toActivity(EditTextInfoWindow.createIntent(context, EditTextInfoWindow.TYPE_DECIMAL, "æ??çŽ°", null)
					, REQUEST_WITHDRAW, false);
			break;
		default:
			break;
		}
	}




	//ç±»ç›¸å…³ç›‘å?¬<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


	private static final int REQUEST_RECHARGE = 1;
	private static final int REQUEST_WITHDRAW = 2;
	private static final int REQUEST_PASSWORD = 3;

	private boolean isRecharge;
	private double change;
	@Override
	public void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);
		if (resultCode != RESULT_OK) {
			return;
		}
		switch (requestCode) {
		case REQUEST_RECHARGE:
		case REQUEST_WITHDRAW:
			if (data == null) {
				break;
			}
			String value = data.getStringExtra(EditTextInfoActivity.RESULT_VALUE);
			try {
				this.change = Double.valueOf(value);
			} catch (Exception e) {
				showShortToast("è¾“å…¥å€¼ä¸?æ˜¯æ•°å­—ï¼?");
			}
			if (change <= 0 || change > 10000) {
				showShortToast("è¾“å…¥å€¼å¿…é¡»ä¸º0-10000é—´çš„æ•°å­—ï¼?");
			} else {
				startActivityForResult(NumberPasswordActivity.createIntent(context), REQUEST_PASSWORD);
				overridePendingTransition(R.anim.bottom_push_in, R.anim.fade);
				this.isRecharge = requestCode == REQUEST_RECHARGE;
			}
			break;
		case REQUEST_PASSWORD:
			String password = data == null ? null : data.getStringExtra(EditTextInfoActivity.RESULT_PASSWORD);
			password = StringUtil.getString(password);
			if (password.isEmpty() == false) {
				showProgressDialog();
				HttpRequest.changeBalance(isRecharge ? change : -change, password
						, isRecharge ? HTTP_RECHARGE : HTTP_WITHDRAW, this);
			}
			break;
		}

	}


	//ç±»ç›¸å…³ç›‘å?¬>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

	//ç³»ç»Ÿè‡ªå¸¦ç›‘å?¬>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


	//Eventäº‹ä»¶åŒº(å?ªè¦?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?å°±æ˜¯)>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>








	//å†…éƒ¨ç±»,å°½é‡?å°‘ç”¨<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



	//å†…éƒ¨ç±»,å°½é‡?å°‘ç”¨>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

}
