/*-
 * <<
 * task
 * ==
 * Copyright (C) 2019 sia
 * ==
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * >>
 */

package com.sia.core.web.vo;

import com.google.common.collect.Maps;
import com.sia.core.helper.JSONHelper;

import java.io.Serializable;
import java.util.Map;

/**
 *
 * 1ã€?å¯¹äºŽæˆ?åŠŸçš„è¿”å›žï¼Œæœ‰dataçš„è¿”å›ždataï¼Œmessageæ˜¯"æˆ?åŠŸ"ï¼Œæ²¡æœ‰dataçš„dataä¸ºnullï¼Œmessageæ˜¯"æˆ?åŠŸ"ï¼›
 * 2ã€?å¯¹äºŽå¤±è´¥çš„è¿”å›žï¼Œä¸€èˆ¬å¤±è´¥è¿”å›žï¼Œmessageæ˜¯"å¤±è´¥"ï¼Œç‰¹æ®Šå¤±è´¥è¿”å›žï¼Œmessageæ˜¯å¤±è´¥åŽŸå› ã€‚
 * @description JobMTaskVO
 * @see
 * @author MAOZW
 * @date 2018-04-18 11:10
 * @version V1.0.0
 **/
public class ResultBody<T extends Object> implements Serializable {

    /**
     * è¿”å›žç ?
     */
    private int code = 0;

    /**
     * é”™è¯¯
     */
    private String error;

    /**
     * è¿”å›žæ¶ˆæ?¯
     */
    private String message;

    /**
     * è¿”å›žæ•°æ?®
     */
    private T data;

    /**
     * å…ƒæ•°æ?®
     */
    private Map<String, Object> extra;

    /**
     * @return true
     */
    public static String isOkay() {
        return JSONHelper.toString(true);
    }

    /**
     * @return false
     */
    public static String isNope() {
        return JSONHelper.toString(false);
    }

    /**
     * @return success
     */
    public static String isSuccess() {
        return "success";
    }

    /**
     * @return fail
     */
    public static String isFail() {
        return "fail";
    }

    /**
     * æˆ?åŠŸè¿”å›ž
     *
     * @return message
     */
    public static String success() {
        return toString(new ResultBody().setMessage("æˆ?åŠŸ"));
    }

    public static <T> String success(T data) {
        return toString(new ResultBody().setData(data).setMessage("æˆ?åŠŸ"));
    }

    public static <T> String success(String message) {
        return toString(new ResultBody().setMessage(message));
    }

    public static <T> String success(T data, String message) {
        return toString(new ResultBody().setData(data).setMessage(message));
    }

    /**
     * å¤±è´¥è¿”å›ž
     *
     * @return
     */
    public static String failed() {
        return toString(new ResultBody().setCode(ResultEnum.FAIL.getCode()).setMessage(ResultEnum.FAIL.getMessage()));
    }

    /**
     * è¿”å›žå¤±è´¥ï¼šåŒ…å?«è‡ªå®šä¹‰æ¶ˆæ?¯
     *
     * @param message å¤±è´¥æ¶ˆæ?¯
     * @return
     */
    public static String failed(String message) {
        return toString(new ResultBody().setCode(ResultEnum.FAIL.getCode()).setMessage(message));
    }

    /**
     * è¿”å›žå¤±è´¥ï¼šåŒ…å?«è‡ªå®šä¹‰æ¶ˆæ?¯ + è¿”å›žç ?
     *
     * @param code è¿”å›žç ?
     * @param msg  æ¶ˆæ?¯
     * @return
     */
    public static String failed(Integer code, String msg) {
        return toString(new ResultBody().setCode(code).setMessage(msg));
    }

    public static String failed(ResultEnum resultEnum) {
        return toString(new ResultBody().setCode(resultEnum.getCode()).setMessage(resultEnum.getMessage()));
    }

    public static String error() {
        return toString(new ResultBody().setCode(ResultEnum.ERROR.getCode()).setMessage(ResultEnum.ERROR.getMessage()));
    }

    public static String toString(Object data) {
        return JSONHelper.toString(data);
    }

    /**
     * å®šä¹‰è¿”å›žç ?
     */
    public enum ResultEnum {

        /**
         * è¿”å›žç ? ç±»åž‹
         */
        SUCCESS(1000, "æˆ?åŠŸ"),
        FAIL(4000, "å¤±è´¥"),
        WARNING(5000, "è­¦å‘Š"),

        /**
         * å®¢æœ?ç«¯é”™è¯¯
         */
        REQUEST_FAIL_PARAM(4001, "å?‚æ•°è¾“å…¥ä¸?æ­£ç¡®"),
        REQUEST_FAIL_NOT_AUTH(4002, "æ²¡æœ‰æ?ƒé™?"),

        /**
         * æœ?åŠ¡ç«¯é”™è¯¯
         */
        ERROR(5000, "å¼‚å¸¸"),
        SERVICE_FAIL_NOT_FOUND(5001, "æœ?åŠ¡æœªæ‰¾åˆ°"),
        TASK_CHECK(5002,"è¯¥TASKå·²è¢«JOBå¼•ç”¨ï¼Œä¸?èƒ½åˆ é™¤"),
        DAG_CHECK(5003, "è¯¥TASKé…?ç½®å­˜åœ¨çŽ¯è·¯"),
        JOB_NO_TASK_CONFIG(5004, "è¯¥JOBæ²¡æœ‰é…?ç½®TASK"),
        TASK_ALREADY_EXISTED(5005, "Task_Keyå·²å­˜åœ¨"),
        JOB_ALREADY_EXISTED(5006, "Job_Keyå·²å­˜åœ¨");


        int code;

        String message;

        ResultEnum() {
        }

        ResultEnum(int code, String message) {
            this.code = code;
            this.message = message;
        }

        public int getCode() {
            return code;
        }

        public String getMessage() {
            return message;
        }
    }


    public int getCode() {
        return code;
    }

    public ResultBody setCode(int code) {
        this.code = code;
        return this;
    }

    public String getMessage() {
        return message;
    }

    public ResultBody setMessage(String message) {
        this.message = message;
        return this;
    }

    public T getData() {
        return data;
    }

    public ResultBody setData(T data) {
        this.data = data;
        return this;
    }

    public Map<String, Object> getExtra() {
        return extra;
    }

    public ResultBody setExtra(Map<String, Object> extra) {
        this.extra = extra;
        return this;
    }

    public ResultBody putExtra(String key, Object value) {
        if (this.extra == null) {
            this.extra = Maps.newHashMap();
        }
        this.extra.put(key, value);
        return this;
    }

}
