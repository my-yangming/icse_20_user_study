/*
 * <summary></summary>
 * <author>He Han</author>
 * <email>hankcs.cn@gmail.com</email>
 * <create-date>2014/11/25 17:55</create-date>
 *
 * <copyright file="ByteUtil.java" company="ä¸Šæµ·æž—åŽŸä¿¡æ?¯ç§‘æŠ€æœ‰é™?å…¬å?¸">
 * Copyright (c) 2003-2014, ä¸Šæµ·æž—åŽŸä¿¡æ?¯ç§‘æŠ€æœ‰é™?å…¬å?¸. All Right Reserved, http://www.linrunsoft.com/
 * This source is subject to the LinrunSpace License. Please contact ä¸Šæµ·æž—åŽŸä¿¡æ?¯ç§‘æŠ€æœ‰é™?å…¬å?¸ to get more information.
 * </copyright>
 */
package com.hankcs.hanlp.utility;

import java.io.DataOutputStream;
import java.io.IOException;

/**
 * å¯¹æ•°å­—å’Œå­—èŠ‚è¿›è¡Œè½¬æ?¢ã€‚<br>
 * åŸºç¡€çŸ¥è¯†ï¼š<br>
 * å?‡è®¾æ•°æ?®å­˜å‚¨æ˜¯ä»¥å¤§ç«¯æ¨¡å¼?å­˜å‚¨çš„ï¼š<br>
 * byte: å­—èŠ‚ç±»åž‹ å? 8ä½?äºŒè¿›åˆ¶ 00000000<br>
 * char: å­—ç¬¦ç±»åž‹ å? 2ä¸ªå­—èŠ‚ 16ä½?äºŒè¿›åˆ¶ byte[0] byte[1]<br>
 * int : æ•´æ•°ç±»åž‹ å? 4ä¸ªå­—èŠ‚ 32ä½?äºŒè¿›åˆ¶ byte[0] byte[1] byte[2] byte[3]<br>
 * long: é•¿æ•´æ•°ç±»åž‹ å? 8ä¸ªå­—èŠ‚ 64ä½?äºŒè¿›åˆ¶ byte[0] byte[1] byte[2] byte[3] byte[4] byte[5]
 * byte[6] byte[7]<br>
 * float: æµ®ç‚¹æ•°(å°?æ•°) å? 4ä¸ªå­—èŠ‚ 32ä½?äºŒè¿›åˆ¶ byte[0] byte[1] byte[2] byte[3]<br>
 * double: å?Œç²¾åº¦æµ®ç‚¹æ•°(å°?æ•°) å? 8ä¸ªå­—èŠ‚ 64ä½?äºŒè¿›åˆ¶ byte[0] byte[1] byte[2] byte[3] byte[4]
 * byte[5] byte[6] byte[7]<br>
 */
public class ByteUtil
{

    /**
     * å°†ä¸€ä¸ª2ä½?å­—èŠ‚æ•°ç»„è½¬æ?¢ä¸ºcharå­—ç¬¦ã€‚<br>
     * æ³¨æ„?ï¼Œå‡½æ•°ä¸­ä¸?ä¼šå¯¹å­—èŠ‚æ•°ç»„é•¿åº¦è¿›è¡Œåˆ¤æ–­ï¼Œè¯·è‡ªè¡Œä¿?è¯?ä¼ å…¥å?‚æ•°çš„æ­£ç¡®æ€§ã€‚
     *
     * @param b å­—èŠ‚æ•°ç»„
     * @return charå­—ç¬¦
     */
    public static char bytesToChar(byte[] b)
    {
        char c = (char) ((b[0] << 8) & 0xFF00L);
        c |= (char) (b[1] & 0xFFL);
        return c;
    }

    /**
     * å°†ä¸€ä¸ª8ä½?å­—èŠ‚æ•°ç»„è½¬æ?¢ä¸ºå?Œç²¾åº¦æµ®ç‚¹æ•°ã€‚<br>
     * æ³¨æ„?ï¼Œå‡½æ•°ä¸­ä¸?ä¼šå¯¹å­—èŠ‚æ•°ç»„é•¿åº¦è¿›è¡Œåˆ¤æ–­ï¼Œè¯·è‡ªè¡Œä¿?è¯?ä¼ å…¥å?‚æ•°çš„æ­£ç¡®æ€§ã€‚
     *
     * @param b å­—èŠ‚æ•°ç»„
     * @return å?Œç²¾åº¦æµ®ç‚¹æ•°
     */
    public static double bytesToDouble(byte[] b)
    {
        return Double.longBitsToDouble(bytesToLong(b));
    }

    /**
     * è¯»å?–doubleï¼Œé«˜ä½?åœ¨å‰?
     *
     * @param bytes
     * @param start
     * @return
     */
    public static double bytesHighFirstToDouble(byte[] bytes, int start)
    {
        long l = ((long) bytes[start] << 56) & 0xFF00000000000000L;
        // å¦‚æžœä¸?å¼ºåˆ¶è½¬æ?¢ä¸ºlongï¼Œé‚£ä¹ˆé»˜è®¤ä¼šå½“ä½œintï¼Œå¯¼è‡´æœ€é«˜32ä½?ä¸¢å¤±
        l |= ((long) bytes[1 + start] << 48) & 0xFF000000000000L;
        l |= ((long) bytes[2 + start] << 40) & 0xFF0000000000L;
        l |= ((long) bytes[3 + start] << 32) & 0xFF00000000L;
        l |= ((long) bytes[4 + start] << 24) & 0xFF000000L;
        l |= ((long) bytes[5 + start] << 16) & 0xFF0000L;
        l |= ((long) bytes[6 + start] << 8) & 0xFF00L;
        l |= (long) bytes[7 + start] & 0xFFL;

        return Double.longBitsToDouble(l);
    }

    /**
     * å°†ä¸€ä¸ª4ä½?å­—èŠ‚æ•°ç»„è½¬æ?¢ä¸ºæµ®ç‚¹æ•°ã€‚<br>
     * æ³¨æ„?ï¼Œå‡½æ•°ä¸­ä¸?ä¼šå¯¹å­—èŠ‚æ•°ç»„é•¿åº¦è¿›è¡Œåˆ¤æ–­ï¼Œè¯·è‡ªè¡Œä¿?è¯?ä¼ å…¥å?‚æ•°çš„æ­£ç¡®æ€§ã€‚
     *
     * @param b å­—èŠ‚æ•°ç»„
     * @return æµ®ç‚¹æ•°
     */
    public static float bytesToFloat(byte[] b)
    {
        return Float.intBitsToFloat(bytesToInt(b));
    }

    /**
     * å°†ä¸€ä¸ª4ä½?å­—èŠ‚æ•°ç»„è½¬æ?¢ä¸º4æ•´æ•°ã€‚<br>
     * æ³¨æ„?ï¼Œå‡½æ•°ä¸­ä¸?ä¼šå¯¹å­—èŠ‚æ•°ç»„é•¿åº¦è¿›è¡Œåˆ¤æ–­ï¼Œè¯·è‡ªè¡Œä¿?è¯?ä¼ å…¥å?‚æ•°çš„æ­£ç¡®æ€§ã€‚
     *
     * @param b å­—èŠ‚æ•°ç»„
     * @return æ•´æ•°
     */
    public static int bytesToInt(byte[] b)
    {
        int i = (b[0] << 24) & 0xFF000000;
        i |= (b[1] << 16) & 0xFF0000;
        i |= (b[2] << 8) & 0xFF00;
        i |= b[3] & 0xFF;
        return i;
    }

    /**
     * å°†ä¸€ä¸ª8ä½?å­—èŠ‚æ•°ç»„è½¬æ?¢ä¸ºé•¿æ•´æ•°ã€‚<br>
     * æ³¨æ„?ï¼Œå‡½æ•°ä¸­ä¸?ä¼šå¯¹å­—èŠ‚æ•°ç»„é•¿åº¦è¿›è¡Œåˆ¤æ–­ï¼Œè¯·è‡ªè¡Œä¿?è¯?ä¼ å…¥å?‚æ•°çš„æ­£ç¡®æ€§ã€‚
     *
     * @param b å­—èŠ‚æ•°ç»„
     * @return é•¿æ•´æ•°
     */
    public static long bytesToLong(byte[] b)
    {
        long l = ((long) b[0] << 56) & 0xFF00000000000000L;
        // å¦‚æžœä¸?å¼ºåˆ¶è½¬æ?¢ä¸ºlongï¼Œé‚£ä¹ˆé»˜è®¤ä¼šå½“ä½œintï¼Œå¯¼è‡´æœ€é«˜32ä½?ä¸¢å¤±
        l |= ((long) b[1] << 48) & 0xFF000000000000L;
        l |= ((long) b[2] << 40) & 0xFF0000000000L;
        l |= ((long) b[3] << 32) & 0xFF00000000L;
        l |= ((long) b[4] << 24) & 0xFF000000L;
        l |= ((long) b[5] << 16) & 0xFF0000L;
        l |= ((long) b[6] << 8) & 0xFF00L;
        l |= (long) b[7] & 0xFFL;
        return l;
    }

    public static long bytesHighFirstToLong(byte[] b)
    {
        long l = ((long) b[0] << 56) & 0xFF00000000000000L;
        // å¦‚æžœä¸?å¼ºåˆ¶è½¬æ?¢ä¸ºlongï¼Œé‚£ä¹ˆé»˜è®¤ä¼šå½“ä½œintï¼Œå¯¼è‡´æœ€é«˜32ä½?ä¸¢å¤±
        l |= ((long) b[1] << 48) & 0xFF000000000000L;
        l |= ((long) b[2] << 40) & 0xFF0000000000L;
        l |= ((long) b[3] << 32) & 0xFF00000000L;
        l |= ((long) b[4] << 24) & 0xFF000000L;
        l |= ((long) b[5] << 16) & 0xFF0000L;
        l |= ((long) b[6] << 8) & 0xFF00L;
        l |= (long) b[7] & 0xFFL;
        return l;
    }

    /**
     * å°†ä¸€ä¸ªcharå­—ç¬¦è½¬æ?¢ä½?å­—èŠ‚æ•°ç»„ï¼ˆ2ä¸ªå­—èŠ‚ï¼‰ï¼Œb[0]å­˜å‚¨é«˜ä½?å­—ç¬¦ï¼Œå¤§ç«¯
     *
     * @param c å­—ç¬¦ï¼ˆjava char 2ä¸ªå­—èŠ‚ï¼‰
     * @return ä»£è¡¨å­—ç¬¦çš„å­—èŠ‚æ•°ç»„
     */
    public static byte[] charToBytes(char c)
    {
        byte[] b = new byte[8];
        b[0] = (byte) (c >>> 8);
        b[1] = (byte) c;
        return b;
    }

    /**
     * å°†ä¸€ä¸ªå?Œç²¾åº¦æµ®ç‚¹æ•°è½¬æ?¢ä½?å­—èŠ‚æ•°ç»„ï¼ˆ8ä¸ªå­—èŠ‚ï¼‰ï¼Œb[0]å­˜å‚¨é«˜ä½?å­—ç¬¦ï¼Œå¤§ç«¯
     *
     * @param d å?Œç²¾åº¦æµ®ç‚¹æ•°
     * @return ä»£è¡¨å?Œç²¾åº¦æµ®ç‚¹æ•°çš„å­—èŠ‚æ•°ç»„
     */
    public static byte[] doubleToBytes(double d)
    {
        return longToBytes(Double.doubleToLongBits(d));
    }

    /**
     * å°†ä¸€ä¸ªæµ®ç‚¹æ•°è½¬æ?¢ä¸ºå­—èŠ‚æ•°ç»„ï¼ˆ4ä¸ªå­—èŠ‚ï¼‰ï¼Œb[0]å­˜å‚¨é«˜ä½?å­—ç¬¦ï¼Œå¤§ç«¯
     *
     * @param f æµ®ç‚¹æ•°
     * @return ä»£è¡¨æµ®ç‚¹æ•°çš„å­—èŠ‚æ•°ç»„
     */
    public static byte[] floatToBytes(float f)
    {
        return intToBytes(Float.floatToIntBits(f));
    }

    /**
     * å°†ä¸€ä¸ªæ•´æ•°è½¬æ?¢ä½?å­—èŠ‚æ•°ç»„(4ä¸ªå­—èŠ‚)ï¼Œb[0]å­˜å‚¨é«˜ä½?å­—ç¬¦ï¼Œå¤§ç«¯
     *
     * @param i æ•´æ•°
     * @return ä»£è¡¨æ•´æ•°çš„å­—èŠ‚æ•°ç»„
     */
    public static byte[] intToBytes(int i)
    {
        byte[] b = new byte[4];
        b[0] = (byte) (i >>> 24);
        b[1] = (byte) (i >>> 16);
        b[2] = (byte) (i >>> 8);
        b[3] = (byte) i;
        return b;
    }

    /**
     * å°†ä¸€ä¸ªé•¿æ•´æ•°è½¬æ?¢ä½?å­—èŠ‚æ•°ç»„(8ä¸ªå­—èŠ‚)ï¼Œb[0]å­˜å‚¨é«˜ä½?å­—ç¬¦ï¼Œå¤§ç«¯
     *
     * @param l é•¿æ•´æ•°
     * @return ä»£è¡¨é•¿æ•´æ•°çš„å­—èŠ‚æ•°ç»„
     */
    public static byte[] longToBytes(long l)
    {
        byte[] b = new byte[8];
        b[0] = (byte) (l >>> 56);
        b[1] = (byte) (l >>> 48);
        b[2] = (byte) (l >>> 40);
        b[3] = (byte) (l >>> 32);
        b[4] = (byte) (l >>> 24);
        b[5] = (byte) (l >>> 16);
        b[6] = (byte) (l >>> 8);
        b[7] = (byte) (l);
        return b;
    }

    /**
     * å­—èŠ‚æ•°ç»„å’Œæ•´åž‹çš„è½¬æ?¢
     *
     * @param bytes å­—èŠ‚æ•°ç»„
     * @return æ•´åž‹
     */
    public static int bytesToInt(byte[] bytes, int start)
    {
        int num = bytes[start] & 0xFF;
        num |= ((bytes[start + 1] << 8) & 0xFF00);
        num |= ((bytes[start + 2] << 16) & 0xFF0000);
        num |= ((bytes[start + 3] << 24) & 0xFF000000);
        return num;
    }

    /**
     * å­—èŠ‚æ•°ç»„å’Œæ•´åž‹çš„è½¬æ?¢ï¼Œé«˜ä½?åœ¨å‰?ï¼Œé€‚ç”¨äºŽè¯»å?–writeIntçš„æ•°æ?®
     *
     * @param bytes å­—èŠ‚æ•°ç»„
     * @return æ•´åž‹
     */
    public static int bytesHighFirstToInt(byte[] bytes, int start)
    {
        int num = bytes[start + 3] & 0xFF;
        num |= ((bytes[start + 2] << 8) & 0xFF00);
        num |= ((bytes[start + 1] << 16) & 0xFF0000);
        num |= ((bytes[start] << 24) & 0xFF000000);
        return num;
    }

    /**
     * å­—èŠ‚æ•°ç»„è½¬charï¼Œé«˜ä½?åœ¨å‰?ï¼Œé€‚ç”¨äºŽè¯»å?–writeCharçš„æ•°æ?®
     *
     * @param bytes
     * @param start
     * @return
     */
    public static char bytesHighFirstToChar(byte[] bytes, int start)
    {
        char c = (char) (((bytes[start] & 0xFF) << 8) | (bytes[start + 1] & 0xFF));
        return c;
    }

    /**
     * è¯»å?–floatï¼Œé«˜ä½?åœ¨å‰?
     *
     * @param bytes
     * @param start
     * @return
     */
    public static float bytesHighFirstToFloat(byte[] bytes, int start)
    {
        int l = bytesHighFirstToInt(bytes, start);
        return Float.intBitsToFloat(l);
    }

    /**
     * æ— ç¬¦å?·æ•´åž‹è¾“å‡º
     * @param out
     * @param uint
     * @throws IOException
     */
    public static void writeUnsignedInt(DataOutputStream out, int uint) throws IOException
    {
        out.writeByte((byte) ((uint >>> 8) & 0xFF));
        out.writeByte((byte) ((uint >>> 0) & 0xFF));
    }

    public static int convertTwoCharToInt(char high, char low)
    {
        int result = high << 16;
        result |= low;
        return result;
    }

    public static char[] convertIntToTwoChar(int n)
    {
        char[] result = new char[2];
        result[0] = (char) (n >>> 16);
        result[1] = (char) (0x0000FFFF & n);
        return result;
    }
}
