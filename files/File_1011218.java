package jetbrains.mps.lang.editor.findUsages;

/*Generated by MPS */

import jetbrains.mps.ide.findusages.BaseFindUsagesDescriptor;
import org.jetbrains.mps.openapi.model.SModelReference;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.ide.findusages.findalgorithm.finders.IInterfacedFinder;
import jetbrains.mps.smodel.runtime.FinderRegistry;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class FindUsagesDescriptor extends BaseFindUsagesDescriptor {
  /*package*/ static final SModelReference DECLARING_MODEL = PersistenceFacade.getInstance().createModelReference("r:0195c266-9b28-400e-9417-87a3191713c0(jetbrains.mps.lang.editor.findUsages)");

  public FindUsagesDescriptor() {
  }

  @Override
  public IInterfacedFinder instantiate(int token) throws IllegalArgumentException {
    switch (token) {
      case 0:
        return new DefaultMenuReferences_Finder();
      default:
        throw new IllegalArgumentException(String.format("Illegal identifier of a finder implementation: %d", token));
    }
  }

  @Override
  public void init(FinderRegistry reg) {
    reg.add(MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x16be955f384efce1L, "jetbrains.mps.lang.editor.structure.TransformationMenu_Default"), 0, "DefaultMenuReferences");
  }
}
