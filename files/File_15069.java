/*Copyright Â©2015 TommyLemon(https://github.com/TommyLemon)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.*/

package zuo.biao.library.base;

import java.util.ArrayList;
import java.util.List;

import zuo.biao.library.interfaces.OnReachViewBorderListener;
import zuo.biao.library.util.CommonUtil;
import zuo.biao.library.util.SettingUtil;
import android.app.Activity;
import android.content.Intent;
import android.content.res.Resources;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

/**åŸºç¡€Adapter
 * <br> é€‚ç”¨äºŽListView,GridViewç­‰AbsListViewçš„å­?ç±»
 * @author Lemon
 * @warn å‡ºäºŽæ€§èƒ½è€ƒè™‘ï¼Œé‡Œé?¢å¾ˆå¤šæ–¹æ³•å¯¹å?˜é‡?(æ¯”å¦‚list)éƒ½æ²¡æœ‰åˆ¤æ–­ï¼Œåº”åœ¨adapterå¤–åˆ¤æ–­
 * @param <T> æ•°æ?®æ¨¡åž‹(model/JavaBean)ç±»
 * @use extends BaseAdapter<T>, å…·ä½“å?‚è€ƒ.DemoAdapter
 *      <br> é¢„åŠ è½½ä½¿ç”¨ï¼š
 *      <br> 1.åœ¨å­?ç±»getViewä¸­æœ€å?Ž return super.getView(position, convertView, parent);//é?žå¿…é¡»ï¼Œå?ªåœ¨é¢„åŠ è½½ç”¨åˆ°
 *      <br> 2.åœ¨ä½¿ç”¨å­?ç±»çš„ç±»ä¸­è°ƒç”¨å­?ç±»setOnReachViewBorderListeneræ–¹æ³•ï¼ˆè¿™ä¸ªæ–¹æ³•å°±åœ¨è¿™ä¸ªç±»ï¼‰//é?žå¿…é¡»
 */
public abstract class BaseAdapter<T> extends android.widget.BaseAdapter {
	//	private static final String TAG = "BaseAdapter";


	/**
	 * ç®¡ç?†æ•´ä¸ªç•Œé?¢çš„Activityå®žä¾‹
	 */
	public Activity context;
	/**
	 * å¸ƒå±€è§£é‡Šå™¨,ç”¨æ?¥å®žä¾‹åŒ–åˆ—è¡¨çš„itemçš„ç•Œé?¢
	 */
	public LayoutInflater inflater;
	/**
	 * èµ„æº?èŽ·å?–å™¨ï¼Œç”¨äºŽèŽ·å?–resç›®å½•ä¸‹çš„æ–‡ä»¶å?Šæ–‡ä»¶ä¸­çš„å†…å®¹ç­‰
	 */
	public Resources resources;
	public BaseAdapter(Activity context) {
		this.context = context;

		inflater = context.getLayoutInflater();
		resources = context.getResources();
	}

	/**
	 * ä¼ è¿›æ?¥çš„æ•°æ?®åˆ—è¡¨
	 */
	public List<T> list;
	public List<T> getList() {
		return list;
	}
	/**åˆ·æ–°åˆ—è¡¨
	 */
	public synchronized void refresh(List<T> list) {
		this.list = list == null ? null : new ArrayList<T>(list);
		notifyDataSetChanged();
	}
	
	@Override
	public int getCount() {
		return list == null ? 0 : list.size();
	}
	/**èŽ·å?–itemæ•°æ?®
	 */
	@Override
	public T getItem(int position) {
		return list.get(position);
	}
	/**èŽ·å?–itemçš„idï¼Œå¦‚æžœä¸?èƒ½æ»¡è¶³éœ€æ±‚å?¯åœ¨å­?ç±»é‡?å†™
	 * @param position
	 * @return position
	 */
	@Override
	public long getItemId(int position) {
		return position;
	}

	
	//é¢„åŠ è½½ï¼Œå?¯ä¸?ä½¿ç”¨ <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	
	protected OnReachViewBorderListener onReachViewBorderListener;
	/**è®¾ç½®åˆ°è¾¾parentçš„è¾¹ç•Œçš„ç›‘å?¬
	 * @param onReachViewBorderListener
	 */
	public void setOnReachViewBorderListener(OnReachViewBorderListener onReachViewBorderListener) {
		this.onReachViewBorderListener = onReachViewBorderListener;
	}

	/**
	 * é¢„åŠ è½½æ??å‰?æ•°ã€‚
	 * <br > = 0 - åˆ—è¡¨æ»šåˆ°åº•éƒ¨(æœ€å?Žä¸€ä¸ªItem Viewæ˜¾ç¤º)æ—¶åŠ è½½æ›´å¤š
	 * <br > < 0 - ç¦?ç”¨åŠ è½½æ›´å¤š
	 * <br > > 0 - åˆ—è¡¨æ»šåˆ°å€’æ•°ç¬¬preloadCountä¸ªItem Viewæ˜¾ç¤ºæ—¶åŠ è½½æ›´å¤š
	 * @use å?¯åœ¨å­?ç±»getViewè¢«è°ƒç”¨å‰?(å?¯ä»¥æ˜¯åœ¨æž„é€ å™¨å†…)èµ‹å€¼
	 */
	protected int preloadCount = 0;

	/**èŽ·å?–itemå¯¹åº”Viewçš„æ–¹æ³•ï¼Œå¸¦itemæ»‘åˆ°åº•éƒ¨ç­‰ç›‘å?¬
	 * @param position
	 * @param convertView
	 * @param parent
	 * @return
	 * @use å­?ç±»çš„getViewä¸­æœ€å?Ž return super.getView(position, convertView, parent);
	 */
	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		if (SettingUtil.preload && onReachViewBorderListener != null && position >= getCount() - 1 - preloadCount) {
			onReachViewBorderListener.onReach(OnReachViewBorderListener.TYPE_BOTTOM, parent);
		}
		return convertView;
	}

	//é¢„åŠ è½½ï¼Œå?¯ä¸?ä½¿ç”¨ >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>




	//show short toast æ–¹æ³•<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	/**å¿«æ?·æ˜¾ç¤ºshort toastæ–¹æ³•ï¼Œéœ€è¦?long toastå°±ç”¨ Toast.makeText(string, Toast.LENGTH_LONG).show(); ---ä¸?å¸¸ç”¨æ‰€ä»¥è¿™ä¸ªç±»é‡Œä¸?å†™
	 * @param stringResId
	 */
	public void showShortToast(int stringResId) {
		CommonUtil.showShortToast(context, stringResId);
	}
	/**å¿«æ?·æ˜¾ç¤ºshort toastæ–¹æ³•ï¼Œéœ€è¦?long toastå°±ç”¨ Toast.makeText(string, Toast.LENGTH_LONG).show(); ---ä¸?å¸¸ç”¨æ‰€ä»¥è¿™ä¸ªç±»é‡Œä¸?å†™
	 * @param string
	 */
	public void showShortToast(String string) {
		CommonUtil.showShortToast(context, string);
	}
	//show short toast æ–¹æ³•>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


	//å?¯åŠ¨æ–°Activityæ–¹æ³•<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

	/**æ‰“å¼€æ–°çš„Activityï¼Œå?‘å·¦æ»‘å…¥æ•ˆæžœ
	 * @param intent
	 */
	public void toActivity(final Intent intent) {
		CommonUtil.toActivity(context, intent);
	}
	/**æ‰“å¼€æ–°çš„Activity
	 * @param intent
	 * @param showAnimation
	 */
	public void toActivity(final Intent intent, final boolean showAnimation) {
		CommonUtil.toActivity(context, intent, showAnimation);
	}
	/**æ‰“å¼€æ–°çš„Activityï¼Œå?‘å·¦æ»‘å…¥æ•ˆæžœ
	 * @param intent
	 * @param requestCode
	 */
	public void toActivity(final Intent intent, final int requestCode) {
		CommonUtil.toActivity(context, intent, requestCode);
	}
	/**æ‰“å¼€æ–°çš„Activity
	 * @param intent
	 * @param requestCode
	 * @param showAnimation
	 */
	public void toActivity(final Intent intent, final int requestCode, final boolean showAnimation) {
		CommonUtil.toActivity(context, intent, requestCode, showAnimation);
	}
	//å?¯åŠ¨æ–°Activityæ–¹æ³•>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

}
