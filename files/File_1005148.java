package org.jeecgframework.core.extend.swftools;

import java.io.File;
import java.io.IOException;

import org.jeecgframework.core.util.FileUtils;
import org.jeecgframework.core.util.PinyinUtil;


public class SWFToolsSWFConverter implements SWFConverter {
	/** SWFTools pdf2swf.exeè·¯å¾„ */
	private static String PDF2SWF_PATH = ConStant.SWFTOOLS_PDF2SWF_PATH;

	/**
     * åˆ¤æ–­æ˜¯å?¦æ˜¯windowsæ“?ä½œç³»ç»Ÿ
      * @author chenj
     * @return
     */
   private  boolean isWindowsSystem() {
       String p = System.getProperty("os.name");
       return p.toLowerCase().indexOf("windows") >= 0 ? true : false;
   }

	public void convert2SWF(String inputFile, String swfFile, String extend) {
		File pdfFile = new File(inputFile);
		File outFile = new File(swfFile);
		
		if (!pdfFile.exists()) {
			 org.jeecgframework.core.util.LogUtil.info("PDFæ–‡ä»¶ä¸?å­˜åœ¨ï¼?");
			return;
		}
	
		if (outFile.exists()) {
			 org.jeecgframework.core.util.LogUtil.info("SWFæ–‡ä»¶å·²å­˜åœ¨ï¼?");
			return;
		}
		try {
			// å¼€å§‹è½¬æ?¢æ–‡æ¡£

			//Process process = Runtime.getRuntime().exec(command);
			Process process = null;
	        if (isWindowsSystem()) {
	            //å¦‚æžœæ˜¯windowsç³»ç»Ÿ
	              //å‘½ä»¤è¡Œå‘½ä»¤
	        	//String cmd = exePath + " \"" + fileDir + "\" -o \"" + filePath + "/" + fileName + ".swf\" -T 9 -f";
	        	//ConStant.getSWFToolsPath(extend)
	        	String command = ConStant.getSWFToolsPath(extend) + " \"" + inputFile

	        					+ "\" -o " +" \""+ swfFile +" \""+ " -s languagedir=D:\\xpdf-chinese-simplified -T 9 -f";
//	        					+ "\" -o " + swfFile + " -s languagedir=D:\\xpdf-chinese-simplified -T 9 -f";

	            //Runtimeæ‰§è¡Œå?Žè¿”å›žåˆ›å»ºçš„è¿›ç¨‹å¯¹è±¡
	        	process = Runtime.getRuntime().exec(command);
	        } else {
	            //å¦‚æžœæ˜¯linuxç³»ç»Ÿ,è·¯å¾„ä¸?èƒ½æœ‰ç©ºæ ¼ï¼Œè€Œä¸”ä¸€å®šä¸?èƒ½ç”¨å?Œå¼•å?·ï¼Œå?¦åˆ™æ— æ³•åˆ›å»ºè¿›ç¨‹
				  String[] command = new String[3];
				command[0] = ConStant.getSWFToolsForLinux(extend);
				command[1] = inputFile;
	              command[2] = swfFile;
	            //Runtimeæ‰§è¡Œå?Žè¿”å›žåˆ›å»ºçš„è¿›ç¨‹å¯¹è±¡
	              process = Runtime.getRuntime().exec(command);
	        }

			
			
			StreamGobbler errorGobbler = new StreamGobbler(
					process.getErrorStream(), "Error");
			StreamGobbler outputGobbler = new StreamGobbler(
					process.getInputStream(), "Output");
			errorGobbler.start();
			outputGobbler.start();
			try {
				process.waitFor();
				org.jeecgframework.core.util.LogUtil.info("æ—¶é—´-------"+process.waitFor());
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public void convert2SWF(String inputFile, String extend) {
		String swfFile = PinyinUtil.getPinYinHeadChar(FileUtils.getFilePrefix2(inputFile)) + ".swf";
		convert2SWF(inputFile, swfFile, extend);
	}

	/**
     * æµ‹è¯•mainæ–¹æ³•
      * @param args
     */
   public static void main(String[] args) {
       //è½¬æ?¢å™¨å®‰è£…è·¯å¾„
        String exePath = "D:/SWFTools/pdf2swf.exe";
        new SWFToolsSWFConverter().convert2SWF("C:/Users/chenj/Desktop/jeecg/é™ˆåŠ²ä»»åŠ¡.pdf", exePath);
   }

}
