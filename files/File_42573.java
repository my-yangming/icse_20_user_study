package com.roncoo.pay.reconciliation.utils.https;

import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSocketFactory;
import javax.net.ssl.TrustManager;
import java.io.IOException;
import java.io.OutputStream;
import java.net.URL;
import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;

public class HttpClientUtil {


    /**
     * @param requestUrl è¯·æ±‚åœ°å?€
     * @param method è¯·æ±‚æ–¹å¼?ï¼ˆGETã€?POSTï¼‰
     * @param outputStr æ??äº¤çš„æ•°æ?®
     * @throws Exception
     */
    public static HttpResponse httpsRequest(String requestUrl, String method, String outputStr) throws IOException {
        HttpsURLConnection connection = null;
        try {
            SSLSocketFactory ssf = null;
            try {
                // åˆ›å»ºSSLContextå¯¹è±¡ï¼Œå¹¶ä½¿ç”¨æˆ‘ä»¬æŒ‡å®šçš„ä¿¡ä»»ç®¡ç?†å™¨åˆ?å§‹åŒ–
                TrustManager[] tm = { new MyX509TrustManager() };
                SSLContext sslContext = SSLContext.getInstance("SSL", "SunJSSE");
                sslContext.init(null, tm, new java.security.SecureRandom());
                ssf = sslContext.getSocketFactory();
            } catch (NoSuchAlgorithmException e) {
                throw new IOException("å®žä¾‹åŒ–SSLContextå¤±è´¥", e);
            } catch (NoSuchProviderException e) {
                throw new IOException("å®žä¾‹åŒ–SSLContextå¤±è´¥", e);
            } catch (KeyManagementException e) {
                throw new IOException("åˆ?å§‹åŒ–SSLContextå¤±è´¥", e);
            }

            URL url = new URL(requestUrl);
            connection = (HttpsURLConnection) url.openConnection();
            connection.setSSLSocketFactory(ssf);

            connection.setDoOutput(true);
            connection.setDoInput(true);
            connection.setUseCaches(false);

            // è®¾ç½®è¯·æ±‚æ–¹å¼?ï¼ˆGET/POSTï¼‰
            connection.setRequestMethod(method);
            if ("GET".equalsIgnoreCase(method)) {
                connection.connect();
            }

            // å½“æœ‰æ•°æ?®éœ€è¦?æ??äº¤æ—¶
            if (null != outputStr) {
                OutputStream outputStream = connection.getOutputStream();
                // æ³¨æ„?ç¼–ç ?æ ¼å¼?ï¼Œé˜²æ­¢ä¸­æ–‡ä¹±ç ?
                outputStream.write(outputStr.getBytes("UTF-8"));
                outputStream.close();
            }

            return new HttpResponse(connection);
        } catch (IOException e) {
            if (connection != null) {
                connection.disconnect();
            }
            throw e;
        }
    }

    /**
     * @param requestUrl è¯·æ±‚åœ°å?€
     * @param method è¯·æ±‚æ–¹å¼?ï¼ˆGETã€?POSTï¼‰
     * @param outputStr æ??äº¤çš„æ•°æ?®
     * @throws Exception
     */
    public static HttpResponse httpsRequest2(String requestUrl, String method, String outputStr) throws IOException {
        HttpsURLConnection connection = null;
        try {
            SSLSocketFactory ssf = null;
            try {
                // åˆ›å»ºSSLContextå¯¹è±¡ï¼Œå¹¶ä½¿ç”¨æˆ‘ä»¬æŒ‡å®šçš„ä¿¡ä»»ç®¡ç?†å™¨åˆ?å§‹åŒ–
                TrustManager[] tm = { new MyX509TrustManager() };
                SSLContext sslContext = SSLContext.getInstance("SSL", "SunJSSE");
                sslContext.init(null, tm, new java.security.SecureRandom());
                ssf = sslContext.getSocketFactory();
            } catch (NoSuchAlgorithmException e) {
                throw new IOException("å®žä¾‹åŒ–SSLContextå¤±è´¥", e);
            } catch (NoSuchProviderException e) {
                throw new IOException("å®žä¾‹åŒ–SSLContextå¤±è´¥", e);
            } catch (KeyManagementException e) {
                throw new IOException("åˆ?å§‹åŒ–SSLContextå¤±è´¥", e);
            }

            URL url = new URL(null,requestUrl,new sun.net.www.protocol.https.Handler());
            connection = (HttpsURLConnection) url.openConnection();
            connection.setSSLSocketFactory(ssf);

            connection.setDoOutput(true);
            connection.setDoInput(true);
            connection.setUseCaches(false);

            // è®¾ç½®è¯·æ±‚æ–¹å¼?ï¼ˆGET/POSTï¼‰
            connection.setRequestMethod(method);
            if ("GET".equalsIgnoreCase(method)) {
                connection.connect();
            }

            // å½“æœ‰æ•°æ?®éœ€è¦?æ??äº¤æ—¶
            if (null != outputStr) {
                OutputStream outputStream = connection.getOutputStream();
                // æ³¨æ„?ç¼–ç ?æ ¼å¼?ï¼Œé˜²æ­¢ä¸­æ–‡ä¹±ç ?
                outputStream.write(outputStr.getBytes("UTF-8"));
                outputStream.close();
            }
            return new HttpResponse(connection);
        } catch (IOException e) {
            if (connection != null) {
                connection.disconnect();
            }
            throw e;
        }
    }

}

