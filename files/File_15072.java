/*Copyright Â©2015 TommyLemon(https://github.com/TommyLemon)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.*/

package zuo.biao.library.base;

import zuo.biao.library.util.Log;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentTransaction;
import android.view.View;
import android.view.View.OnClickListener;

/**åŸºç¡€åº•éƒ¨æ ‡ç­¾Activity
 * @author Lemon
 * @use extends BaseBottomTabActivity
 */
public abstract class BaseBottomTabActivity extends BaseActivity {
	private static final String TAG = "BaseBottomTabActivity";



	// UIæ˜¾ç¤ºåŒº(æ“?ä½œUIï¼Œä½†ä¸?å­˜åœ¨æ•°æ?®èŽ·å?–æˆ–å¤„ç?†ä»£ç ?ï¼Œä¹Ÿä¸?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?)<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


	protected static int[] tabClickIds;

	protected View[] vTabClickViews;
	protected View[][] vTabSelectViews;
	@Override
	public void initView() {// å¿…é¡»è°ƒç”¨

		tabClickIds = getTabClickIds();

		vTabClickViews = new View[getCount()];
		for (int i = 0; i < getCount(); i++) {
			vTabClickViews[i] = findViewById(tabClickIds[i]);
		}

		int[][] tabSelectIds = getTabSelectIds();
		if (tabSelectIds != null && tabSelectIds.length > 0) {
			vTabSelectViews = new View[tabSelectIds.length][getCount()];
			for (int i = 0; i < tabSelectIds.length; i++) {
				if (tabSelectIds[i] != null) {
					for (int j = 0; j < tabSelectIds[i].length; j++) {
						vTabSelectViews[i][j] = findViewById(tabSelectIds[i][j]);
					}
				}
			}
		}
	}


	/**é€‰æ‹©tabï¼Œåœ¨selectFragmenté‡Œè¢«è°ƒç”¨
	 * @param position
	 */
	protected abstract void selectTab(int position);

	/**è®¾ç½®é€‰ä¸­çŠ¶æ€?
	 * @param position 
	 */
	protected void setTabSelection(int position) {
		if (vTabSelectViews == null) {
			Log.e(TAG, "setTabSelection  vTabSelectViews == null >> return;");
			return;
		}
		for (int i = 0; i < vTabSelectViews.length; i++) {
			if (vTabSelectViews[i] == null) {
				Log.w(TAG, "setTabSelection  vTabSelectViews[" + i + "] == null >> continue;");
				continue;
			}
			for (int j = 0; j < vTabSelectViews[i].length; j++) {
				vTabSelectViews[i][j].setSelected(j == position);
			}
		}
	}

	protected int currentPosition = 0;
	/**é€‰æ‹©å¹¶æ˜¾ç¤ºfragment
	 * @param position
	 */
	public void selectFragment(int position) {
		if (fragments == null || fragments.length != getCount()) {
			removeAll();
			fragments = new Fragment[getCount()];
		}

		if (currentPosition == position) {
			if (fragments[position] != null && fragments[position].isVisible()) {
				Log.e(TAG, "selectFragment currentPosition == position" +
						" >> fragments[position] != null && fragments[position].isVisible()" +
						" >> return;	");
				return;
			}
		}

		if (fragments[position] == null) {
			fragments[position] = getFragment(position);
		}

		// ç”¨å…¨å±€çš„fragmentTransactionå› ä¸ºalready committed å´©æºƒ
		FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
		fragmentTransaction.hide(fragments[currentPosition]);
		if (fragments[position].isAdded() == false) {
			fragmentTransaction.add(getFragmentContainerResId(), fragments[position]);
		}
		fragmentTransaction.show(fragments[position]).commit();

		//æ¶ˆè€—èµ„æº?å¾ˆå°‘ï¼Œä¸?åƒ?Fragment<<<<<<
		setTabSelection(position);
		selectTab(position);
		//æ¶ˆè€—èµ„æº?å¾ˆå°‘ï¼Œä¸?åƒ?Fragment>>>>>>

		this.currentPosition = position;
	};


	protected void reload(int position) {
		remove(position);
		if (position == currentPosition) {
			selectFragment(position);
		}
	}
	protected void reloadAll() {
		runUiThread(new Runnable() {
			
			@Override
			public void run() {
				removeAll(true);
				selectFragment(currentPosition);				
			}
		});
	}
	protected void remove(int position) {
		remove(position, false);
	}
	protected void remove(int position, boolean destroy) {
		if (fragments != null && position >= 0 && position < fragments.length && fragments[position] != null) {
			try {
				fragmentManager.beginTransaction().remove(fragments[position]).commit();
			} catch (Exception e) {
				Log.e(TAG, "remove  try { fragmentManager.beginTransaction().remove(fragments[position]).commit();" +
						" } catch (Exception e) {\n" + e.getMessage());
				destroy = true;
			}
			if (destroy) {
				fragments[position].onDestroy();
				fragments[position] = null;
			}
		}
	}
	protected void removeAll() {
		removeAll(false);
	}
	protected void removeAll(boolean destroy) {
		if (fragments != null) {
			for (int i = 0; i < fragments.length; i++) {
				remove(i, destroy);
			}
		}
	}

	// UIæ˜¾ç¤ºåŒº(æ“?ä½œUIï¼Œä½†ä¸?å­˜åœ¨æ•°æ?®èŽ·å?–æˆ–å¤„ç?†ä»£ç ?ï¼Œä¹Ÿä¸?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?)>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>










	// Dataæ•°æ?®åŒº(å­˜åœ¨æ•°æ?®èŽ·å?–æˆ–å¤„ç?†ä»£ç ?ï¼Œä½†ä¸?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?)<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


	protected Fragment[] fragments;
	@Override
	public void initData() {// å¿…é¡»è°ƒç”¨

		// fragmentActivityå­?ç•Œé?¢åˆ?å§‹åŒ–<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

		selectFragment(currentPosition);

		// fragmentActivityå­?ç•Œé?¢åˆ?å§‹åŒ–>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

	}


	/**èŽ·å?–tabå†…è®¾ç½®ç‚¹å‡»äº‹ä»¶çš„Viewçš„id
	 * @param position
	 * @return
	 */
	protected abstract int[] getTabClickIds();

	/**èŽ·å?–tabå†…è®¾ç½®é€‰æ‹©äº‹ä»¶çš„Viewçš„idï¼ŒsetSelected(position == currentPositon)
	 * @return
	 * @warn è¿”å›žint[leghth0][leghth1]å¿…é¡»æ»¡è¶³leghth0 >= 1 && leghth1 = getCount() = getTabClickIds().length
	 */
	protected abstract int[][] getTabSelectIds();

	/**èŽ·å?–Fragmentå®¹å™¨çš„id
	 * @return
	 */
	public abstract int getFragmentContainerResId();

	/**èŽ·å?–æ–°çš„Fragment
	 * @param position
	 * @return
	 */
	protected abstract Fragment getFragment(int position);

	/**èŽ·å?–Tab(æˆ–Fragment)çš„æ•°é‡?
	 * @return
	 */
	public int getCount() {
		return tabClickIds == null ? 0 :tabClickIds.length;
	}

	// Dataæ•°æ?®åŒº(å­˜åœ¨æ•°æ?®èŽ·å?–æˆ–å¤„ç?†ä»£ç ?ï¼Œä½†ä¸?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?)>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>










	// Eventäº‹ä»¶åŒº(å?ªè¦?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?å°±æ˜¯)<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

	@Override
	public void initEvent() {// å¿…é¡»è°ƒç”¨

		for (int i = 0; i < vTabClickViews.length; i++) {
			final int which = i;
			vTabClickViews[which].setOnClickListener(new OnClickListener() {

				@Override
				public void onClick(View v) {
					selectFragment(which);
				}
			});
		}
	}

	// ç³»ç»Ÿè‡ªå¸¦ç›‘å?¬æ–¹æ³•<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


	// ç±»ç›¸å…³ç›‘å?¬<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


	// ç±»ç›¸å…³ç›‘å?¬>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

	// ç³»ç»Ÿè‡ªå¸¦ç›‘å?¬æ–¹æ³•>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


	// Eventäº‹ä»¶åŒº(å?ªè¦?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?å°±æ˜¯)>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>



	// å†…éƒ¨ç±»,å°½é‡?å°‘ç”¨<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

	// å†…éƒ¨ç±»,å°½é‡?å°‘ç”¨>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

}
