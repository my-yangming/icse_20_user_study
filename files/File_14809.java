/*Copyright Â©2016 TommyLemon(https://github.com/TommyLemon)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.*/

package apijson.demo.client.activity_fragment;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.KeyEvent;
import android.view.View;
import android.view.ViewGroup;

import apijson.demo.client.R;
import apijson.demo.client.application.APIJSONApplication;
import apijson.demo.client.base.BaseBottomTabActivity;
import apijson.demo.client.interfaces.TopBarMenuCallback;
import apijson.demo.client.model.User;
import apijson.demo.client.util.ActionUtil;
import apijson.demo.client.util.HttpRequest;
import zuo.biao.apijson.JSON;
import zuo.biao.apijson.JSONResponse;
import zuo.biao.library.base.BaseBroadcastReceiver;
import zuo.biao.library.interfaces.OnBottomDragListener;
import zuo.biao.library.manager.HttpManager.OnHttpResponseListener;
import zuo.biao.library.ui.EditTextInfoWindow;
import zuo.biao.library.util.Log;
import zuo.biao.library.util.SettingUtil;
import zuo.biao.library.util.StringUtil;

/**åº”ç”¨ä¸»é¡µ
 * @author Lemon
 * @use MainTabActivity.createIntent(...)
 */
public class MainTabActivity extends BaseBottomTabActivity implements OnBottomDragListener {
	private static final String TAG = "MainTabActivity";


	//å?¯åŠ¨æ–¹æ³•<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

	/**å?¯åŠ¨è¿™ä¸ªActivityçš„Intent
	 * @param context
	 * @return
	 */
	public static Intent createIntent(Context context) {
		return new Intent(context, MainTabActivity.class);
	}


	//å?¯åŠ¨æ–¹æ³•>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


	@Override
	public Activity getActivity() {
		return this;
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main_tab_activity, this);

		//åŠŸèƒ½å½’ç±»åˆ†åŒºæ–¹æ³•ï¼Œå¿…é¡»è°ƒç”¨<<<<<<<<<<
		initView();
		initData();
		initEvent();
		//åŠŸèƒ½å½’ç±»åˆ†åŒºæ–¹æ³•ï¼Œå¿…é¡»è°ƒç”¨>>>>>>>>>>


		BaseBroadcastReceiver.register(context, receiver
				, new String[]{ACTION_EXIT_APP, ActionUtil.ACTION_RELOAD_CURRENT_USER});


		if (SettingUtil.isOnTestMode) {
			showShortToast("æµ‹è¯•æœ?åŠ¡å™¨\n" + HttpRequest.URL_BASE);

			HttpRequest.get(JSON.parseObject(JSON.toJSONString(TestRequestAndResponseJava.request()), zuo.biao.apijson.JSONObject.class), 0, new OnHttpResponseListener() {
				@Override
				public void onHttpResponse(int requestCode, String resultJson, Exception e) {
					TestRequestAndResponseJava.response(resultJson);
					TestRequestAndResponseJava.smartResponse(resultJson);
				}
			});


			HttpRequest.get(JSON.parseObject(JSON.toJSONString(TestRequestAndResponseKt.request()), zuo.biao.apijson.JSONObject.class), 0, new OnHttpResponseListener() {
				@Override
				public void onHttpResponse(int requestCode, String resultJson, Exception e) {
					TestRequestAndResponseKt.response(resultJson);
					TestRequestAndResponseKt.smartResponse(resultJson);
				}
			});
		}

	}



	// UIæ˜¾ç¤ºåŒº(æ“?ä½œUIï¼Œä½†ä¸?å­˜åœ¨æ•°æ?®èŽ·å?–æˆ–å¤„ç?†ä»£ç ?ï¼Œä¹Ÿä¸?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?)<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

	private ViewGroup llMainTabLeftContainer;
	private ViewGroup llMainTabRightContainer;

	@Override
	public void initView() {// å¿…é¡»è°ƒç”¨
		super.initView();
		exitAnim = R.anim.bottom_push_out;

		llMainTabLeftContainer = (ViewGroup) findViewById(R.id.llMainTabLeftContainer);
		llMainTabRightContainer = (ViewGroup) findViewById(R.id.llMainTabRightContainer);
	}


	@Override
	protected int[] getTabClickIds() {
		return new int[]{R.id.llMainTabTab0, R.id.llMainTabTab1, R.id.llMainTabTab2};
	}

	@Override
	protected int[][] getTabSelectIds() {
		return new int[][]{
				new int[]{R.id.ivMainTabTab0, R.id.ivMainTabTab1, R.id.ivMainTabTab2},//é¡¶éƒ¨å›¾æ ‡
				new int[]{R.id.tvMainTabTab0, R.id.tvMainTabTab1, R.id.tvMainTabTab2}//åº•éƒ¨æ–‡å­—
		};
	}

	@Override
	public int getFragmentContainerResId() {
		return R.id.flMainTabFragmentContainer;
	}

	@Override
	protected Fragment getFragment(int position) {
		switch (position) {
			case 1:
				UserListFragment fragment = UserListFragment.createInstance();
				fragment.setSearchType(EditTextInfoWindow.TYPE_NAME);
				return fragment;
			case 2:
				return MineFragment.createInstance();
			default:
				return MomentListFragment.createInstance();
		}
	}

	private static final String[] TAB_NAMES = {"åœˆå­?", "æœ‹å?‹", "æˆ‘çš„"};
	@Override
	protected void selectTab(int position) {
		tvBaseTitle.setText(TAB_NAMES[position]);

		View left = null, right = null;
		if (fragments[position] instanceof TopBarMenuCallback) {
			left = ((TopBarMenuCallback) fragments[position]).getLeftMenu(context);
			right = ((TopBarMenuCallback) fragments[position]).getRightMenu(context);
		}

		llMainTabLeftContainer.removeAllViews();
		if (left != null) {
			llMainTabLeftContainer.addView(left);
		}
		llMainTabRightContainer.removeAllViews();
		if (right != null) {
			llMainTabRightContainer.addView(right);
		}


		verifyLogin();
	}


	// UIæ˜¾ç¤ºåŒº(æ“?ä½œUIï¼Œä½†ä¸?å­˜åœ¨æ•°æ?®èŽ·å?–æˆ–å¤„ç?†ä»£ç ?ï¼Œä¹Ÿä¸?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?)>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>










	// Dataæ•°æ?®åŒº(å­˜åœ¨æ•°æ?®èŽ·å?–æˆ–å¤„ç?†ä»£ç ?ï¼Œä½†ä¸?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?)<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<




	@Override
	public void initData() {// å¿…é¡»è°ƒç”¨
		super.initData();

		if (isCurrentUserCorrect() == false) {
			reloadAll();
		}
	}


	@Override
	protected void reloadAll() {
		Log.d(TAG, "reloadAll >>> ");
		HttpRequest.getUser(APIJSONApplication.getInstance().getCurrentUserId(), 0, new OnHttpResponseListener() {

			@Override
			public void onHttpResponse(int requestCode, String resultJson, Exception e) {
				Log.d(TAG, "reloadAll >>> HttpRequest.getUser.onHttpResponse >>  saveCurrentUser >>");
				APIJSONApplication.getInstance().saveCurrentUser(new JSONResponse(resultJson).getObject(User.class));
				runUiThread(new Runnable() {

					@Override
					public void run() {
						sendBroadcast(new Intent(ActionUtil.ACTION_USER_CHANGED)
								.putExtra(INTENT_ID, APIJSONApplication.getInstance().getCurrentUserId())
								.putExtra(ActionUtil.INTENT_USER, APIJSONApplication.getInstance().getCurrentUser()));
					}
				});
			}
		});
	}

	// Dataæ•°æ?®åŒº(å­˜åœ¨æ•°æ?®èŽ·å?–æˆ–å¤„ç?†ä»£ç ?ï¼Œä½†ä¸?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?)>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>










	// Eventäº‹ä»¶åŒº(å?ªè¦?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?å°±æ˜¯)<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

	@Override
	public void initEvent() {// å¿…é¡»è°ƒç”¨
		super.initEvent();

	}

	@Override
	public void onDragBottom(boolean rightToLeft) {
		if (fragments[currentPosition] instanceof OnBottomDragListener) {
			((OnBottomDragListener) fragments[currentPosition]).onDragBottom(rightToLeft);
		}
	}


	// ç³»ç»Ÿè‡ªå¸¦ç›‘å?¬æ–¹æ³•<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

	//å?Œå‡»æ‰‹æœºè¿”å›žé”®é€€å‡º<<<<<<<<<<<<<<<<<<<<<
	private long firstTime = 0;//ç¬¬ä¸€æ¬¡è¿”å›žæŒ‰é’®è®¡æ—¶
	@Override
	public boolean onKeyUp(int keyCode, KeyEvent event) {
		switch(keyCode){
			case KeyEvent.KEYCODE_BACK:
				long secondTime = System.currentTimeMillis();
				if(secondTime - firstTime > 2000){
					showShortToast("å†?æŒ‰ä¸€æ¬¡é€€å‡º");
					firstTime = secondTime;
				} else {//å®Œå…¨é€€å‡º
					sendBroadcast(new Intent(ACTION_EXIT_APP));
				}
				return true;
		}

		return super.onKeyUp(keyCode, event);
	}
	//å?Œå‡»æ‰‹æœºè¿”å›žé”®é€€å‡º>>>>>>>>>>>>>>>>>>>>>

	// ç±»ç›¸å…³ç›‘å?¬<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

	private boolean isToExitApp = false;
	@Override
	protected void onDestroy() {
		BaseBroadcastReceiver.unregister(context, receiver);
		super.onDestroy();
		if (isToExitApp) {
			isToExitApp = false;
			moveTaskToBack(true);//åº”ç”¨é€€åˆ°å?Žå?°
			System.exit(0);
		}
	}

	// ç±»ç›¸å…³ç›‘å?¬>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

	// ç³»ç»Ÿè‡ªå¸¦ç›‘å?¬æ–¹æ³•>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


	// Eventäº‹ä»¶åŒº(å?ªè¦?å­˜åœ¨äº‹ä»¶ç›‘å?¬ä»£ç ?å°±æ˜¯)>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>



	// å†…éƒ¨ç±»,å°½é‡?å°‘ç”¨<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


	private BroadcastReceiver receiver = new BroadcastReceiver() {

		public void onReceive(Context context, Intent intent) {
			String action = intent == null ? null : intent.getAction();
			if (isAlive() == false || StringUtil.isNotEmpty(action, true) == false) {
				Log.e(TAG, "receiver.onReceive  isAlive() == false" +
						" || StringUtil.isNotEmpty(action, true) == false >> return;");
				return;
			}

			if (ACTION_EXIT_APP.equals(action)) {
				isToExitApp = true;
				finish();
				return;
			}

			if (ActionUtil.ACTION_RELOAD_CURRENT_USER.equals(action)) {
				reloadAll();//Â fragmentManager show removeç­‰éƒ½ä¼šå´©æºƒ
			}
		}
	};

	// å†…éƒ¨ç±»,å°½é‡?å°‘ç”¨>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

}
