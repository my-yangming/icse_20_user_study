package com.cgfay.filter.glfilter.makeup;

import android.content.Context;
import android.graphics.Bitmap;
import android.opengl.GLES30;
import android.util.Log;
import android.util.Pair;

import com.cgfay.filter.glfilter.makeup.bean.MakeupBaseData;
import com.cgfay.filter.glfilter.makeup.bean.MakeupLipstickData;
import com.cgfay.filter.glfilter.makeup.bean.MakeupNormaData;
import com.cgfay.filter.glfilter.resource.ResourceCodec;
import com.cgfay.filter.glfilter.resource.ResourceDataCodec;
import com.cgfay.filter.glfilter.utils.OpenGLUtils;

import java.io.IOException;
import java.lang.ref.WeakReference;
import java.nio.FloatBuffer;
import java.nio.ShortBuffer;

/**
 * ç¾Žå¦†åŠ è½½å™¨åŸºç±»
 */
public abstract class MakeupBaseLoader {

    protected static final String TAG = "MakeupLoader";

    // è¾“å…¥å›¾åƒ?å®½é«˜
    protected int mImageWidth, mImageHeight;
    // ç¾Žå¦†å¼ºåº¦
    protected float mStrength;
    // ç¾Žå¦†å¤„ç?†ç±»åž‹ï¼Œè·Ÿ fragment_makeup.glslä¸­çš„ä¿?æŒ?ä¸€è‡´
    // 0è¡¨ç¤ºç»˜åˆ¶åŽŸå›¾ï¼Œ1è¡¨ç¤ºç›´æŽ¥ç»˜åˆ¶ç¾Žå¦†ç´ æ??ï¼Œ2è¡¨ç¤ºåˆ©ç”¨é?®ç½©è£?å‰ª(ç¾Žçž³)ï¼Œ3è¡¨ç¤ºå”‡å½©
    protected int mMakeupType;
    // å½©å¦†æ•°æ?®
    protected MakeupBaseData mMakeupData;
    // å½©å¦†è§£åŽ‹çš„æ–‡ä»¶å¤¹
    private String mFolderPath;
    // èµ„æº?åŠ è½½å™¨
    private ResourceDataCodec mResourceCodec;
    // é?®ç½©çº¹ç?†
    protected int mMaskTexture;
    // ç´ æ??çº¹ç?†
    protected int mMaterialTexture;
    // é¡¶ç‚¹å??æ ‡
    protected float[] mVertices = null;
    // é¡¶ç‚¹å??æ ‡ç¼“å†²
    protected FloatBuffer mVertexBuffer = null;
    // ç´ æ??/é?®ç½©çº¹ç?†ç¼“å†²
    protected FloatBuffer mTextureBuffer = null;
    // ç´¢å¼•ç¼“å†²
    protected ShortBuffer mIndexBuffer = null;

    // æ˜¯å?¦å…?è®¸ç»˜åˆ¶
    private boolean mEnableRender;

    // æ»¤é•œå¯¹è±¡
    protected final WeakReference<GLImageMakeupFilter> mWeakFilter;

    public MakeupBaseLoader(GLImageMakeupFilter filter, MakeupBaseData makeupData, String folderPath) {
        mWeakFilter = new WeakReference<>(filter);
        mMakeupData = makeupData;
        mFolderPath = folderPath.startsWith("file://") ? folderPath.substring("file://".length()) : folderPath;
        mMakeupType = 0;
        mMaskTexture = OpenGLUtils.GL_NOT_TEXTURE;
        mMaterialTexture = OpenGLUtils.GL_NOT_TEXTURE;
        mStrength = makeupData == null? 1.0f : makeupData.strength;
        initBuffers();
    }

    /**
     * åˆ?å§‹åŒ–ï¼Œç¬¬ä¸€æ¬¡åˆ›å»ºæ—¶è°ƒç”¨
     * @param context
     */
    public void init(Context context) {
        if (mMakeupData != null) {
            mEnableRender = true;
            // æ ¹æ?®ç±»åž‹åŠ è½½é?®ç½©çº¹ç?†
            switch (mMakeupData.makeupType) {
                // è¿™å‡ ä¸ªæ²¡æœ‰é?®ç½©çš„
                case SHADOW:    // é˜´å½±
                case BLUSH:     // è…®çº¢
                case EYEBROW:   // çœ‰æ¯›
                    mMakeupType = 1;
                    mMaskTexture = OpenGLUtils.GL_NOT_TEXTURE;
                    break;

                // ä½¿ç”¨çœ¼ç?›çš„é?®ç½©
                case PUPIL: // ç¾Žçž³ï¼Œç¾Žçž³éƒ¨åˆ†éœ€è¦?å?šè£?å‰ª
                    mMakeupType = 2;
                    if (mMaskTexture == OpenGLUtils.GL_NOT_TEXTURE) {
                        mMaskTexture = OpenGLUtils.createTextureFromAssets(context, "texture/makeup_eye_mask.png");
                    }
                    break;

                // ä½¿ç”¨çœ¼ç?›çš„é?®ç½©
                case EYESHADOW: // çœ¼å½±
                case EYELINER:  // çœ¼çº¿
                case EYELASH:   // ç?«æ¯›
                case EYELID:    // çœ¼çš®
                    mMakeupType = 1;
                    if (mMaskTexture == OpenGLUtils.GL_NOT_TEXTURE) {
                        mMaskTexture = OpenGLUtils.createTextureFromAssets(context, "texture/makeup_eye_mask.png");
                    }
                    break;

                // å”‡å½©åŠ è½½å˜´å”‡çš„é?®ç½©
                case LIPSTICK:
                    mMakeupType = 3;
                    if (mMaskTexture == OpenGLUtils.GL_NOT_TEXTURE) {
                        mMaskTexture = OpenGLUtils.createTextureFromAssets(context, "texture/makeup_lips_mask.png");
                    }
                    break;

                // ä¸?èƒ½è¯†åˆ«çš„ç±»åž‹ï¼Œç›´æŽ¥ç»˜åˆ¶åŽŸå›¾
                default:
                    mMakeupType = 0;
                    mMaskTexture = OpenGLUtils.GL_NOT_TEXTURE;
                    mMaterialTexture = OpenGLUtils.GL_NOT_TEXTURE;
                    break;
            }
            loadMaterialTexture(mFolderPath);
        } else {
            mEnableRender = false;
            mMakeupType = 0;
            mMaskTexture = OpenGLUtils.GL_NOT_TEXTURE;
            mMaterialTexture = OpenGLUtils.GL_NOT_TEXTURE;
        }
    }

    /**
     * åŠ è½½ç´ æ??çº¹ç?†
     * @param unzipPath èµ„æº?è§£åŽ‹çš„æ–‡ä»¶å¤¹è·¯å¾„
     */
    protected void loadMaterialTexture(String unzipPath) {

        if (mResourceCodec != null) {
            mResourceCodec = null;
        }

        // å¦‚æžœæ•°æ?®ä¸ºç©ºï¼Œåˆ™éœ€è¦?é”€æ¯?æ—§çš„ç´ æ??çº¹ç?†æ•°æ?®
        if (mMakeupData == null) {
            if (mMaterialTexture != OpenGLUtils.GL_NOT_TEXTURE) {
                GLES30.glDeleteTextures(1, new int[] { mMaterialTexture }, 0);
                mMaterialTexture = OpenGLUtils.GL_NOT_TEXTURE;
            }
            return;
        }
        Pair pair = ResourceCodec.getResourceFile(unzipPath);
        if (pair != null) {
            mResourceCodec = new ResourceDataCodec(unzipPath + "/" + (String) pair.first, unzipPath + "/" + pair.second);
        }
        if (mResourceCodec != null) {
            try {
                mResourceCodec.init();
            } catch (IOException e) {
                Log.e(TAG, "loadMaterialTexture: ", e);
                mResourceCodec = null;
            }
        }

        // å¦‚æžœæ˜¯å”‡å½©ï¼Œåˆ™åŠ è½½lookupTable æ•°æ?®ï¼Œå?¦åˆ™åŠ è½½æ™®é€šç´ æ??æ•°æ?®
        Bitmap bitmap = null;
        if (mMakeupData.makeupType.getName().equals("lipstick")) {
            bitmap = mResourceCodec.loadBitmap(((MakeupLipstickData)mMakeupData).lookupTable);
        } else if (((MakeupNormaData) mMakeupData).materialData != null) {
            bitmap = mResourceCodec.loadBitmap(((MakeupNormaData) mMakeupData).materialData.name);
        }

        // åˆ¤æ–­æ˜¯å?¦å?–å¾—ç´ æ??æˆ–è€…lutçº¹ç?†å›¾ç‰‡
        if (bitmap != null) {
            if (mMaterialTexture != OpenGLUtils.GL_NOT_TEXTURE) {
                GLES30.glDeleteTextures(1, new int[] { mMaterialTexture }, 0);
                mMaterialTexture = OpenGLUtils.GL_NOT_TEXTURE;
            }
            mMaterialTexture = OpenGLUtils.createTexture(bitmap);
            bitmap.recycle();
        } else {
            mMaterialTexture = OpenGLUtils.GL_NOT_TEXTURE;
        }
    }


    /**
     * è¾“å…¥å›¾åƒ?ä½ å®½é«˜
     * @param width
     * @param height
     */
    public void onInputSizeChanged(int width, int height) {
        mImageWidth = width;
        mImageHeight = height;
    }

    /**
     * é‡?ç½®ï¼Œä»…é‡Šæ”¾ç´ æ??èµ„æº?
     */
    public void reset() {
        if (mMaskTexture != OpenGLUtils.GL_NOT_TEXTURE) {
            GLES30.glDeleteTextures(1, new int[] { mMaskTexture }, 0);
            mMaskTexture = OpenGLUtils.GL_NOT_TEXTURE;
        }
        mEnableRender = false;
    }

    /**
     * é‡Šæ”¾èµ„æº?
     */
    public void release() {
        if (mMaskTexture != OpenGLUtils.GL_NOT_TEXTURE) {
            GLES30.glDeleteTextures(1, new int[] { mMaskTexture }, 0);
            mMaskTexture = OpenGLUtils.GL_NOT_TEXTURE;
        }
        if (mMaterialTexture != OpenGLUtils.GL_NOT_TEXTURE) {
            GLES30.glDeleteTextures(1, new int[] { mMaterialTexture }, 0);
            mMaterialTexture = OpenGLUtils.GL_NOT_TEXTURE;
        }
        mWeakFilter.clear();
        releaseBuffers();
    }

    /**
     * åˆ?å§‹åŒ–ç¼“å†²åŒº
     */
    protected abstract void initBuffers();

    /**
     * é‡Šæ”¾ç¼“å†²
     */
    protected void releaseBuffers() {
        if (mVertexBuffer != null) {
            mVertexBuffer.clear();
            mVertexBuffer = null;
        }
        if (mTextureBuffer != null) {
            mTextureBuffer.clear();
            mTextureBuffer = null;
        }
        if (mIndexBuffer != null) {
            mIndexBuffer.clear();
            mIndexBuffer = null;
        }
    }

    /**
     * ç»˜åˆ¶å½©å¦†
     * @param faceIndex     äººè„¸ç´¢å¼•
     * @param inputTexture  è¾“å…¥å›¾åƒ?çº¹ç?†
     * @param vertexBuffer  è¾“å…¥å›¾åƒ?é¡¶ç‚¹å??æ ‡ç¼“å†²
     * @param textureBuffer è¾“å…¥å›¾åƒ?çº¹ç?†çº¹ç?†å??æ ‡ç¼“å†²
     */
    public void drawMakeup(int faceIndex, int inputTexture, FloatBuffer vertexBuffer, FloatBuffer textureBuffer) {
        // æ›´æ–°é¡¶ç‚¹çº¹ç?†
        updateVertices(faceIndex);
        // ç»˜åˆ¶å½©å¦†
        if (mWeakFilter.get() != null && mEnableRender) {
            mWeakFilter.get().drawMakeup(inputTexture, mMaterialTexture, mMaskTexture, mVertexBuffer,
                    mTextureBuffer, mIndexBuffer, mMakeupType, mStrength);
        }
    }

    /**
     * æ›´æ–°é¡¶ç‚¹å??æ ‡
     * @param faceIndex
     */
    protected abstract void updateVertices(int faceIndex);

    /**
     * åˆ‡æ?¢å½©å¦†æ•°æ?®
     * @param makeupData
     */
    public void changeMakeupData(MakeupBaseData makeupData, String folderPath) {
        mMakeupData = makeupData;
        mFolderPath = folderPath.startsWith("file://") ? folderPath.substring("file://".length()) : folderPath;
        // åŠ è½½å½©å¦†ç´ æ??çº¹ç?†
        if (mMakeupData != null) {
            mStrength = mMakeupData.strength;
            loadMaterialTexture(mFolderPath);
        } else {
            mStrength = 0.0f;
            if (mMaterialTexture != OpenGLUtils.GL_NOT_TEXTURE) {
                GLES30.glDeleteTextures(1, new int[] {mMaterialTexture}, 0);
                mMaterialTexture = OpenGLUtils.GL_NOT_TEXTURE;
            }
        }
    }

    /**
     * è®¾ç½®å¼ºåº¦
     * @param strength
     */
    public void setStrength(float strength) {
        if (strength < 0) {
            strength = 0;
        } else if (strength > 1.0f) {
            strength = 1.0f;
        }
        mStrength = strength;
    }

    /**
     * æ?¢å¤?é»˜è®¤å¼ºåº¦
     */
    public void resetStrength() {
        mStrength = mMakeupData == null ? 1.0f : mMakeupData.strength;
    }
}
