package com.myimooc.java.design.pattern.observer.weathercondition;

/**
 * @describe è§‚å¯Ÿè€…çš„å®žçŽ°ç±»
 * @author zc
 * @version 1.0 2017-08-29
 */
public class ConcreteObserver implements Observer {
	
	/**
	 * è§‚å¯Ÿè€…çš„å??ç§°ï¼Œæ˜¯è°?æ”¶åˆ°äº†è¿™ä¸ªä¿¡æ?¯
	 */
	private String observerName;
	
	/**
	 * å¤©æ°”çš„å†…å®¹ä¿¡æ?¯ï¼Œè¿™ä¸ªæ¶ˆæ?¯ä»Žç›®æ ‡å¤„èŽ·å?–
	 */
	private String weatherContent;
	
	/**
	 * æ??é†’çš„å†…å®¹ï¼Œä¸?å?Œçš„è§‚å¯Ÿè€…æ??é†’ä¸?å?Œçš„å†…å®¹
	 */
	private String remindThing;
	
	/**
	 * èŽ·å?–ç›®æ ‡ç±»çš„çŠ¶æ€?å?Œæ­¥åˆ°è§‚å¯Ÿè€…çš„çŠ¶æ€?ä¸­
	 */
	@Override
	public void update(AbstractWeatherSubject subject) {
		weatherContent = ((ConcreteWeatherSubject)subject).getWeatherContent();
		System.out.println(observerName + " æ”¶åˆ°äº†å¤©æ°”ä¿¡æ?¯  " + weatherContent + "ï¼Œå‡†å¤‡åŽ»å?š "+remindThing);
	}
	
	@Override
	public String getObserverName() {
		return observerName;
	}
	
	@Override
	public void setObserverName(String observerName) {
		this.observerName = observerName;
	}

	public String getWeatherContent() {
		return weatherContent;
	}

	public void setWeatherContent(String weatherContent) {
		this.weatherContent = weatherContent;
	}

	public String getRemindThing() {
		return remindThing;
	}

	public void setRemindThing(String remindThing) {
		this.remindThing = remindThing;
	}
}
