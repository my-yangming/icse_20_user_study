package org.javacore.io.zip;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.util.Enumeration;
import java.util.zip.Adler32;
import java.util.zip.CheckedInputStream;
import java.util.zip.CheckedOutputStream;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;
import java.util.zip.ZipInputStream;
import java.util.zip.ZipOutputStream;

/*
 * Copyright [2015] [Jeff Lee]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @author Jeff Lee
 * @since 2015-10-17 14:58:59
 *  åˆ©ç”¨Zipè¿›è¡Œå¤šæ–‡ä»¶ä¿?å­˜
 */
public class ZipCompress {
    private static String filePath = "src" + File.separator +
            "org" + File.separator +
            "javacore" + File.separator +
            "io" + File.separator;

    private static String[]  fileNames= new String[] {
        filePath + "BufferedInputFileT.java",
        filePath + "ChangeSystemOut.java"
    };

    public static void main(String[] args) throws IOException {
        zipFiles(fileNames);
    }

    private static void zipFiles(String[] fileNames)
            throws IOException {
        // èŽ·å?–zipæ–‡ä»¶è¾“å‡ºæµ?
        FileOutputStream f = new FileOutputStream("test.zip");
        // ä»Žæ–‡ä»¶è¾“å‡ºæµ?ä¸­èŽ·å?–æ•°æ?®æ ¡éªŒå’Œè¾“å‡ºæµ?,å¹¶è®¾ç½®Adler32
        CheckedOutputStream csum = new CheckedOutputStream(f,new Adler32());
        // ä»Žæ•°æ?®æ ¡éªŒå’Œè¾“å‡ºæµ?ä¸­èŽ·å?–Zipè¾“å‡ºæµ?
        ZipOutputStream zos = new ZipOutputStream(csum);
        // ä»ŽZipè¾“å‡ºæµ?ä¸­èŽ·å?–ç¼“å†²è¾“å‡ºæµ?
        BufferedOutputStream out = new BufferedOutputStream(zos);
        // è®¾ç½®Zipæ–‡ä»¶æ³¨é‡Š
        zos.setComment("æµ‹è¯• java zip stream");
        for (String file : fileNames) {
            System.out.println("å†™å…¥æ–‡ä»¶: " + file);
            // èŽ·å?–æ–‡ä»¶è¾“å…¥å­—ç¬¦æµ?
            BufferedReader in =
                    new BufferedReader(new FileReader(file));
            // æƒ³Zipå¤„ç?†å†™å…¥æ–°çš„æ–‡ä»¶æ?¡ç›®ï¼Œå¹¶æµ?å®šä½?åˆ°æ•°æ?®å¼€å§‹å¤„
            zos.putNextEntry(new ZipEntry(file));
            int c;
            while ((c = in.read()) > 0)
                out.write(c);
            in.close();
            // åˆ·æ–°Zipè¾“å‡ºæµ?ï¼Œå°†ç¼“å†²çš„æµ?å†™å…¥è¯¥æµ?
            out.flush();
        }
        // æ–‡ä»¶å…¨éƒ¨å†™å…¥Zipè¾“å‡ºæµ?å?Žï¼Œå…³é—­
        out.close();

        // è¾“å‡ºæ•°æ?®æ ¡éªŒå’Œ
        System.out.println("æ•°æ?®æ ¡éªŒå’Œ: " + csum.getChecksum().getValue());
        System.out.println("è¯»å?–zipæ–‡ä»¶");
        // è¯»å?–test.zipæ–‡ä»¶è¾“å…¥æµ?
        FileInputStream fi = new FileInputStream("test.zip");
        // ä»Žæ–‡ä»¶è¾“å…¥æµ?ä¸­èŽ·å?–æ•°æ?®æ ¡éªŒå’Œæµ?
        CheckedInputStream csumi = new CheckedInputStream(fi,new Adler32());
        // ä»Žæ•°æ?®æ ¡éªŒå’Œæµ?ä¸­èŽ·å?–Zipè§£åŽ‹æµ?
        ZipInputStream in2 = new ZipInputStream(csumi);
        // ä»ŽZipè§£åŽ‹æµ?ä¸­èŽ·å?–ç¼“å†²è¾“å…¥æµ?
        BufferedInputStream bis = new BufferedInputStream(in2);
        // åˆ›å»ºæ–‡ä»¶æ?¡ç›®
        ZipEntry zipEntry;
        while ((zipEntry = in2.getNextEntry()) != null) {
            System.out.println("è¯»å?–æ–‡ä»¶ï¼š " + zipEntry);
            int x;
            while ((x = bis.read()) > 0)
                System.out.write(x);
        }
        if (fileNames.length == 1)
            System.out.println("æ•°æ?®æ ¡éªŒå’Œï¼š " + csumi.getChecksum().getValue());
        bis.close();

        // èŽ·å?–Zipæ–‡ä»¶
        ZipFile zf = new ZipFile("test.zip");
        // èŽ·å?–æ–‡ä»¶æ?¡ç›®æžšä¸¾
        Enumeration e = zf.entries();
        while (e.hasMoreElements()) {
            // ä»ŽZipæ–‡ä»¶çš„æžšä¸¾ä¸­èŽ·å?–æ–‡ä»¶æ?¡ç›®
            ZipEntry ze2 = (ZipEntry) e.nextElement();
            System.out.println("æ–‡ä»¶ï¼š " + ze2);
        }

    }
}
