package com.foxinmy.weixin4j.qy.api;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.foxinmy.weixin4j.exception.WeixinException;
import com.foxinmy.weixin4j.http.weixin.ApiResult;
import com.foxinmy.weixin4j.http.weixin.WeixinResponse;
import com.foxinmy.weixin4j.model.Token;
import com.foxinmy.weixin4j.qy.model.OUserInfo;
import com.foxinmy.weixin4j.qy.model.Party;
import com.foxinmy.weixin4j.qy.model.User;
import com.foxinmy.weixin4j.qy.type.InviteType;
import com.foxinmy.weixin4j.qy.type.UserStatus;
import com.foxinmy.weixin4j.token.TokenManager;
import com.foxinmy.weixin4j.util.NameValue;
import com.foxinmy.weixin4j.util.StringUtil;

/**
 * æˆ?å‘˜API
 * 
 * @className UserApi
 * @author jinyu(foxinmy@gmail.com)
 * @date 2014å¹´11æœˆ19æ—¥
 * @since JDK 1.6
 * @see com.foxinmy.weixin4j.qy.model.User
 * @see <a href= "http://work.weixin.qq.com/api/doc#10018">ç®¡ç?†æˆ?å‘˜è¯´æ˜Ž</a>
 */
public class UserApi extends QyApi {
	private final MediaApi mediaApi;
	private final PartyApi partyApi;
	private final TokenManager tokenManager;

	public UserApi(TokenManager tokenManager) {
		this.tokenManager = tokenManager;
		this.mediaApi = new MediaApi(tokenManager);
		this.partyApi = new PartyApi(tokenManager);
	}

	/**
	 * åˆ›å»ºæˆ?å‘˜
	 * 
	 * @param user
	 *            æˆ?å‘˜å¯¹è±¡
	 * @see com.foxinmy.weixin4j.qy.model.User
	 * @see <a href= "http://work.weixin.qq.com/api/doc#10018"> åˆ›å»ºæˆ?å‘˜è¯´æ˜Ž</a>
	 * @return å¤„ç?†ç»“æžœ
	 * @throws WeixinException
	 */
	public ApiResult createUser(User user) throws WeixinException {
		String user_create_uri = getRequestUri("user_create_uri");
		return excute(user_create_uri, user, null);
	}

	/**
	 * åˆ›å»ºæˆ?å‘˜
	 * 
	 * @param user
	 *            æˆ?å‘˜å¯¹è±¡
	 * @param avatar
	 *            å¤´åƒ?æ–‡ä»¶ å?¯ä¸ºç©º
	 * @see com.foxinmy.weixin4j.qy.model.User
	 * @see <a href= "http://work.weixin.qq.com/api/doc#10018"> åˆ›å»ºæˆ?å‘˜è¯´æ˜Ž</a>
	 * @return å¤„ç?†ç»“æžœ
	 * @throws WeixinException
	 */
	public ApiResult createUser(User user, InputStream avatar)
			throws WeixinException {
		String user_create_uri = getRequestUri("user_create_uri");
		return excute(user_create_uri, user, avatar);
	}

	/**
	 * æ›´æ–°ç”¨æˆ·(å¦‚æžœé?žå¿…é¡»çš„å­—æ®µæœªæŒ‡å®š åˆ™ä¸?æ›´æ–°è¯¥å­—æ®µä¹‹å‰?çš„è®¾ç½®å€¼)
	 * 
	 * @param user
	 *            æˆ?å‘˜å¯¹è±¡
	 * @see com.foxinmy.weixin4j.qy.model.User
	 * @see <a href= "http://work.weixin.qq.com/api/doc#10020"> æ›´æ–°æˆ?å‘˜è¯´æ˜Ž</a>
	 * @return å¤„ç?†ç»“æžœ
	 * @throws WeixinException
	 */
	public ApiResult updateUser(User user) throws WeixinException {
		String user_update_uri = getRequestUri("user_update_uri");
		return excute(user_update_uri, user, null);
	}

	/**
	 * æ›´æ–°ç”¨æˆ·(å¦‚æžœé?žå¿…é¡»çš„å­—æ®µæœªæŒ‡å®š åˆ™ä¸?æ›´æ–°è¯¥å­—æ®µä¹‹å‰?çš„è®¾ç½®å€¼)
	 * 
	 * @param user
	 *            æˆ?å‘˜å¯¹è±¡
	 * @param avatar
	 *            å¤´åƒ?æ–‡ä»¶
	 * @see com.foxinmy.weixin4j.qy.model.User
	 * @see <a href= "http://work.weixin.qq.com/api/doc#10020"> æ›´æ–°æˆ?å‘˜è¯´æ˜Ž</a>
	 * @return å¤„ç?†ç»“æžœ
	 * @throws WeixinException
	 */
	public ApiResult updateUser(User user, InputStream avatar)
			throws WeixinException {
		String user_update_uri = getRequestUri("user_update_uri");
		return excute(user_update_uri, user, avatar);
	}

	private ApiResult excute(String uri, User user, InputStream avatar)
			throws WeixinException {
		JSONObject obj = (JSONObject) JSON.toJSON(user);
		Object val = obj.remove("extattr");
		if (val != null) {
			JSONObject attrs = new JSONObject();
			attrs.put("attrs", val);
			obj.put("extattr", attrs);
		}
		val = obj.remove("status");
		if (val != null) {
			obj.put("enable", val);
		}
		if (avatar != null) {
			obj.put("avatar_mediaid", mediaApi.uploadMedia(0, avatar, null));
		} else {
			obj.put("avatar_mediaid", obj.remove("avatar"));
		}
		Token token = tokenManager.getCache();
		WeixinResponse response = weixinExecutor.post(
				String.format(uri, token.getAccessToken()), obj.toJSONString());
		return response.getAsResult();
	}

	/**
	 * èŽ·å?–æˆ?å‘˜
	 * 
	 * @param userid
	 *            æˆ?å‘˜å”¯ä¸€ID
	 * @see com.foxinmy.weixin4j.qy.model.User
	 * @see <a href= "http://work.weixin.qq.com/api/doc#10019">èŽ·å?–æˆ?å‘˜è¯´æ˜Ž</a>
	 * @return æˆ?å‘˜å¯¹è±¡
	 * @throws WeixinException
	 */
	public User getUser(String userid) throws WeixinException {
		String user_get_uri = getRequestUri("user_get_uri");
		Token token = tokenManager.getCache();
		WeixinResponse response = weixinExecutor.get(String.format(
				user_get_uri, token.getAccessToken(), userid));
		JSONObject obj = response.getAsJson();
		Object attrs = obj.remove("extattr");
		User user = JSON.toJavaObject(obj, User.class);
		if (attrs != null) {
			user.setExtattr(JSON.parseArray(
					((JSONObject) attrs).getString("attrs"), NameValue.class));
		}
		return user;
	}

	/**
	 * æ ¹æ?®codeèŽ·å?–ç”¨æˆ·ä¿¡æ?¯
	 * 
	 * @param code
	 *            é€šè¿‡å‘˜å·¥æŽˆæ?ƒèŽ·å?–åˆ°çš„codeï¼Œæ¯?æ¬¡å‘˜å·¥æŽˆæ?ƒå¸¦ä¸Šçš„codeå°†ä¸?ä¸€æ ·ï¼Œcodeå?ªèƒ½ä½¿ç”¨ä¸€æ¬¡ï¼Œ5åˆ†é’Ÿæœªè¢«ä½¿ç”¨è‡ªåŠ¨è¿‡æœŸ
	 * @see com.foxinmy.weixin4j.qy.model.User
	 * @return æˆ?å‘˜å¯¹è±¡
	 * @see {@link #getUser(String)}
	 * @see {@link #getUserIdByCode(String)}
	 * @see <a href= "http://work.weixin.qq.com/api/doc#10028/æ ¹æ?®codeèŽ·å?–æˆ?å‘˜ä¿¡æ?¯">
	 *      oauthæŽˆæ?ƒèŽ·å?–ç”¨æˆ·ä¿¡æ?¯</a>
	 * @throws WeixinException
	 */
	public User getUserByCode(String code) throws WeixinException {
		JSONObject result = getUserIdByCode(code);
		if (result.containsKey("user_ticket")) {
			String user_ticket_detail_uri = getRequestUri("user_ticket_detail_uri");
			Token token = tokenManager.getCache();
			WeixinResponse response = weixinExecutor.post(
					String.format(user_ticket_detail_uri,
							token.getAccessToken()),
					String.format("{\"user_ticket\":\"%s\"}",
							result.getString("user_ticket")));
			JSONObject obj = response.getAsJson();
			Object attrs = obj.remove("extattr");
			User user = JSON.toJavaObject(obj, User.class);
			if (attrs != null) {
				user.setExtattr(JSON.parseArray(
						((JSONObject) attrs).getString("attrs"),
						NameValue.class));
			}
			return user;
		} else {
			String userId = result.getString("UserId");
			if (StringUtil.isBlank(userId)) {
				userId = openid2userid(result.getString("OpenId"));
			}
			return getUser(userId);
		}
	}

	/**
	 * æ ¹æ?®codeèŽ·å?–æˆ?å‘˜IDä¿¡æ?¯
	 * 
	 * @param code
	 *            é€šè¿‡å‘˜å·¥æŽˆæ?ƒèŽ·å?–åˆ°çš„codeï¼Œæ¯?æ¬¡å‘˜å·¥æŽˆæ?ƒå¸¦ä¸Šçš„codeå°†ä¸?ä¸€æ ·ï¼Œcodeå?ªèƒ½ä½¿ç”¨ä¸€æ¬¡ï¼Œ5åˆ†é’Ÿæœªè¢«ä½¿ç”¨è‡ªåŠ¨è¿‡æœŸ
	 * @return æ?¢å?–ç»“æžœ
	 * @see <a href= "https://work.weixin.qq.com/api/doc#10028">
	 *      oauthæŽˆæ?ƒèŽ·å?–ç”¨æˆ·ä¿¡æ?¯</a>
	 * @throws WeixinException
	 */
	public JSONObject getUserIdByCode(String code) throws WeixinException {
		String user_getid_uri = getRequestUri("user_getid_uri");
		Token token = tokenManager.getCache();
		WeixinResponse response = weixinExecutor.get(String.format(
				user_getid_uri, token.getAccessToken(), code));
		return response.getAsJson();
	}

	/**
	 * èŽ·å?–ä¼?ä¸šå?·ç®¡ç?†å‘˜ç™»å½•ä¿¡æ?¯
	 * 
	 * @param authCode
	 *            oauth2.0æŽˆæ?ƒä¼?ä¸šå?·ç®¡ç?†å‘˜ç™»å½•äº§ç”Ÿçš„code
	 * @return ç™»é™†ä¿¡æ?¯
	 * @see <a href=
	 *      "http://qydev.weixin.qq.com/wiki/index.php?title=%E8%8E%B7%E5%8F%96%E4%BC%81%E4%B8%9A%E7%AE%A1%E7%90%86%E5%91%98%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF">
	 *      æŽˆæ?ƒèŽ·å?–ä¼?ä¸šå?·ç®¡ç?†å‘˜ç™»å½•ä¿¡æ?¯</a>
	 * @see com.foxinmy.weixin4j.qy.model.OUserInfo
	 * @throws WeixinException
	 */
	public OUserInfo getOUserInfoByCode(String authCode) throws WeixinException {
		Token token = tokenManager.getCache();
		String oauth_logininfo_uri = getRequestUri("oauth_logininfo_uri");
		WeixinResponse response = weixinExecutor.post(
				String.format(oauth_logininfo_uri, token.getAccessToken()),
				String.format("{\"auth_code\":\"%s\"}", authCode));
		return JSON.parseObject(response.getAsString(), OUserInfo.class);
	}

	/**
	 * èŽ·å?–éƒ¨é—¨æˆ?å‘˜
	 * 
	 * @param partyId
	 *            éƒ¨é—¨ID
	 * @param fetchChild
	 *            æ˜¯å?¦é€’å½’èŽ·å?–å­?éƒ¨é—¨ä¸‹é?¢çš„æˆ?å‘˜
	 * @param userStatus
	 *            æˆ?å‘˜çŠ¶æ€? statuså?¯å? åŠ  æœªå¡«å†™åˆ™é»˜è®¤ä¸ºæœªå…³æ³¨(4)
	 * @param findDetail
	 *            æ˜¯å?¦èŽ·å?–è¯¦ç»†ä¿¡æ?¯
	 * @see com.foxinmy.weixin4j.qy.model.User
	 * @see <a href= "https://work.weixin.qq.com/api/doc#10061"> èŽ·å?–éƒ¨é—¨æˆ?å‘˜è¯´æ˜Ž</a>
	 * @return æˆ?å‘˜åˆ—è¡¨
	 * @throws WeixinException
	 */
	public List<User> listUser(int partyId, boolean fetchChild,
			UserStatus userStatus, boolean findDetail) throws WeixinException {
		String user_list_uri = findDetail ? getRequestUri("user_list_uri")
				: getRequestUri("user_slist_uri");
		Token token = tokenManager.getCache();
		if (userStatus == null) {
			userStatus = UserStatus.UNFOLLOW;
		}
		WeixinResponse response = weixinExecutor.get(String.format(
				user_list_uri, token.getAccessToken(), partyId, fetchChild ? 1
						: 0, userStatus.getVal()));
		List<User> list = null;
		if (findDetail) {
			JSONArray arrays = response.getAsJson().getJSONArray("userlist");
			list = new ArrayList<User>(arrays.size());
			for (int i = 0; i < arrays.size(); i++) {
				JSONObject obj = arrays.getJSONObject(i);
				Object attrs = obj.remove("extattr");
				User user = JSON.toJavaObject(obj, User.class);
				if (attrs != null) {
					user.setExtattr(JSON.parseArray(
							((JSONObject) attrs).getString("attrs"),
							NameValue.class));
				}
				list.add(user);
			}
		} else {
			list = JSON.parseArray(response.getAsJson().getString("userlist"),
					User.class);
		}
		return list;
	}

	/**
	 * èŽ·å?–éƒ¨é—¨ä¸‹æ‰€æœ‰çŠ¶æ€?æˆ?å‘˜(ä¸?è¿›è¡Œé€’å½’)
	 * 
	 * @param partyId
	 *            éƒ¨é—¨ID
	 * @see {@link #listUser(int, boolean, UserStatus,boolean)}
	 * @return æˆ?å‘˜åˆ—è¡¨
	 * @throws WeixinException
	 */
	public List<User> listUser(int partyId) throws WeixinException {
		return listUser(partyId, false, UserStatus.BOTH, false);
	}

	/**
	 * èŽ·å?–æ?ƒé™?èŒƒå›´å†…çš„æ‰€æœ‰æˆ?å‘˜åˆ—è¡¨
	 * 
	 * @param userStatus
	 *            æˆ?å‘˜çŠ¶æ€? æœªå¡«å†™åˆ™é»˜è®¤ä¸ºå…¨éƒ¨çŠ¶æ€?ä¸‹çš„æˆ?å‘˜
	 * @return æˆ?å‘˜åˆ—è¡¨
	 * @see {@link #listUser(int, boolean, UserStatus,boolean)}
	 * @see {@link PartyApi#listParty(int)}
	 * @throws WeixinException
	 */
	public List<User> listAllUser(UserStatus userStatus) throws WeixinException {
		List<User> users = null;
		List<Party> parties = partyApi.listParty(0);
		if (!parties.isEmpty()) {
			if (userStatus == null) {
				userStatus = UserStatus.BOTH;
			}
			users = new ArrayList<User>();
			for (Party party : parties) {
				users.addAll(listUser(party.getId(), true, userStatus, true));
			}
		}
		return users;
	}

	/**
	 * åˆ é™¤æˆ?å‘˜
	 * 
	 * @param userid
	 *            æˆ?å‘˜ID
	 * @see <a href= "https://work.weixin.qq.com/api/doc#10030"> åˆ é™¤æˆ?å‘˜è¯´æ˜Ž</a>
	 * @return å¤„ç?†ç»“æžœ
	 * @throws WeixinException
	 */
	public ApiResult deleteUser(String userid) throws WeixinException {
		String user_delete_uri = getRequestUri("user_delete_uri");
		Token token = tokenManager.getCache();
		WeixinResponse response = weixinExecutor.get(String.format(
				user_delete_uri, token.getAccessToken(), userid));
		return response.getAsResult();
	}

	/**
	 * æ‰¹é‡?åˆ é™¤æˆ?å‘˜
	 * 
	 * @param userIds
	 *            æˆ?å‘˜åˆ—è¡¨
	 * @see <a href= "https://work.weixin.qq.com/api/doc#10060" >æ‰¹é‡?åˆ é™¤æˆ?å‘˜è¯´æ˜Ž</a>
	 * @return å¤„ç?†ç»“æžœ
	 * @throws WeixinException
	 */
	public ApiResult batchDeleteUser(List<String> userIds)
			throws WeixinException {
		JSONObject obj = new JSONObject();
		obj.put("useridlist", userIds);
		String user_delete_uri = getRequestUri("user_batchdelete_uri");
		Token token = tokenManager.getCache();
		WeixinResponse response = weixinExecutor.post(
				String.format(user_delete_uri, token.getAccessToken()),
				obj.toJSONString());
		return response.getAsResult();
	}

	/**
	 * å¼€å?¯äºŒæ¬¡éªŒè¯?æˆ?åŠŸæ—¶è°ƒç”¨(ç®¡ç?†å‘˜é¡»æ‹¥æœ‰useridå¯¹åº”å‘˜å·¥çš„ç®¡ç?†æ?ƒé™?)
	 * 
	 * @param userid
	 *            æˆ?å‘˜ID
	 * @return è°ƒç”¨ç»“æžœ
	 * @see <a href= "https://work.weixin.qq.com/api/doc#11378"> äºŒæ¬¡éªŒè¯?è¯´æ˜Ž</a>
	 * @throws WeixinException
	 */
	public ApiResult authsucc(String userId) throws WeixinException {
		String user_authsucc_uri = getRequestUri("user_authsucc_uri");
		Token token = tokenManager.getCache();
		WeixinResponse response = weixinExecutor.get(String.format(
				user_authsucc_uri, token.getAccessToken(), userId));
		return response.getAsResult();
	}

	/**
	 * é‚€è¯·æˆ?å‘˜å…³æ³¨(ç®¡ç?†å‘˜é¡»æ‹¥æœ‰è¯¥æˆ?å‘˜çš„æŸ¥çœ‹æ?ƒé™?)
	 * 
	 * @param userId
	 *            æˆ?å‘˜ID
	 * @param tips
	 *            æŽ¨é€?åˆ°å¾®ä¿¡ä¸Šçš„æ??ç¤ºè¯­ï¼ˆå?ªæœ‰è®¤è¯?å?·å?¯ä»¥ä½¿ç”¨ï¼‰ã€‚å½“ä½¿ç”¨å¾®ä¿¡æŽ¨é€?æ—¶ï¼Œè¯¥å­—æ®µé»˜è®¤ä¸ºâ€œè¯·å…³æ³¨XXXä¼?ä¸šå?·â€?ï¼Œé‚®ä»¶é‚€è¯·æ—¶ï¼Œè¯¥å­—æ®µæ— æ•ˆã€‚
	 * @return é‚€è¯·ç±»åž‹
	 * @see <a href=
	 *      "http://qydev.weixin.qq.com/wiki/index.php?title=%E7%AE%A1%E7%90%86%E6%88%90%E5%91%98#.E9.82.80.E8.AF.B7.E6.88.90.E5.91.98.E5.85.B3.E6.B3.A8">
	 *      é‚€è¯·æˆ?å‘˜å…³æ³¨è¯´æ˜Ž</a>
	 * @throws WeixinException
	 */
	public InviteType inviteUser(String userId, String tips)
			throws WeixinException {
		JSONObject obj = new JSONObject();
		obj.put("userid", userId);
		obj.put("invite_tips", tips);
		String invite_user_uri = getRequestUri("invite_user_uri");
		Token token = tokenManager.getCache();
		WeixinResponse response = weixinExecutor.post(
				String.format(invite_user_uri, token.getAccessToken()),
				obj.toJSONString());
		int type = response.getAsJson().getIntValue("type");
		if (type == 1) {
			return InviteType.WEIXIN;
		} else if (type == 2) {
			return InviteType.EMAIL;
		} else {
			return null;
		}
	}

	/**
	 * useridè½¬æ?¢æˆ?openid:è¯¥æŽ¥å?£ä½¿ç”¨åœºæ™¯ä¸ºå¾®ä¿¡æ”¯ä»˜ã€?å¾®ä¿¡çº¢åŒ…å’Œä¼?ä¸šè½¬è´¦ï¼Œä¼?ä¸šå?·ç”¨æˆ·åœ¨ä½¿ç”¨å¾®ä¿¡æ”¯ä»˜çš„åŠŸèƒ½æ—¶ï¼Œ
	 * éœ€è¦?è‡ªè¡Œå°†ä¼?ä¸šå?·çš„useridè½¬æˆ?openidã€‚ åœ¨ä½¿ç”¨å¾®ä¿¡çº¢åŒ…åŠŸèƒ½æ—¶ï¼Œéœ€è¦?å°†åº”ç”¨idå’Œuseridè½¬æˆ?appidå’Œopenidæ‰?èƒ½ä½¿ç”¨ã€‚
	 * 
	 * @param userid
	 *            ä¼?ä¸šå?·å†…çš„æˆ?å‘˜id å¿…å¡«
	 * @param agentid
	 *            éœ€è¦?å?‘é€?çº¢åŒ…çš„åº”ç”¨IDï¼Œè‹¥å?ªæ˜¯ä½¿ç”¨å¾®ä¿¡æ”¯ä»˜å’Œä¼?ä¸šè½¬è´¦ï¼Œåˆ™æ— éœ€è¯¥å?‚æ•° ä¼ å…¥0æˆ–è´Ÿæ•°åˆ™å¿½ç•¥
	 * @return ç»“æžœæ•°ç»„ ç¬¬ä¸€ä¸ªå…ƒç´ ä¸ºå¯¹åº”çš„openid ç¬¬äºŒä¸ªå…ƒç´ åˆ™ä¸ºåº”ç”¨çš„appid(å¦‚æžœæœ‰)
	 * @throws WeixinException
	 * @see <a href= "https://work.weixin.qq.com/api/doc#11279">
	 *      useridä¸Žopenidäº’æ?¢</a>
	 */
	public String[] userid2openid(String userid, int agentid)
			throws WeixinException {
		JSONObject obj = new JSONObject();
		obj.put("userid", userid);
		if (agentid > 0) {
			obj.put("agentid", agentid);
		}
		String userid2openid_uri = getRequestUri("userid2openid_uri");
		WeixinResponse response = weixinExecutor
				.post(String.format(userid2openid_uri,
						tokenManager.getAccessToken()), obj.toJSONString());
		obj = response.getAsJson();
		return new String[] { obj.getString("openid"), obj.getString("appid") };
	}

	/**
	 * openidè½¬æ?¢æˆ?userid:è¯¥æŽ¥å?£ä¸»è¦?åº”ç”¨äºŽä½¿ç”¨å¾®ä¿¡æ”¯ä»˜ã€?å¾®ä¿¡çº¢åŒ…å’Œä¼?ä¸šè½¬è´¦ä¹‹å?Žçš„ç»“æžœæŸ¥è¯¢ï¼Œ
	 * å¼€å?‘è€…éœ€è¦?çŸ¥é?“æŸ?ä¸ªç»“æžœäº‹ä»¶çš„openidå¯¹åº”ä¼?ä¸šå?·å†…æˆ?å‘˜çš„ä¿¡æ?¯æ—¶ï¼Œå?¯ä»¥é€šè¿‡è°ƒç”¨è¯¥æŽ¥å?£è¿›è¡Œè½¬æ?¢æŸ¥è¯¢ã€‚
	 * 
	 * @param openid
	 *            åœ¨ä½¿ç”¨å¾®ä¿¡æ”¯ä»˜ã€?å¾®ä¿¡çº¢åŒ…å’Œä¼?ä¸šè½¬è´¦ä¹‹å?Žï¼Œè¿”å›žç»“æžœçš„openid
	 * @return è¯¥openidåœ¨ä¼?ä¸šå?·ä¸­å¯¹åº”çš„æˆ?å‘˜userid
	 * @throws WeixinException
	 * @see <a href= "https://work.weixin.qq.com/api/doc#11279">
	 *      useridä¸Žopenidäº’æ?¢</a>
	 */
	public String openid2userid(String openid) throws WeixinException {
		String openid2userid_uri = getRequestUri("openid2userid_uri");
		WeixinResponse response = weixinExecutor
				.post(String.format(openid2userid_uri,
						tokenManager.getAccessToken()),
						String.format("{\"openid\": \"%s\"}", openid));
		return response.getAsJson().getString("userid");
	}
}
