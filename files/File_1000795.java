package org.nutz.mvc.upload.util;

import org.nutz.lang.Lang;

/**
 * æ ¹æ?®ç»™ç»™å®šçš„ bytes[] è®¡ç®—æ‰€æœ‰çš„æŸ¥æ‰¾å›žæº¯ç‚¹
 * 
 * @author zozoh(zozohtnt@gmail.com)
 */
public class RemountBytes {
    
    public static RemountBytes create(String str){
        return create(Lang.toBytes(str.toCharArray()));
    }

    public static RemountBytes create(byte[] bs) {
        // åˆ?å§‹åŒ–å¤±æ•ˆæ•°ç»„
        int[] fails = new int[bs.length];

        // å¦‚æžœæ•°ç»„é•¿åº¦å¤§äºŽ 0
        if (bs.length > 1) {
            // å¦‚æžœå­—ç¬¦ä¸º ABABCDE
            // å¾ªçŽ¯ä»Žç¬¬ä¸‰ä¸ªå¼€å§‹çš„å­—ç¬¦
            for (int i = 2; i < bs.length; i++) {
                // å¦‚æžœå½“å‰?ä¸º C
                // red: æœ¬å­—ç¬¦ä¹‹å‰?çš„å­?ä¸² ABAB
                // int redL = 0;
                // int redR = i - 1;
                // blue: æœ¬å­—ç¬¦ä¹‹å‰?çš„å­?ä¸²ä¸?åŒ…æ‹¬ç¬¬ä¸€ä¸ªå­—ç¬¦çš„å­?ä¸² BAB
                int blueL = 1;
                int blueR = i - 1;
                // å¾ªçŽ¯ï¼Œé?‡åˆ° blue ç»“æ?Ÿï¼Œä¸?ç›¸ç­‰çš„è¯?ï¼Œæ¸¸æ ‡ç½®é›¶
                int x = 0;
                for (int j = blueL; j <= blueR; j++) {
                    byte red = bs[x];
                    byte blue = bs[j];
                    if (red == blue)
                        x++;
                    else
                        x = 0;
                }
                // å½“ blue å…¨éƒ¨è€—å°½ï¼Œé•¿åº¦ä¸ºå¤±æ•ˆæ•°ç»„çš„å€¼
                fails[i] = x;
            }
        }
        RemountBytes re = new RemountBytes();
        re.bytes = bs;
        re.fails = fails;
        return re;
    }

    public byte[] bytes;

    public int[] fails;

}
