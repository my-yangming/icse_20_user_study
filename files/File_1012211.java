package com.xuexiang.xuidemo.utils;

import android.content.Context;

import com.baidu.location.BDAbstractLocationListener;
import com.baidu.location.BDLocation;
import com.baidu.location.LocationClient;
import com.baidu.location.LocationClientOption;
import com.baidu.location.LocationClientOption.LocationMode;
import com.baidu.location.Poi;
import com.xuexiang.xaop.annotation.Permission;
import com.xuexiang.xui.logs.UILog;

import static com.xuexiang.xaop.consts.PermissionConsts.LOCATION;

/**
 * å®šä½?æœ?åŠ¡
 *
 * @author xuexiang
 * @since 2019/3/31 ä¸‹å?ˆ5:52
 */
public class LocationService {

    private static volatile LocationService sInstance = null;

    private LocationClient mClient = null;
    private LocationClientOption mOption, mDIYOption;

    private LocationService() {

    }

    /***
     * åˆ?å§‹åŒ–
     * @param context
     */
    public void init(Context context) {
        if (mClient == null) {
            mClient = new LocationClient(context.getApplicationContext());
            mClient.setLocOption(getDefaultLocationClientOption());
        }
    }

    /**
     * èŽ·å?–å?•ä¾‹
     *
     * @return
     */
    public static LocationService get() {
        if (sInstance == null) {
            synchronized (LocationService.class) {
                if (sInstance == null) {
                    sInstance = new LocationService();
                }
            }
        }
        return sInstance;
    }

    /***
     * æ³¨å†Œå®šä½?ç›‘å?¬
     * @param listener
     * @return
     */

    public LocationService registerListener(BDAbstractLocationListener listener) {
        if (listener != null) {
            mClient.registerLocationListener(listener);
        }
        return this;
    }

    /**
     * æ³¨é”€å®šä½?ç›‘å?¬
     *
     * @param listener
     */
    public LocationService unregisterListener(BDAbstractLocationListener listener) {
        if (listener != null) {
            mClient.unRegisterLocationListener(listener);
        }
        return this;
    }

    /***
     * è®¾ç½®å®šä½?å?‚æ•°
     * @param option
     * @return
     */
    public boolean setLocationOption(LocationClientOption option) {
        if (option != null) {
            if (mClient.isStarted()) {
                mClient.stop();
            }
            mDIYOption = option;
            mClient.setLocOption(option);
            return true;
        }
        return false;
    }

    /***
     *
     * @return DefaultLocationClientOption  é»˜è®¤Oè®¾ç½®
     */
    public LocationClientOption getDefaultLocationClientOption() {
        if (mOption == null) {
            mOption = new LocationClientOption();
            mOption.setLocationMode(LocationMode.Hight_Accuracy);//å?¯é€‰ï¼Œé»˜è®¤é«˜ç²¾åº¦ï¼Œè®¾ç½®å®šä½?æ¨¡å¼?ï¼Œé«˜ç²¾åº¦ï¼Œä½ŽåŠŸè€—ï¼Œä»…è®¾å¤‡
            mOption.setCoorType("bd09ll");//å?¯é€‰ï¼Œé»˜è®¤gcj02ï¼Œè®¾ç½®è¿”å›žçš„å®šä½?ç»“æžœå??æ ‡ç³»ï¼Œå¦‚æžœé…?å?ˆç™¾åº¦åœ°å›¾ä½¿ç”¨ï¼Œå»ºè®®è®¾ç½®ä¸ºbd09ll;
            mOption.setScanSpan(0);//å?¯é€‰ï¼Œé»˜è®¤0ï¼Œå?³ä»…å®šä½?ä¸€æ¬¡ï¼Œè®¾ç½®å?‘èµ·è¿žç»­å®šä½?è¯·æ±‚çš„é—´éš”éœ€è¦?å¤§äºŽç­‰äºŽ1000msæ‰?æ˜¯æœ‰æ•ˆçš„
            mOption.setIsNeedAddress(true);//å?¯é€‰ï¼Œè®¾ç½®æ˜¯å?¦éœ€è¦?åœ°å?€ä¿¡æ?¯ï¼Œé»˜è®¤ä¸?éœ€è¦?
            mOption.setIsNeedLocationDescribe(true);//å?¯é€‰ï¼Œè®¾ç½®æ˜¯å?¦éœ€è¦?åœ°å?€æ??è¿°
            mOption.setNeedDeviceDirect(false);//å?¯é€‰ï¼Œè®¾ç½®æ˜¯å?¦éœ€è¦?è®¾å¤‡æ–¹å?‘ç»“æžœ
            mOption.setLocationNotify(false);//å?¯é€‰ï¼Œé»˜è®¤falseï¼Œè®¾ç½®æ˜¯å?¦å½“gpsæœ‰æ•ˆæ—¶æŒ‰ç…§1S1æ¬¡é¢‘çŽ‡è¾“å‡ºGPSç»“æžœ
            mOption.setIgnoreKillProcess(true);//å?¯é€‰ï¼Œé»˜è®¤trueï¼Œå®šä½?SDKå†…éƒ¨æ˜¯ä¸€ä¸ªSERVICEï¼Œå¹¶æ”¾åˆ°äº†ç‹¬ç«‹è¿›ç¨‹ï¼Œè®¾ç½®æ˜¯å?¦åœ¨stopçš„æ—¶å€™æ?€æ­»è¿™ä¸ªè¿›ç¨‹ï¼Œé»˜è®¤ä¸?æ?€æ­»
            mOption.setIsNeedLocationDescribe(true);//å?¯é€‰ï¼Œé»˜è®¤falseï¼Œè®¾ç½®æ˜¯å?¦éœ€è¦?ä½?ç½®è¯­ä¹‰åŒ–ç»“æžœï¼Œå?¯ä»¥åœ¨BDLocation.getLocationDescribeé‡Œå¾—åˆ°ï¼Œç»“æžœç±»ä¼¼äºŽâ€œåœ¨åŒ—äº¬å¤©å®‰é—¨é™„è¿‘â€?
            mOption.setIsNeedLocationPoiList(true);//å?¯é€‰ï¼Œé»˜è®¤falseï¼Œè®¾ç½®æ˜¯å?¦éœ€è¦?POIç»“æžœï¼Œå?¯ä»¥åœ¨BDLocation.getPoiListé‡Œå¾—åˆ°
            mOption.SetIgnoreCacheException(false);//å?¯é€‰ï¼Œé»˜è®¤falseï¼Œè®¾ç½®æ˜¯å?¦æ”¶é›†CRASHä¿¡æ?¯ï¼Œé»˜è®¤æ”¶é›†
            mOption.setOpenGps(true);//å?¯é€‰ï¼Œé»˜è®¤falseï¼Œè®¾ç½®æ˜¯å?¦å¼€å?¯Gpså®šä½?
            mOption.setIsNeedAltitude(false);//å?¯é€‰ï¼Œé»˜è®¤falseï¼Œè®¾ç½®å®šä½?æ—¶æ˜¯å?¦éœ€è¦?æµ·æ‹”ä¿¡æ?¯ï¼Œé»˜è®¤ä¸?éœ€è¦?ï¼Œé™¤åŸºç¡€å®šä½?ç‰ˆæœ¬éƒ½å?¯ç”¨

        }
        return mOption;
    }


    /**
     * @return DIYOption è‡ªå®šä¹‰Optionè®¾ç½®
     */
    public LocationClientOption getOption() {
        if (mDIYOption == null) {
            mDIYOption = new LocationClientOption();
        }
        return mDIYOption;
    }

    /**
     * å¼€å§‹å®šä½?
     *
     * @param listener
     */
    @Permission(LOCATION)
    public static void start(BDAbstractLocationListener listener) {
        get().registerListener(listener).start();
    }

    /**
     * å¼€å§‹å®šä½?
     */
    public LocationService start() {
        if (mClient != null && !mClient.isStarted()) {
            mClient.start();
        }
        return this;
    }

    /**
     * å?œæ­¢å®šä½?
     */
    public static void stop(BDAbstractLocationListener listener) {
        get().unregisterListener(listener).stop();
    }

    /**
     * å?œæ­¢å®šä½?
     */
    public LocationService stop() {
        if (mClient != null && mClient.isStarted()) {
            mClient.stop();
        }
        return this;
    }

    public boolean isStart() {
        return mClient.isStarted();
    }

    public boolean requestHotSpotState() {
        return mClient.requestHotSpotState();
    }


    /**
     * æ‰“å?°åœ°å?€ä¿¡æ?¯
     *
     * @param location
     */
    public static void printLocationInfo(BDLocation location) {
        if (null != location && location.getLocType() != BDLocation.TypeServerError) {
            StringBuffer sb = new StringBuffer(256);
            sb.append("time : ");
            /**
             * æ—¶é—´ä¹Ÿå?¯ä»¥ä½¿ç”¨systemClock.elapsedRealtime()æ–¹æ³• èŽ·å?–çš„æ˜¯è‡ªä»Žå¼€æœºä»¥æ?¥ï¼Œæ¯?æ¬¡å›žè°ƒçš„æ—¶é—´ï¼›
             * location.getTime() æ˜¯æŒ‡æœ?åŠ¡ç«¯å‡ºæœ¬æ¬¡ç»“æžœçš„æ—¶é—´ï¼Œå¦‚æžœä½?ç½®ä¸?å?‘ç”Ÿå?˜åŒ–ï¼Œåˆ™æ—¶é—´ä¸?å?˜
             */
            sb.append(location.getTime());
            sb.append("\nlocType : ");// å®šä½?ç±»åž‹
            sb.append(location.getLocType());
            sb.append("\nlocType description : ");// *****å¯¹åº”çš„å®šä½?ç±»åž‹è¯´æ˜Ž*****
            sb.append(location.getLocTypeDescription());
            sb.append("\nlatitude : ");// çº¬åº¦
            sb.append(location.getLatitude());
            sb.append("\nlontitude : ");// ç»?åº¦
            sb.append(location.getLongitude());
            sb.append("\nradius : ");// å?Šå¾„
            sb.append(location.getRadius());
            sb.append("\nCountryCode : ");// å›½å®¶ç ?
            sb.append(location.getCountryCode());
            sb.append("\nCountry : ");// å›½å®¶å??ç§°
            sb.append(location.getCountry());
            sb.append("\ncitycode : ");// åŸŽå¸‚ç¼–ç ?
            sb.append(location.getCityCode());
            sb.append("\ncity : ");// åŸŽå¸‚
            sb.append(location.getCity());
            sb.append("\nDistrict : ");// åŒº
            sb.append(location.getDistrict());
            sb.append("\nStreet : ");// è¡—é?“
            sb.append(location.getStreet());
            sb.append("\naddr : ");// åœ°å?€ä¿¡æ?¯
            sb.append(location.getAddrStr());
            sb.append("\nUserIndoorState: ");// *****è¿”å›žç”¨æˆ·å®¤å†…å¤–åˆ¤æ–­ç»“æžœ*****
            sb.append(location.getUserIndoorState());
            sb.append("\nDirection(not all devices have value): ");
            sb.append(location.getDirection());// æ–¹å?‘
            sb.append("\nlocationdescribe: ");
            sb.append(location.getLocationDescribe());// ä½?ç½®è¯­ä¹‰åŒ–ä¿¡æ?¯
            sb.append("\nPoi: ");// POIä¿¡æ?¯
            if (location.getPoiList() != null && !location.getPoiList().isEmpty()) {
                for (int i = 0; i < location.getPoiList().size(); i++) {
                    Poi poi = location.getPoiList().get(i);
                    sb.append(poi.getName() + ";");
                }
            }
            if (location.getLocType() == BDLocation.TypeGpsLocation) {// GPSå®šä½?ç»“æžœ
                sb.append("\nspeed : ");
                sb.append(location.getSpeed());// é€Ÿåº¦ å?•ä½?ï¼škm/h
                sb.append("\nsatellite : ");
                sb.append(location.getSatelliteNumber());// å?«æ˜Ÿæ•°ç›®
                sb.append("\nheight : ");
                sb.append(location.getAltitude());// æµ·æ‹”é«˜åº¦ å?•ä½?ï¼šç±³
                sb.append("\ngps status : ");
                sb.append(location.getGpsAccuracyStatus());// *****gpsè´¨é‡?åˆ¤æ–­*****
                sb.append("\ndescribe : ");
                sb.append("gpså®šä½?æˆ?åŠŸ");
            } else if (location.getLocType() == BDLocation.TypeNetWorkLocation) {// ç½‘ç»œå®šä½?ç»“æžœ
                // è¿?è?¥å•†ä¿¡æ?¯
                if (location.hasAltitude()) {// *****å¦‚æžœæœ‰æµ·æ‹”é«˜åº¦*****
                    sb.append("\nheight : ");
                    sb.append(location.getAltitude());// å?•ä½?ï¼šç±³
                }
                sb.append("\noperationers : ");// è¿?è?¥å•†ä¿¡æ?¯
                sb.append(location.getOperators());
                sb.append("\ndescribe : ");
                sb.append("ç½‘ç»œå®šä½?æˆ?åŠŸ");
            } else if (location.getLocType() == BDLocation.TypeOffLineLocation) {// ç¦»çº¿å®šä½?ç»“æžœ
                sb.append("\ndescribe : ");
                sb.append("ç¦»çº¿å®šä½?æˆ?åŠŸï¼Œç¦»çº¿å®šä½?ç»“æžœä¹Ÿæ˜¯æœ‰æ•ˆçš„");
            } else if (location.getLocType() == BDLocation.TypeServerError) {
                sb.append("\ndescribe : ");
                sb.append("æœ?åŠ¡ç«¯ç½‘ç»œå®šä½?å¤±è´¥ï¼Œå?¯ä»¥å??é¦ˆIMEIå?·å’Œå¤§ä½“å®šä½?æ—¶é—´åˆ°loc-bugs@baidu.comï¼Œä¼šæœ‰äººè¿½æŸ¥åŽŸå› ");
            } else if (location.getLocType() == BDLocation.TypeNetWorkException) {
                sb.append("\ndescribe : ");
                sb.append("ç½‘ç»œä¸?å?Œå¯¼è‡´å®šä½?å¤±è´¥ï¼Œè¯·æ£€æŸ¥ç½‘ç»œæ˜¯å?¦é€šç•…");
            } else if (location.getLocType() == BDLocation.TypeCriteriaException) {
                sb.append("\ndescribe : ");
                sb.append("æ— æ³•èŽ·å?–æœ‰æ•ˆå®šä½?ä¾?æ?®å¯¼è‡´å®šä½?å¤±è´¥ï¼Œä¸€èˆ¬æ˜¯ç”±äºŽæ‰‹æœºçš„åŽŸå› ï¼Œå¤„äºŽé£žè¡Œæ¨¡å¼?ä¸‹ä¸€èˆ¬ä¼šé€ æˆ?è¿™ç§?ç»“æžœï¼Œå?¯ä»¥è¯•ç?€é‡?å?¯æ‰‹æœº");
            }
            UILog.i(sb.toString());
        }
    }


}
