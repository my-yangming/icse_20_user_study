package com.cgfay.camera.engine.camera;

import android.hardware.Camera;

import com.cgfay.camera.engine.listener.OnCameraCallback;
import com.cgfay.camera.engine.listener.OnCaptureListener;
import com.cgfay.camera.engine.listener.OnFpsListener;
import com.cgfay.camera.engine.model.AspectRatio;
import com.cgfay.camera.engine.model.GalleryType;
import com.cgfay.camera.listener.OnGallerySelectedListener;
import com.cgfay.camera.listener.OnPreviewCaptureListener;
import com.cgfay.filter.glfilter.beauty.bean.BeautyParam;

/**
 * ç›¸æœºé…?ç½®å?‚æ•°
 */
public final class CameraParam {

    // æœ€å¤§æ?ƒé‡?
    public static final int MAX_FOCUS_WEIGHT = 1000;
    // å½•åˆ¶æ—¶é•¿(æ¯«ç§’)
    public static final int DEFAULT_RECORD_TIME = 15000;

    // 16:9çš„é»˜è®¤å®½é«˜(ç?†æƒ³å€¼)
    public static final int DEFAULT_16_9_WIDTH = 1280;
    public static final int DEFAULT_16_9_HEIGHT = 720;
    // 4:3çš„é»˜è®¤å®½é«˜(ç?†æƒ³å€¼)
    public static final int DEFAULT_4_3_WIDTH = 1024;
    public static final int DEFAULT_4_3_HEIGHT = 768;
    // æœŸæœ›fps
    public static final int DESIRED_PREVIEW_FPS = 30;
    // è¿™é‡Œå??è¿‡æ?¥æ˜¯å› ä¸ºç›¸æœºçš„åˆ†è¾¨çŽ‡è·Ÿå±?å¹•çš„åˆ†è¾¨çŽ‡å®½é«˜åˆšå¥½å??è¿‡æ?¥
    public static final float Ratio_4_3 = 0.75f;
    public static final float Ratio_16_9 = 0.5625f;

    // å¯¹ç„¦æ?ƒé‡?æœ€å¤§å€¼
    public static final int Weight =  100;

    // æ˜¯å?¦æ˜¾ç¤ºäººè„¸å…³é”®ç‚¹
    public boolean drawFacePoints;
    // æ˜¯å?¦æ˜¾ç¤ºfps
    public boolean showFps;
    // ç›¸æœºé•¿å®½æ¯”ç±»åž‹
    public AspectRatio aspectRatio;
    // å½“å‰?é•¿å®½æ¯”
    public float currentRatio;
    // æœŸæœ›å¸§çŽ‡
    public int expectFps;
    // å®žé™…å¸§çŽ‡
    public int previewFps;
    // æœŸæœ›é¢„è§ˆå®½åº¦
    public int expectWidth;
    // æœŸæœ›é¢„è§ˆé«˜åº¦
    public int expectHeight;
    // å®žé™…é¢„è§ˆå®½åº¦
    public int previewWidth;
    // å®žé™…é¢„è§ˆé«˜åº¦
    public int previewHeight;
    // æ˜¯å?¦é«˜æ¸…æ‹?ç…§
    public boolean highDefinition;
    // é¢„è§ˆè§’åº¦
    public int orientation;
    // æ˜¯å?¦å?Žç½®æ‘„åƒ?å¤´
    public boolean backCamera;
    // æ‘„åƒ?å¤´id
    public int cameraId;
    // æ˜¯å?¦æ”¯æŒ?é—ªå…‰ç?¯
    public boolean supportFlash;
    // å¯¹ç„¦æ?ƒé‡?ï¼Œæœ€å¤§å€¼ä¸º1000
    public int focusWeight;
    // æ˜¯å?¦å…?è®¸å½•åˆ¶
    public boolean recordable;
    // å½•åˆ¶æ—¶é•¿(ms)
    public int recordTime;
    // å½•éŸ³æ?ƒé™?
    public boolean audioPermitted;
    // æ˜¯å?¦å…?è®¸å½•åˆ¶éŸ³é¢‘
    public boolean recordAudio;
    // æ˜¯å?¦è§¦å±?æ‹?ç…§
    public boolean touchTake;
    // æ˜¯å?¦å»¶æ—¶æ‹?ç…§
    public boolean takeDelay;
    // æ˜¯å?¦å¤œå…‰å¢žå¼º
    public boolean luminousEnhancement;
    // äº®åº¦å€¼
    public int brightness;
    // æ‹?ç…§ç±»åž‹
    public GalleryType mGalleryType;

    // å›¾åº“ç›‘å?¬å™¨
    public OnGallerySelectedListener gallerySelectedListener;
    // æ‹?æ‘„ç›‘å?¬å™¨
    public OnPreviewCaptureListener captureListener;

    // é¢„è§ˆå›žè°ƒ
    public OnCameraCallback cameraCallback;
    // æˆªå±?å›žè°ƒ
    public OnCaptureListener captureCallback;
    // fpså›žè°ƒ
    public OnFpsListener fpsCallback;
    // æ˜¯å?¦æ˜¾ç¤ºå¯¹æ¯”æ•ˆæžœ
    public boolean showCompare;
    // æ˜¯å?¦æ‹?ç…§
    public boolean isTakePicture;

    // æ˜¯å?¦å…?è®¸æ™¯æ·±
    public boolean enableDepthBlur;
    // æ˜¯å?¦å…?è®¸æš—è§’
    public boolean enableVignette;
    // ç¾Žé¢œå?‚æ•°
    public BeautyParam beauty;

    private static final CameraParam mInstance = new CameraParam();

    private CameraParam() {
        reset();
    }

    /**
     * é‡?ç½®ä¸ºåˆ?å§‹çŠ¶æ€?
     */
    private void reset() {
        drawFacePoints = false;
        showFps = false;
        aspectRatio = AspectRatio.Ratio_16_9;
        currentRatio = Ratio_16_9;
        expectFps = DESIRED_PREVIEW_FPS;
        previewFps = 0;
        expectWidth = DEFAULT_16_9_WIDTH;
        expectHeight = DEFAULT_16_9_HEIGHT;
        previewWidth = 0;
        previewHeight = 0;
        highDefinition = false;
        orientation = 0;
        backCamera = false;
        cameraId = Camera.CameraInfo.CAMERA_FACING_FRONT;
        supportFlash = false;
        focusWeight = 1000;
        recordable = true;
        recordTime = DEFAULT_RECORD_TIME;
        audioPermitted = false;
        recordAudio = true;
        touchTake = false;
        takeDelay = false;
        luminousEnhancement = false;
        brightness = -1;
        mGalleryType = GalleryType.PICTURE;
        gallerySelectedListener = null;
        captureListener = null;
        cameraCallback = null;
        captureCallback = null;
        fpsCallback = null;
        showCompare = false;
        isTakePicture = false;
        enableDepthBlur = false;
        enableVignette = false;
        beauty = new BeautyParam();
    }

    /**
     * èŽ·å?–ç›¸æœºé…?ç½®å?‚æ•°
     * @return
     */
    public static CameraParam getInstance() {
        return mInstance;
    }

    /**
     * è®¾ç½®é¢„è§ˆé•¿å®½æ¯”
     * @param aspectRatio
     */
    public void setAspectRatio(AspectRatio aspectRatio) {
        this.aspectRatio = aspectRatio;
        if (aspectRatio == AspectRatio.Ratio_16_9) {
            expectWidth = DEFAULT_16_9_WIDTH;
            expectHeight = DEFAULT_16_9_HEIGHT;
            currentRatio = Ratio_16_9;
        } else {
            expectWidth = DEFAULT_4_3_WIDTH;
            expectHeight = DEFAULT_4_3_HEIGHT;
            currentRatio = Ratio_4_3;
        }
    }

    /**
     * è®¾ç½®å¯¹ç„¦æ?ƒé‡?
     * @param focusWeight
     */
    public void setFocusWeight(int focusWeight) {
        if (focusWeight < 0 || focusWeight > MAX_FOCUS_WEIGHT) {
            throw new IllegalArgumentException("focusWeight must be 0 ~ 1000");
        }
        this.focusWeight = focusWeight;
    }

}
