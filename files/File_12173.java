package com.geekq.common.utils.numcal;

/**
 * ç”¨æˆ·çŠ¶æ€?ç±»ï¼Œè®°å½•ç”¨æˆ·åœ¨å¹³å?°ä½¿ç”¨ç³»ç»Ÿä¸­æ‰€æœ‰çš„çŠ¶æ€?ã€‚
 * @author é‚±æ¶¦æ³½
 */
public class BitStatesUtils {
	public final static Long OP_BASIC_INFO = 1L; //ç”¨æˆ·æ³¨å†Œæˆ?åŠŸçš„æ ‡ç¤º,å?Šä¸ºé»˜è®¤åˆ?å§‹çŠ¶æ€?
	public final static Long OP_BIND_PHONE = 2L << 0; //ç”¨æˆ·ç»‘å®šæ‰‹æœºçŠ¶æ€?ç ?
	public final static Long OP_BIND_EMAIL = 2L << 1;//ç”¨æˆ·ç»‘å®šé‚®ç®±
	public final static Long OP_BASE_INFO = 2L << 2;//å¡«å†™åŸºæœ¬èµ„æ–™
	public final static Long OP_REAL_AUTH = 2L << 3;//ç”¨æˆ·å®žå??è®¤è¯?
	public final static Long OP_VEDIO_AUTH = 2L << 4;//è§†é¢‘è®¤è¯?
	public final static Long OP_HAS_BIDRQUEST=2l<<5;//å½“å‰?ç”¨æˆ·æœ‰ä¸€ä¸ªå€Ÿæ¬¾è¿˜åœ¨å€Ÿæ¬¾æµ?ç¨‹å½“ä¸­

	/**
	 * @param states æ‰€æœ‰çŠ¶æ€?å€¼
	 * @param value  éœ€è¦?åˆ¤æ–­çŠ¶æ€?å€¼
	 * @return æ˜¯å?¦å­˜åœ¨
	 */
	public static boolean hasState(long states, long value) {
		return (states & value) != 0;
	}

	/**
	 * @param states å·²æœ‰çŠ¶æ€?å€¼
	 * @param value  éœ€è¦?æ·»åŠ çŠ¶æ€?å€¼
	 * @return æ–°çš„çŠ¶æ€?å€¼
	 */
	public static long addState(long states, long value) {
		if (hasState(states, value)) {
			return states;
		}
		return (states | value);
	}

	/**
	 * @param states å·²æœ‰çŠ¶æ€?å€¼
	 * @param value  éœ€è¦?åˆ é™¤çŠ¶æ€?å€¼
	 * @return æ–°çš„çŠ¶æ€?å€¼
	 */
	public static long removeState(long states, long value) {
		if (!hasState(states, value)) {
			return states;
		}
		return states ^ value;
	}
}
