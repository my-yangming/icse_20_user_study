package jetbrains.mps.java.platform.sourceStubsUI;

/*Generated by MPS */

import jetbrains.mps.ide.persistence.ModelRootSettingsEditor;
import jetbrains.mps.project.Project;
import org.jetbrains.mps.openapi.persistence.ModelRoot;
import jetbrains.mps.java.core.sourceStubs.JavaSourceStubModelRoot;
import javax.swing.JComponent;
import javax.swing.JButton;
import javax.swing.AbstractAction;
import java.awt.event.ActionEvent;
import com.intellij.openapi.vfs.VirtualFile;
import com.intellij.openapi.fileChooser.FileChooser;
import com.intellij.openapi.fileChooser.FileChooserDescriptorFactory;
import jetbrains.mps.project.MPSProject;
import com.intellij.openapi.vfs.LocalFileSystem;

public class JavaSourceStubModelRootSettingsEditor implements ModelRootSettingsEditor {
  private Project myProject;
  private String myPath;
  public JavaSourceStubModelRootSettingsEditor() {
  }
  @Override
  public void reset(Project project, ModelRoot root) {
    assert root instanceof JavaSourceStubModelRoot;
    this.myProject = project;
    this.myPath = ((JavaSourceStubModelRoot) root).getContentRoot();
  }
  @Override
  public void apply(ModelRoot root) {
    assert root instanceof JavaSourceStubModelRoot;
    ((JavaSourceStubModelRoot) root).setContentRoot(myPath);
  }
  @Override
  public JComponent getComponent() {
    final JButton button = new JButton();
    AbstractAction action = new AbstractAction("path") {
      @Override
      public void actionPerformed(ActionEvent p0) {
        VirtualFile dir = FileChooser.chooseFile(FileChooserDescriptorFactory.createSingleFileDescriptor(), button, ((MPSProject) myProject).getProject(), LocalFileSystem.getInstance().findFileByPath(myPath));
        if (dir == null) {
          return;
        }
        myPath = dir.getPath();
      }
    };
    button.setAction(action);
    return button;
  }
}
