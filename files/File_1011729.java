package jetbrains.mps.vcs.changesmanager.tree.features;

/*Generated by MPS */

import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNodeReference;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.module.SRepository;

public class PropertyFeature extends AbstractNodeFeature {
  private SProperty myProperty;
  public PropertyFeature(@NotNull SNodeReference nodePointer, @NotNull SProperty p) {
    super(nodePointer);
    myProperty = p;
  }
  @NotNull
  @Deprecated
  public String getPropertyName() {
    return myProperty.getName();
  }
  @NotNull
  public SProperty getProperty() {
    return myProperty;
  }
  @Nullable
  @Override
  protected Feature getParent(SRepository repo) {
    return new PropertiesFeature(getNodePointer());
  }
  @Override
  public boolean equals(Object object) {
    return super.equals(object) && this.myProperty.equals(((PropertyFeature) object).myProperty);
  }
  @Override
  @NotNull
  public String toString() {
    return "Node property {" + getNodePointerString() + "|" + myProperty.getName() + "}";
  }
}
