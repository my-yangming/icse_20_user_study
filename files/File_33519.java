package com.example.jingbin.cloudreader.data.model;

import com.example.jingbin.cloudreader.bean.GankIoDataBean;
import com.example.jingbin.cloudreader.http.HttpClient;
import com.example.jingbin.cloudreader.http.RequestImpl;

import io.reactivex.Observer;
import io.reactivex.android.schedulers.AndroidSchedulers;
import io.reactivex.disposables.Disposable;
import io.reactivex.schedulers.Schedulers;


/**
 * Created by jingbin on 2017/1/17.
 * åˆ†ç±»æ•°æ?®: http://gank.io/api/data/æ•°æ?®ç±»åž‹/è¯·æ±‚ä¸ªæ•°/ç¬¬å‡ é¡µ  çš„Model
 * å¥½å¤„ä¹‹ä¸€æ˜¯è¯·æ±‚æ•°æ?®æŽ¥å?£å?¯ä»¥ç»Ÿä¸€ï¼Œä¸?ç”¨æ¯?ä¸ªåœ°æ–¹éƒ½å†™è¯·æ±‚çš„æŽ¥å?£ï¼Œæ›´æ?¢æŽ¥å?£æ–¹ä¾¿ã€‚
 * å…¶å®žä»£ç ?é‡?ä¹Ÿæ²¡æœ‰å‡?å°‘å¤šå°‘ï¼Œä½†ç»´æŠ¤èµ·æ?¥æ–¹ä¾¿ã€‚
 */

public class GankOtherModel {

    private String id;
    private int page;
    private int perPage;

    public void setData(String id, int page, int perPage) {
        this.id = id;
        this.page = page;
        this.perPage = perPage;
    }

    public void getGankIoData(final RequestImpl listener) {
        HttpClient.Builder.getGankIOServer().getGankIoData(id, page, perPage)
                .subscribeOn(Schedulers.io()).observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Observer<GankIoDataBean>() {

                    @Override
                    public void onError(Throwable e) {
                        listener.loadFailed();

                    }

                    @Override
                    public void onComplete() {

                    }

                    @Override
                    public void onSubscribe(Disposable d) {
                        listener.addSubscription(d);
                    }

                    @Override
                    public void onNext(GankIoDataBean gankIoDataBean) {
                        listener.loadSuccess(gankIoDataBean);
                    }
                });
    }
}
