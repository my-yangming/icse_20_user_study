package com.xiaojinzi.component.impl.service;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;

import com.xiaojinzi.component.service.IServiceLoad;

import java.util.HashMap;
import java.util.Map;

/**
 * æœ?åŠ¡çš„å®¹å™¨,ä½¿ç”¨è¿™ä¸ªæœ?åŠ¡å®¹å™¨ä½ éœ€è¦?åˆ¤æ–­èŽ·å?–åˆ°çš„æœ?åŠ¡æ˜¯å?¦ä¸ºç©º,å¯¹äºŽä½¿ç”¨è€…æ?¥è¯´è¿˜æ˜¯æ¯”è¾ƒä¸?æ–¹ä¾¿çš„
 * å»ºè®®ä½¿ç”¨ Service æ‰©å±•çš„ç‰ˆæœ¬ RxService
 *
 * @author xiaojinzi 30212
 */
public class Service {

    private Service() {
    }

    /**
     * Service çš„é›†å?ˆ
     */
    private static Map<Class, IServiceLoad<?>> map = new HashMap<>();

    /**
     * ä½ å?¯ä»¥æ³¨å†Œä¸€ä¸ªæœ?åŠ¡,æœ?åŠ¡çš„åˆ?å§‹åŒ–å?¯ä»¥æ˜¯ æ‡’åŠ è½½çš„
     *
     * @param tClass
     * @param iServiceLoad
     * @param <T>
     */
    public static <T> void register(@NonNull Class<T> tClass, @NonNull IServiceLoad<? extends T> iServiceLoad) {
        map.put(tClass, iServiceLoad);
    }

    @Nullable
    public static <T> T unregister(@NonNull Class<T> tClass) {
        return (T) map.remove(tClass);
    }

    @Nullable
    public static <T> T get(@NonNull Class<T> tClass) {
        if (map.get(tClass) == null) {
            return null;
        } else {
            return (T) map.get(tClass).get();
        }
    }

}
