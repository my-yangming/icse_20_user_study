package cn.timebusker;

import org.springframework.amqp.core.Binding;
import org.springframework.amqp.core.BindingBuilder;
import org.springframework.amqp.core.Queue;
import org.springframework.amqp.core.TopicExchange;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class TopicRabbitConfiguration {

	/**
	 * Topicäº¤æ?¢æœº
	 * 
	 * å¯¹Keyè¿›è¡Œæ¨¡å¼?åŒ¹é…?å?Žè¿›è¡ŒæŠ•é€’ï¼Œå?¯ä»¥ä½¿ç”¨ç¬¦å?·ï¼ƒåŒ¹é…?ä¸€ä¸ªæˆ–å¤šä¸ªè¯?ï¼Œç¬¦å?·ï¼ŠåŒ¹é…?æ­£å¥½ ä¸€ ä¸ªè¯?ã€‚
	 * æ¯”å¦‚ï¼Œabc.#åŒ¹é…?abc.def.ghi,abc.*å?ªåŒ¹é…?abc.defï¼›
	 * 
	 * ä»»ä½•å?‘é€?åˆ°Topic Exchangeçš„æ¶ˆæ?¯éƒ½ä¼šè¢«è½¬å?‘åˆ°æ‰€æœ‰å…³å¿ƒRouteKeyä¸­æŒ‡å®šè¯?é¢˜çš„Queueä¸Š
	 * 
	 * 1. è¿™ç§?æ¨¡å¼?éœ€è¦?RouteKeyï¼Œè¦?æ??å‰?ç»‘å®šExchangeä¸ŽQueueã€‚
	 * 
	 * 2.å¦‚æžœExchangeæ²¡æœ‰å?‘çŽ°èƒ½å¤Ÿä¸ŽRouteKeyåŒ¹é…?çš„Queueï¼Œåˆ™ä¼šæŠ›å¼ƒæ­¤æ¶ˆæ?¯ã€‚
	 * 
	 * 3. åœ¨è¿›è¡Œç»‘å®šæ—¶ï¼Œè¦?æ??ä¾›ä¸€ä¸ªè¯¥é˜Ÿåˆ—å…³å¿ƒçš„ä¸»é¢˜ï¼Œå¦‚â€œ#.log.#â€?è¡¨ç¤ºè¯¥é˜Ÿåˆ—å…³å¿ƒæ‰€æœ‰æ¶‰å?Šlogçš„æ¶ˆæ?¯(ä¸€ä¸ªRouteKeyä¸ºâ€?MQ.log.
	 * errorâ€?çš„æ¶ˆæ?¯ä¼šè¢«è½¬å?‘åˆ°è¯¥é˜Ÿåˆ—)ã€‚
	 * 
	 * 4. â€œ#â€?è¡¨ç¤º0ä¸ªæˆ–è‹¥å¹²ä¸ªå…³é”®å­—ï¼Œâ€œ*â€?è¡¨ç¤ºä¸€ä¸ªå…³é”®å­—ã€‚å¦‚â€œlog.*â€?èƒ½ä¸Žâ€œlog.warnâ€?åŒ¹é…?ï¼Œæ— æ³•ä¸Žâ€œlog.warn.timeoutâ€?
	 * åŒ¹é…?ï¼›ä½†æ˜¯â€œlog.#â€?èƒ½ä¸Žä¸Šè¿°ä¸¤è€…åŒ¹é…?ã€‚
	 * 
	 */

	public static final String TOPIC_ROUTING_KEY_TIMEBUSKER = "TOPIC.TIMEBUSKER";

	public static final String TOPIC_ROUTING_KEY_YUJIAOJIAO = "TOPIC.YUJIAOJIAO";

	public static final String TOPIC_ROUTING_KEY_MINE = "TOPIC.MINE";
	
	public static final String TOPIC_EXCHANGE = "TOPIC.EXCHANGE";

	@Bean("timebuskert")
	public Queue timebusker() {
		return new Queue(TOPIC_ROUTING_KEY_TIMEBUSKER);
	}

	@Bean("yujiaojiaot")
	public Queue yujiaojiao() {
		return new Queue(TOPIC_ROUTING_KEY_YUJIAOJIAO);
	}

	@Bean("minet")
	public Queue mine() {
		return new Queue(TOPIC_ROUTING_KEY_MINE);
	}

	@Bean("topicExchange")
	TopicExchange exchange() {
		return new TopicExchange(TOPIC_EXCHANGE);
	}
	
	/**
	 * è¿›å…¥TOPIC_EXCHANGEæ¶ˆæ?¯äº¤æ?¢æœºçš„æ¶ˆæ?¯ï¼Œä¼šæ ¹æ?®route keyä¸Ž"TOPIC.*"è¿›è¡ŒåŒ¹é…?ï¼Œè·¯ç”±åˆ°æ¶ˆæ?¯é˜Ÿåˆ—ä¸­
	 */
	@Bean
	Binding bindingExchange1(Queue yujiaojiaot, TopicExchange exchange) {
		return BindingBuilder.bind(yujiaojiaot).to(exchange).with("TOPIC.*");
	}
	
	@Bean
	Binding bindingExchange2(Queue timebuskert, TopicExchange exchange) {
		return BindingBuilder.bind(timebuskert).to(exchange).with("TOPIC.*");
	}
	
	@Bean
	Binding bindingExchange3(Queue minet, TopicExchange topicExchange) {
		return BindingBuilder.bind(minet).to(topicExchange).with("TOPIC.*");
	}
}
