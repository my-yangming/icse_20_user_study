package com.limpoxe.fairy.util;

import android.util.Log;

import java.lang.reflect.Method;

/**
 * Copy From FreeReflection
 * https://github.com/tiann/FreeReflection
 */
public class FreeReflection {
    private static final String TAG = "FreeReflection";

    private static Object sVmRuntime;
    private static Method setHiddenApiExemptions;

    static {
        try {
            Method forName = Class.class.getDeclaredMethod("forName", String.class);
            Method getDeclaredMethod = Class.class.getDeclaredMethod("getDeclaredMethod", String.class, Class[].class);

            Class<?> vmRuntimeClass = (Class<?>) forName.invoke(null, "dalvik.system.VMRuntime");
            Method getRuntime = (Method) getDeclaredMethod.invoke(vmRuntimeClass, "getRuntime", null);
            sVmRuntime = getRuntime.invoke(null);
            // åˆ°æ­¤å¤„ä¸ºæ­¢å…¶å®žå·²ç»?èŽ·å¾—äº†ç»•å¼€é™?åˆ¶çš„æ–¹æ³•ï¼Œå?Žç»­æ‰€æœ‰çš„å?—é™?APIéƒ½å?¯ä»¥é€šè¿‡ä¸Šé?¢èŽ·å?–åˆ°çš„forNameã€?getDeclaredMethodè¿™ä¸¤ä¸ªå¯¹è±¡æ?¥èŽ·å?–ç›®æ ‡ç±»å’Œå‡½æ•°(å¦‚æžœéœ€è¦?çš„è¯?è¿˜å?¯ä»¥å¢žåŠ getField)

            // ä¸‹é?¢è¿™ä¸ªå¹¶ä¸?æ˜¯å¿…éœ€çš„ã€‚å?ªä¸?è¿‡èµ¶å·§ç³»ç»Ÿæœ¬èº«å·²ç»?æ??ä¾›äº†ä¸€ä¸ªè±?å…?å¼€å…³ã€‚æ‰“å¼€å¼€å…³ä»¥å?Žï¼Œå?Žç»­æ‰€æœ‰çš„å?—é™?APIéƒ½å?¯ä»¥ç›´æŽ¥è°ƒç”¨äº†ï¼Œå°±è¿žä¸Šé?¢å‡†å¤‡çš„å‡ ä¸ªè·³æ?¿å‡½æ•°éƒ½ä¸?éœ€è¦?äº†
            setHiddenApiExemptions = (Method) getDeclaredMethod.invoke(vmRuntimeClass, "setHiddenApiExemptions", new Class[]{String[].class});
        } catch (Throwable e) {
            Log.e(TAG, "reflect bootstrap failed:", e);
        }
    }

    public static boolean exempt(String method) {
        return exempt(new String[]{method});
    }

    public static boolean exempt(String... methods) {
        if (sVmRuntime == null || setHiddenApiExemptions == null) {
            return false;
        }

        try {
            setHiddenApiExemptions.invoke(sVmRuntime, new Object[]{methods});
            return true;
        } catch (Throwable e) {
            return false;
        }
    }

    public static boolean exemptAll() {
        //æŒ‡å®šè¢«è±?å…?çš„æ–¹æ³•ç­¾å??å­—ç¬¦ä¸²ã€‚æ‰€æœ‰æ–¹æ³•ç­¾å??å­—ç¬¦ä¸²éƒ½æ˜¯Lå¼€å¤´ï¼Œå› æ­¤Lå?¯ä»¥è±?å…?æ‰€æœ‰æŽ¥å?£
        return exempt(new String[]{"L"});
    }
}
