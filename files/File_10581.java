package com.vondear.rxdemo.view;

/**
 * Created by vondear on 16-11-13.
 */

import android.animation.TypeEvaluator;
import android.graphics.PointF;

/**
 * è‡ªå®šä¹‰ä¼°å€¼å™¨
 * @author vondear
 */
public class RxPointFTypeEvaluator implements TypeEvaluator<PointF> {
    /**
     * æ¯?ä¸ªä¼°å€¼å™¨å¯¹åº”ä¸€ä¸ªå±žæ€§åŠ¨ç”»ï¼Œæ¯?ä¸ªå±žæ€§åŠ¨ç”»ä»…å¯¹åº”å”¯ä¸€ä¸€ä¸ªæŽ§åˆ¶ç‚¹
     */
    PointF control;
    /**
     * ä¼°å€¼å™¨è¿”å›žå€¼
     */
    PointF mPointF = new PointF();

    public RxPointFTypeEvaluator(PointF control) {
        this.control = control;
    }

    @Override
    public PointF evaluate(float fraction, PointF startValue, PointF endValue) {
        return getBezierPoint(startValue, endValue, control, fraction);
    }

    /**
     * äºŒæ¬¡è´?å¡žå°”æ›²çº¿å…¬å¼?
     *
     * @param start   å¼€å§‹çš„æ•°æ?®ç‚¹
     * @param end     ç»“æ?Ÿçš„æ•°æ?®ç‚¹
     * @param control æŽ§åˆ¶ç‚¹
     * @param t       float 0-1
     * @return ä¸?å?Œtå¯¹åº”çš„PointF
     */
    private PointF getBezierPoint(PointF start, PointF end, PointF control, float t) {
        mPointF.x = (1 - t) * (1 - t) * start.x + 2 * t * (1 - t) * control.x + t * t * end.x;
        mPointF.y = (1 - t) * (1 - t) * start.y + 2 * t * (1 - t) * control.y + t * t * end.y;
        return mPointF;
    }
}
