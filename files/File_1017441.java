package com.foxinmy.weixin4j.mp.model;

import java.io.Serializable;

import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.annotation.JSONField;
import com.foxinmy.weixin4j.mp.type.ClientPlatformType;
import com.foxinmy.weixin4j.mp.type.Lang;
import com.foxinmy.weixin4j.type.Gender;

/**
 * ä¸ªæ€§åŒ–è?œå?•åŒ¹é…?è§„åˆ™
 * 
 * @className MenuMatchRule
 * @author jinyu(foxinmy@gmail.com)
 * @date 2015å¹´12æœˆ17æ—¥
 * @since JDK 1.6
 * @see
 */
public class MenuMatchRule implements Serializable {

	private static final long serialVersionUID = 8115117407710728580L;

	private JSONObject matchRule;

	public MenuMatchRule() {
		this.matchRule = new JSONObject();
	}

	/**
	 * ç”¨æˆ·æ ‡ç­¾idï¼Œå?¯é€šè¿‡ç”¨æˆ·è¡¨æƒ…ç®¡ç?†æŽ¥å?£èŽ·å?–
	 */
	private Integer tagId;

	@JSONField(name = "tag_id")
	public MenuMatchRule group(int tagId) {
		matchRule.put("tag_id", tagId);
		this.tagId = tagId;
		return this;
	}

	/**
	 * æ€§åˆ«
	 */
	private Gender gender;

	@JSONField(name = "sex")
	public void gender0(int sex) {
		this.gender = Gender.values().length >= sex ? Gender.values()[sex - 1]
				: null;
	}

	public MenuMatchRule gender(Gender gender) {
		if (gender != null && gender != Gender.unknown) {
			matchRule.put("sex", gender.ordinal() + 1);
		}
		this.gender = gender;
		return this;
	}

	/**
	 * å®¢æˆ·ç«¯ç‰ˆæœ¬
	 */
	private ClientPlatformType platformType;

	/**
	 * è¯·ä½¿ç”¨ {@link #platform(ClientPlatformType platformType)}}
	 * @param platform
	 */
	@JSONField(name = "client_platform_type")
	public void platform0(int platform) {
		this.platformType = ClientPlatformType.values().length >= platform ? ClientPlatformType
				.values()[platform - 1] : null;
	}

	public MenuMatchRule platform(ClientPlatformType platformType) {
		if (platformType != null) {
			matchRule.put("client_platform_type", platformType.ordinal() + 1);
		}
		this.platformType = platformType;
		return this;
	}

	private String country;

	/**
	 * å›½å®¶ä¿¡æ?¯ï¼Œæ˜¯ç”¨æˆ·åœ¨å¾®ä¿¡ä¸­è®¾ç½®çš„åœ°åŒº
	 * <p>
	 * countryã€?provinceã€?cityç»„æˆ?åœ°åŒºä¿¡æ?¯ï¼Œå°†æŒ‰ç…§countryã€?provinceã€?cityçš„é¡ºåº?è¿›è¡ŒéªŒè¯?
	 * ï¼Œè¦?ç¬¦å?ˆåœ°åŒºä¿¡æ?¯è¡¨çš„å†…å®¹ã€‚åœ°åŒºä¿¡æ?¯ä»Žå¤§åˆ°å°?éªŒè¯?ï¼Œå°?çš„å?¯ä»¥ä¸?å¡«ï¼Œå?³è‹¥å¡«å†™äº†çœ?ä»½ä¿¡æ?¯ï¼Œåˆ™å›½å®¶ä¿¡æ?¯ä¹Ÿå¿…å¡«å¹¶ä¸”åŒ¹é…?ï¼ŒåŸŽå¸‚ä¿¡æ?¯å?¯ä»¥ä¸?å¡«ã€‚ ä¾‹å¦‚ â€œä¸­å›½
	 * å¹¿ä¸œçœ? å¹¿å·žå¸‚â€?ã€?â€œä¸­å›½ å¹¿ä¸œçœ?â€?éƒ½æ˜¯å?ˆæ³•çš„åœ°åŸŸä¿¡æ?¯ï¼Œè€Œâ€œä¸­å›½ å¹¿å·žå¸‚â€?åˆ™ä¸?å?ˆæ³•ï¼Œå› ä¸ºå¡«å†™äº†åŸŽå¸‚ä¿¡æ?¯ä½†æ²¡æœ‰å¡«å†™çœ?ä»½ä¿¡æ?¯
	 * 
	 * @param country
	 * @return
	 */
	@JSONField(name = "country")
	public MenuMatchRule country(String country) {
		matchRule.put("country", country);
		this.country = country;
		return this;
	}

	private String province;

	/**
	 * çœ?ä»½ä¿¡æ?¯ï¼Œæ˜¯ç”¨æˆ·åœ¨å¾®ä¿¡ä¸­è®¾ç½®çš„åœ°åŒº
	 * <p>
	 * countryã€?provinceã€?cityç»„æˆ?åœ°åŒºä¿¡æ?¯ï¼Œå°†æŒ‰ç…§countryã€?provinceã€?cityçš„é¡ºåº?è¿›è¡ŒéªŒè¯?ï¼Œè¦?ç¬¦å?ˆåœ°åŒºä¿¡æ?¯è¡¨çš„å†…å®¹ã€‚
	 * åœ°åŒºä¿¡æ?¯ä»Žå¤§åˆ°å°?éªŒè¯?ï¼Œå°?çš„å?¯ä»¥ä¸?å¡«ï¼Œå?³è‹¥å¡«å†™äº†çœ?ä»½ä¿¡æ?¯ï¼Œåˆ™å›½å®¶ä¿¡æ?¯ä¹Ÿå¿…å¡«å¹¶ä¸”åŒ¹é…?ï¼ŒåŸŽå¸‚ä¿¡æ?¯å?¯ä»¥ä¸?å¡«ã€‚ ä¾‹å¦‚ â€œä¸­å›½ å¹¿ä¸œçœ? å¹¿å·žå¸‚â€?ã€?â€œä¸­å›½
	 * å¹¿ä¸œçœ?â€?éƒ½æ˜¯å?ˆæ³•çš„åœ°åŸŸä¿¡æ?¯ï¼Œè€Œâ€œä¸­å›½ å¹¿å·žå¸‚â€?åˆ™ä¸?å?ˆæ³•ï¼Œå› ä¸ºå¡«å†™äº†åŸŽå¸‚ä¿¡æ?¯ä½†æ²¡æœ‰å¡«å†™çœ?ä»½ä¿¡æ?¯
	 * 
	 * @param country
	 * @return
	 */
	@JSONField(name = "province")
	public MenuMatchRule province(String province) {
		matchRule.put("province", province);
		this.province = province;
		return this;
	}

	private String city;

	/**
	 * åŸŽå¸‚ä¿¡æ?¯ï¼Œæ˜¯ç”¨æˆ·åœ¨å¾®ä¿¡ä¸­è®¾ç½®çš„åœ°åŒº
	 * <p>
	 * countryã€?provinceã€?cityç»„æˆ?åœ°åŒºä¿¡æ?¯ï¼Œå°†æŒ‰ç…§countryã€?provinceã€?cityçš„é¡ºåº?è¿›è¡ŒéªŒè¯?ï¼Œè¦?ç¬¦å?ˆåœ°åŒºä¿¡æ?¯è¡¨çš„å†…å®¹ã€‚
	 * åœ°åŒºä¿¡æ?¯ä»Žå¤§åˆ°å°?éªŒè¯?ï¼Œå°?çš„å?¯ä»¥ä¸?å¡«ï¼Œå?³è‹¥å¡«å†™äº†çœ?ä»½ä¿¡æ?¯ï¼Œåˆ™å›½å®¶ä¿¡æ?¯ä¹Ÿå¿…å¡«å¹¶ä¸”åŒ¹é…?ï¼ŒåŸŽå¸‚ä¿¡æ?¯å?¯ä»¥ä¸?å¡«ã€‚ ä¾‹å¦‚ â€œä¸­å›½ å¹¿ä¸œçœ? å¹¿å·žå¸‚â€?ã€?â€œä¸­å›½
	 * å¹¿ä¸œçœ?â€?éƒ½æ˜¯å?ˆæ³•çš„åœ°åŸŸä¿¡æ?¯ï¼Œè€Œâ€œä¸­å›½ å¹¿å·žå¸‚â€?åˆ™ä¸?å?ˆæ³•ï¼Œå› ä¸ºå¡«å†™äº†åŸŽå¸‚ä¿¡æ?¯ä½†æ²¡æœ‰å¡«å†™çœ?ä»½ä¿¡æ?¯
	 * 
	 * @param city
	 * @return
	 */
	@JSONField(name = "city")
	public MenuMatchRule city(String city) {
		matchRule.put("city", city);
		this.city = city;
		return this;
	}

	/**
	 * è¯­è¨€ä¿¡æ?¯ï¼Œæ˜¯ç”¨æˆ·åœ¨å¾®ä¿¡ä¸­è®¾ç½®çš„è¯­è¨€
	 */
	private Lang language;

	/**
	 * è¯·ä½¿ç”¨ {@link #language(Lang language)}
	 * @param language
	 */
	@JSONField(name = "language")
	public void language0(int language) {
		this.language = Lang.values().length >= language ? Lang.values()[language - 1]
				: null;
	}

	public MenuMatchRule language(Lang language) {
		if (language != null) {
			matchRule.put("language", language.ordinal() + 1);
		}
		this.language = language;
		return this;
	}

	public ClientPlatformType getPlatformType() {
		return platformType;
	}

	public Integer getTagId() {
		return tagId;
	}

	public Gender getGender() {
		return gender;
	}

	public String getCountry() {
		return country;
	}

	public String getProvince() {
		return province;
	}

	public String getCity() {
		return city;
	}

	public Lang getLanguage() {
		return language;
	}

	public boolean hasRule() {
		return !matchRule.isEmpty();
	}

	public JSONObject getRule() {
		return this.matchRule;
	}

	@Override
	public String toString() {
		return "MenuMatchRule [tagId=" + tagId + ", gender=" + gender
				+ ", platformType=" + platformType + ", country=" + country
				+ ", province=" + province + ", city=" + city + ", language="
				+ language + "]";
	}
}
