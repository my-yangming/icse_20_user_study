/*Copyright Â©2015 TommyLemon(https://github.com/TommyLemon)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.*/

package zuo.biao.library.base;

import java.util.ArrayList;
import java.util.List;

import zuo.biao.library.util.CommonUtil;
import zuo.biao.library.util.Log;
import android.app.Activity;
import android.content.Intent;
import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnLongClickListener;
import android.view.View.OnTouchListener;

/**åŸºç¡€è‡ªå®šä¹‰View
 * @author Lemon
 * @param <T> æ•°æ?®æ¨¡åž‹(model/JavaBean)ç±»
 * @see OnViewClickListener
 * @see #onDestroy
 * @use extends BaseView<T>, å…·ä½“å?‚è€ƒ.DemoView
 */
public abstract class BaseView<T> {
	private static final String TAG = "BaseView";

	/**
	 * ä¼ å…¥çš„Activity,å?¯åœ¨å­?ç±»ç›´æŽ¥ä½¿ç”¨
	 */
	public Activity context;
	public Resources resources;
	public BaseView(Activity context, Resources resources) {
		this.context = context;
		this.resources = resources;
	}

	/**ç‚¹å‡»Viewçš„äº‹ä»¶ç›‘å?¬å›žè°ƒï¼Œä¸»è¦?æ˜¯ä¸ºäº†activityæˆ–fragmenté—´æŽ¥é€šè¿‡adapteræŽ¥ç®¡baseViewçš„ç‚¹å‡»äº‹ä»¶
	 * @param <T>
	 * @param <BV>
	 * @must å­?ç±»é‡?å†™setOnClickListeneræ–¹æ³•ä¸”view.setOnClickListener(listener)äº‹ä»¶ç»Ÿä¸€å†™åœ¨è¿™ä¸ªæ–¹æ³•é‡Œé?¢
	 */
	public interface OnViewClickListener<T, BV extends BaseView<T>> {
		/**onClick(v)äº‹ä»¶ç”±è¿™ä¸ªæ–¹æ³•æŽ¥ç®¡
		 * @param v
		 * @param bv
		 */
		void onViewClick(View v, BV bv);
	}

	/**æ•°æ?®æ”¹å?˜å›žè°ƒæŽ¥å?£
	 * (Object) getData() - æ”¹å?˜çš„æ•°æ?®
	 */
	public interface OnDataChangedListener {
		void onDataChanged();
	}

	public OnDataChangedListener onDataChangedListener;//æ•°æ?®æ”¹å?˜å›žè°ƒç›‘å?¬å›žè°ƒçš„å®žä¾‹
	/**è®¾ç½®æ•°æ?®æ”¹å?˜äº‹ä»¶ç›‘å?¬å›žè°ƒ
	 * @param listener
	 */
	public void setOnDataChangedListener(OnDataChangedListener listener) {
		onDataChangedListener = listener;
	}

	public OnTouchListener onTouchListener;//æŽ¥è§¦Viewå›žè°ƒç›‘å?¬å›žè°ƒçš„å®žä¾‹
	/**è®¾ç½®æŽ¥è§¦Viewäº‹ä»¶ç›‘å?¬å›žè°ƒ
	 * @param listener
	 */
	public void setOnTouchListener(OnTouchListener listener) {
		onTouchListener = listener;
	}

	public OnClickListener onClickListener;//ç‚¹å‡»Viewå›žè°ƒç›‘å?¬å›žè°ƒçš„å®žä¾‹
	/**è®¾ç½®ç‚¹å‡»Viewäº‹ä»¶ç›‘å?¬å›žè°ƒ
	 * @param listener
	 */
	public void setOnClickListener(OnClickListener listener) {
		onClickListener = listener;
		if (onClickViewList != null) {
			for (View v : onClickViewList) {
				if (v != null) {
					v.setOnClickListener(listener);
				}
			}
		}
	}

	public OnLongClickListener onLongClickListener;//é•¿æŒ‰Viewå›žè°ƒç›‘å?¬å›žè°ƒçš„å®žä¾‹
	/**è®¾ç½®é•¿æŒ‰Viewäº‹ä»¶ç›‘å?¬å›žè°ƒ
	 * @param listener
	 */
	public void setOnLongClickListener(OnLongClickListener listener) {
		onLongClickListener = listener;
	}


	/**
	 * å­?ç±»æ•´ä¸ªè§†å›¾,å?¯åœ¨å­?ç±»ç›´æŽ¥ä½¿ç”¨
	 * @must createViewæ–¹æ³•å†…å¯¹å…¶èµ‹å€¼ä¸”ä¸?èƒ½ä¸ºnull
	 */
	protected View convertView = null;

	protected List<View> onClickViewList;
	/**é€šè¿‡idæŸ¥æ‰¾å¹¶èŽ·å?–æŽ§ä»¶ï¼Œä½¿ç”¨æ—¶ä¸?éœ€è¦?å¼ºè½¬
	 * @param id
	 * @return 
	 */
	@SuppressWarnings("unchecked")
	public <V extends View> V findViewById(int id) {
		return (V) convertView.findViewById(id);
	}
	/**é€šè¿‡idæŸ¥æ‰¾å¹¶èŽ·å?–æŽ§ä»¶ï¼Œå¹¶setOnClickListener
	 * @param id
	 * @param listener
	 * @return
	 */
	public <V extends View> V findViewById(int id, OnClickListener listener) {
		V v = findViewById(id);
		v.setOnClickListener(listener);
		if (onClickViewList == null) {
			onClickViewList = new ArrayList<View>();
		}
		onClickViewList.add(v);
		return v;
	}

	/**
	 * è§†å›¾ç±»åž‹ï¼Œéƒ¨åˆ†æƒ…å†µä¸‹éœ€è¦?æ ¹æ?®viewTypeä½¿ç”¨ä¸?å?Œlayoutï¼Œå¯¹åº”Adapterçš„itemViewType
	 */
	protected int viewType = 0;
	/**
	 * dataåœ¨åˆ—è¡¨ä¸­çš„ä½?ç½®
	 * @must å?ªä½¿ç”¨bindView(int position, T data)æ–¹æ³•æ?¥è®¾ç½®positionï¼Œä¿?è¯?positionä¸Ždataå¯¹åº”æ­£ç¡®
	 */
	protected int position = 0;
	/**èŽ·å?–dataåœ¨åˆ—è¡¨ä¸­çš„ä½?ç½®
	 */
	public int getPosition() {
		return position;
	}

	/**åˆ›å»ºä¸€ä¸ªæ–°çš„View
	 * @param inflater - @NonNullï¼Œå¸ƒå±€è§£é‡Šå™¨
	 * @param viewType - è§†å›¾ç±»åž‹ï¼Œéƒ¨åˆ†æƒ…å†µä¸‹éœ€è¦?æ ¹æ?®viewTypeä½¿ç”¨ä¸?å?Œlayout
	 * @return
	 */
	public View createView(LayoutInflater inflater, int position, int viewType) {
		this.position = position;
		this.viewType = viewType;
		return createView(inflater);
	}
	/**åˆ›å»ºä¸€ä¸ªæ–°çš„View
	 * @param inflater - @NonNullï¼Œå¸ƒå±€è§£é‡Šå™¨
	 * @return
	 */
	public abstract View createView(LayoutInflater inflater);

	/**èŽ·å?–convertViewçš„å®½åº¦
	 * @warn å?ªèƒ½åœ¨createViewå?Žä½¿ç”¨
	 * @return
	 */
	public int getWidth() {
		return convertView.getWidth();
	}
	/**èŽ·å?–convertViewçš„é«˜åº¦
	 * @warn å?ªèƒ½åœ¨createViewå?Žä½¿ç”¨
	 * @return
	 */
	public int getHeight() {
		return convertView.getHeight();
	}



	protected T data = null;
	/**èŽ·å?–æ•°æ?®
	 * @return
	 */
	public T getData() {
		return data;
	}


	/**è®¾ç½®å¹¶æ˜¾ç¤ºå†…å®¹ï¼Œå»ºè®®åœ¨å­?ç±»bindViewå†…this.data = data;
	 * @warn å?ªèƒ½åœ¨createViewå?Žä½¿ç”¨
	 * @param data - ä¼ å…¥çš„æ•°æ?®
	 * @param position - dataåœ¨åˆ—è¡¨ä¸­çš„ä½?ç½®
	 * @param viewType - è§†å›¾ç±»åž‹ï¼Œéƒ¨åˆ†æƒ…å†µä¸‹éœ€è¦?æ ¹æ?®viewTypeä½¿ç”¨ä¸?å?Œlayout
	 */
	public void bindView(T data, int position, int viewType) {
		this.position = position;
		this.viewType = viewType;
		bindView(data);
	}
	/**è®¾ç½®å¹¶æ˜¾ç¤ºå†…å®¹ï¼Œå»ºè®®åœ¨å­?ç±»bindViewå†…this.data = data;
	 * @warn å?ªèƒ½åœ¨createViewå?Žä½¿ç”¨
	 * @param data - ä¼ å…¥çš„æ•°æ?®
	 */
	public abstract void bindView(T data);

	/**èŽ·å?–å?¯è§?æ€§
	 * @warn å?ªèƒ½åœ¨createViewå?Žä½¿ç”¨
	 * @return å?¯è§?æ€§ (View.VISIBLE, View.GONE, View.INVISIBLE);
	 */
	public int getVisibility() {
		return convertView.getVisibility();
	}
	/**è®¾ç½®å?¯è§?æ€§
	 * @warn å?ªèƒ½åœ¨createViewå?Žä½¿ç”¨
	 * @param visibility - å?¯è§?æ€§ (View.VISIBLE, View.GONE, View.INVISIBLE);
	 */
	public void setVisibility(int visibility) {
		convertView.setVisibility(visibility);
	}


	/**è®¾ç½®èƒŒæ™¯
	 * @warn å?ªèƒ½åœ¨createViewå?Žä½¿ç”¨
	 * @param resId
	 */
	public void setBackground(int resId) {
		if (resId > 0 && convertView != null) {
			try {
				convertView.setBackgroundResource(resId);
			} catch (Exception e) {
				Log.e(TAG, "setBackground   try { convertView.setBackgroundResource(resId);" +
						" \n >> } catch (Exception e) { \n" + e.getMessage());
			}
		}
	}


	//	/**æ€§èƒ½ä¸?å¥½
	//	 * @param id
	//	 * @param s
	//	 */
	//	public void setText(int id, String s) {
	//		TextView tv = (TextView) findViewById(id);
	//		tv.setText(s);
	//	}



	//resourcesæ–¹æ³•<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

	public final Resources getResources() {
		if(resources == null) {
			resources = context.getResources();
		} 
		return resources;
	}

	public String getString(int id) {
		return getResources().getString(id);
	}
	public int getColor(int id) {
		return getResources().getColor(id);
	}
	public Drawable getDrawable(int id) {
		return getResources().getDrawable(id);
	}
	public float getDimension(int id) {
		return getResources().getDimension(id);
	}
	//resourcesæ–¹æ³•>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


	//show short toast æ–¹æ³•<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	/**å¿«æ?·æ˜¾ç¤ºshort toastæ–¹æ³•ï¼Œéœ€è¦?long toastå°±ç”¨ Toast.makeText(string, Toast.LENGTH_LONG).show(); ---ä¸?å¸¸ç”¨æ‰€ä»¥è¿™ä¸ªç±»é‡Œä¸?å†™
	 * @param stringResId
	 */
	public void showShortToast(int stringResId) {
		CommonUtil.showShortToast(context, stringResId);
	}
	/**å¿«æ?·æ˜¾ç¤ºshort toastæ–¹æ³•ï¼Œéœ€è¦?long toastå°±ç”¨ Toast.makeText(string, Toast.LENGTH_LONG).show(); ---ä¸?å¸¸ç”¨æ‰€ä»¥è¿™ä¸ªç±»é‡Œä¸?å†™
	 * @param string
	 */
	public void showShortToast(String string) {
		CommonUtil.showShortToast(context, string);
	}
	//show short toast æ–¹æ³•>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


	//å?¯åŠ¨æ–°Activityæ–¹æ³•<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

	/**æ‰“å¼€æ–°çš„Activityï¼Œå?‘å·¦æ»‘å…¥æ•ˆæžœ
	 * @param intent
	 */
	public void toActivity(final Intent intent) {
		CommonUtil.toActivity(context, intent);
	}
	/**æ‰“å¼€æ–°çš„Activity
	 * @param intent
	 * @param showAnimation
	 */
	public void toActivity(final Intent intent, final boolean showAnimation) {
		CommonUtil.toActivity(context, intent, showAnimation);
	}
	/**æ‰“å¼€æ–°çš„Activityï¼Œå?‘å·¦æ»‘å…¥æ•ˆæžœ
	 * @param intent
	 * @param requestCode
	 */
	public void toActivity(final Intent intent, final int requestCode) {
		CommonUtil.toActivity(context, intent, requestCode);
	}
	/**æ‰“å¼€æ–°çš„Activity
	 * @param intent
	 * @param requestCode
	 * @param showAnimation
	 */
	public void toActivity(final Intent intent, final int requestCode, final boolean showAnimation) {
		CommonUtil.toActivity(context, intent, requestCode, showAnimation);
	}
	//å?¯åŠ¨æ–°Activityæ–¹æ³•>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

	/**é”€æ¯?å¹¶å›žæ”¶å†…å­˜ï¼Œå»ºè®®åœ¨å¯¹åº”çš„Viewå? ç”¨å¤§é‡?å†…å­˜æ—¶ä½¿ç”¨
	 * @warn å?ªèƒ½åœ¨UIçº¿ç¨‹ä¸­è°ƒç”¨
	 */
	public void onDestroy() {
		if (convertView != null) {
			try {
				convertView.destroyDrawingCache();
			} catch (Exception e) {
				Log.w(TAG, "onDestroy  try { convertView.destroyDrawingCache();" +
						" >> } catch (Exception e) {\n" + e.getMessage());
			}
			convertView = null;
		}

		onDataChangedListener = null;
		onTouchListener = null;
		onClickListener = null;
		onLongClickListener = null;
		onClickViewList = null;

		data = null;
		position = 0;

		context = null;
	}

}
