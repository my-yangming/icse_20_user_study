package com.crossoverjie.actual;

/**
 * Function: ä¸¤ä¸ªçº¿ç¨‹äº¤æ›¿æ‰§è¡Œæ‰“å?° 1~100
 * <p>
 * non blocking ç‰ˆï¼š
 * ä¸¤ä¸ªçº¿ç¨‹è½®è¯¢volatileå?˜é‡?(flag) 
 * çº¿ç¨‹ä¸€"çœ‹åˆ°"flagå€¼ä¸º1æ—¶æ‰§è¡Œä»£ç ?å¹¶å°†flagè®¾ç½®ä¸º0,
 * çº¿ç¨‹äºŒ"çœ‹åˆ°"flagå€¼ä¸º0æ—¶æ‰§è¡Œä»£ç ?å¹¶å°†flagè®¾ç½®æœª1,
 * 2ä¸ªçº¿ç¨‹ä¸?æ–­è½®è¯¢ç›´åˆ°æ»¡è¶³æ?¡ä»¶é€€å‡º
 *
 * @author twoyao
 * Date: 05/07/2018
 * @since JDK 1.8
 */

public class TwoThreadNonBlocking implements Runnable {

    /**
     * å½“flagä¸º1æ—¶å?ªæœ‰å¥‡æ•°çº¿ç¨‹å?¯ä»¥æ‰§è¡Œï¼Œå¹¶å°†å…¶ç½®ä¸º0
     * å½“flagä¸º0æ—¶å?ªæœ‰å?¶æ•°çº¿ç¨‹å?¯ä»¥æ‰§è¡Œï¼Œå¹¶å°†å…¶ç½®ä¸º1
     */
    private volatile static int flag = 1;

    private int start;
    private int end;
    private String name;

    private TwoThreadNonBlocking(int start, int end, String name) {
        this.name = name;
        this.start = start;
        this.end = end;
    }

    @Override
    public void run() {
        while (start <= end) {
            int f = flag;
            if ((start & 0x01) == f) {
                System.out.println(name + "+-+" + start);
                start += 2;
                // å› ä¸ºå?ªå?¯èƒ½å?Œæ—¶å­˜åœ¨ä¸€ä¸ªçº¿ç¨‹ä¿®æ”¹è¯¥å€¼ï¼Œæ‰€ä»¥ä¸?ä¼šå­˜åœ¨ç«žäº‰
                flag ^= 0x1;
            }
        }
    }


    public static void main(String[] args) {
        new Thread(new TwoThreadNonBlocking(1, 100, "t1")).start();
        new Thread(new TwoThreadNonBlocking(2, 100, "t2")).start();
    }
}
