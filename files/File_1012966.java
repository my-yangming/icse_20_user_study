package com.lianglu.weyue.utils.rxhelper;

import io.reactivex.Observable;
import io.reactivex.subjects.PublishSubject;

/**
 * Created by LiangLu on 17-12-18.
 * åŽŸç?†:PublishSubjectæœ¬èº«ä½œä¸ºè§‚å¯Ÿè€…å’Œè¢«è§‚å¯Ÿè€…ã€‚
 */

public class RxBus {
    private static volatile RxBus sInstance;
    private final PublishSubject<Object> mEventBus = PublishSubject.create();

    public static RxBus getInstance(){
        if (sInstance == null){
            synchronized (RxBus.class){
                if (sInstance == null){
                    sInstance = new RxBus();
                }
            }
        }
        return sInstance;
    }

    /**
     * å?‘é€?äº‹ä»¶(post event)
     * @param event : event object(äº‹ä»¶çš„å†…å®¹)
     */
    public void post(Object event){
        mEventBus.onNext(event);
    }

    /**
     *
     * @param code
     * @param event
     */
    public void post(int code,Object event){
        Message msg = new Message(code,event);
        mEventBus.onNext(msg);
    }

    /**
     * è¿”å›žEventçš„ç®¡ç?†è€…,è¿›è¡Œå¯¹äº‹ä»¶çš„æŽ¥å?—
     * @return
     */
    public Observable toObservable(){
        return mEventBus;
    }

    /**
     *
     * @param cls :ä¿?è¯?æŽ¥å?—åˆ°åˆ¶å®šçš„ç±»åž‹
     * @param <T>
     * @return
     */
    public <T> Observable<T> toObservable(Class<T> cls){
        //ofTypeèµ·åˆ°è¿‡æ»¤çš„ä½œç”¨,ç¡®å®šæŽ¥å?—çš„ç±»åž‹
        return mEventBus.ofType(cls);
    }

    public <T> Observable<T> toObservable(int code, Class<T> cls){
        return mEventBus.ofType(Message.class)
                .filter(msg -> msg.code == code && cls.isInstance(msg.event))
                .map( msg -> (T)msg.event);

    }

    class Message{
        int code;
        Object event;

        public Message(int code,Object event){
            this.code = code;
            this.event = event;
        }
    }
}
