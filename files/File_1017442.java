package com.foxinmy.weixin4j.mp.model;

import java.io.Serializable;

import com.alibaba.fastjson.JSONObject;
import com.foxinmy.weixin4j.mp.type.SemCategory;

/**
 * è¯­ä¹‰ç?†è§£å?‚æ•°
 * 
 * @className SemQuery
 * @author jinyu(foxinmy@gmail.com)
 * @date 2014å¹´11æœˆ7æ—¥
 * @since JDK 1.6
 * @see
 */
public class SemQuery implements Serializable {

	private static final long serialVersionUID = 679548284525912436L;
	private JSONObject jsonObj;

	/**
	 * è¾“å…¥æ–‡æœ¬ä¸²
	 * 
	 * @param query
	 */
	public SemQuery(String query) {
		jsonObj = new JSONObject();
		jsonObj.put("query", query);
	}

	/**
	 * åŸŽå¸‚å??ç§°,ä¸Žç»?çº¬åº¦äºŒé€‰ä¸€ä¼ å…¥
	 * 
	 * @param city
	 * @return
	 */
	public SemQuery city(String city) {
		jsonObj.put("city", city);
		return this;
	}

	/**
	 * éœ€è¦?ä½¿ç”¨çš„æœ?åŠ¡ç±»åˆ«,å¤šä¸ªç”¨,éš”å¼€,ä¸?èƒ½ä¸ºç©º
	 * 
	 * @param categorys
	 * @return
	 */
	public SemQuery category(SemCategory... categorys) {
		StringBuilder category = new StringBuilder();
		if (categorys.length == 1) {
			category.append(categorys[0].name());
		} else {
			for (int i = 0; i < categorys.length - 1; i++) {
				category.append(categorys[i].name()).append(",");
			}
			category.append(categorys[categorys.length - 1].name());
		}
		jsonObj.put("category", category.toString());
		return this;
	}

	/**
	 * ï¿¼App id,å¼€å?‘è€…çš„å”¯ä¸€æ ‡è¯†,ç”¨äºŽåŒºåˆ†å¼€æ”¾è€…, å¦‚æžœä¸ºç©º,åˆ™æ²¡æ³•ä½¿ç”¨ä¸Šä¸‹æ–‡ç?†è§£åŠŸèƒ½ã€‚
	 * 
	 * @param appid
	 * @return
	 */
	public SemQuery appid(String appid) {
		jsonObj.put("appid", appid);
		return this;
	}

	/**
	 * ç”¨æˆ·å”¯ä¸€ id(å¹¶é?žå¼€å?‘è€… id),ç”¨äºŽåŒºåˆ†è¯¥å¼€å?‘è€…ä¸‹ä¸?å?Œç”¨æˆ·,å¦‚æžœä¸ºç©º,åˆ™æ²¡æ³•ä½¿ç”¨ä¸Šä¸‹æ–‡ç?†è§£åŠŸèƒ½ã€‚appid å’Œ
	 * uidå?Œæ—¶å­˜åœ¨çš„æƒ…å†µä¸‹,æ‰?å?¯ä»¥ä½¿ç”¨ä¸Šä¸‹æ–‡ç?†è§£åŠŸèƒ½ã€‚
	 * 
	 * @param uid
	 * @return
	 */
	public SemQuery uid(String uid) {
		jsonObj.put("uid", uid);
		return this;
	}

	/**
	 * åŒºåŸŸå??ç§°,åœ¨åŸŽå¸‚å­˜åœ¨çš„æƒ…å†µä¸‹å?¯çœ?;ä¸Žç»?çº¬åº¦ äºŒé€‰ä¸€ä¼ å…¥
	 * 
	 * @param region
	 * @return
	 */
	public SemQuery region(String region) {
		jsonObj.put("region", region);
		return this;
	}

	/**
	 * çº¬åº¦ç»?åº¦;ä¸ŽåŸŽå¸‚äºŒé€‰ä¸€ä¼ å…¥
	 * 
	 * @param latitude
	 * @param longitude
	 * @return
	 */
	public SemQuery location(float latitude, float longitude) {
		jsonObj.put("latitude", latitude);
		jsonObj.put("longitude", longitude);
		return this;
	}

	/**
	 * è¾“å…¥æ–‡æœ¬ä¸²
	 * 
	 * @param query
	 * @return
	 */
	public static SemQuery build(String query) {
		return new SemQuery(query);
	}

	public String toJson() {
		return jsonObj.toJSONString();
	}

	@Override
	public String toString() {
		return "SemQuery " + jsonObj;
	}
}
