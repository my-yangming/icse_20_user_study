package com.vondear.rxtool;

import android.content.Context;
import android.content.SharedPreferences;

/**
 * SharedPreferenceså·¥å…·ç±»
 *
 * @author vondear
 * @date 2016/1/24
 */

public class RxSPTool {

    private final static String JSON_CACHE = "JSON_CACHE";

    /**
     * å­˜å…¥è‡ªå®šä¹‰çš„æ ‡è¯†çš„æ•°æ?® å?¯ä»¥è¿‘ä¼¼çš„çœ‹ä½œç½‘ç»œä¸‹è½½æ•°æ?®çš„ç¼“å­˜
     * å?•æ?¡æ–¹å¼?å­˜å…¥
     *
     * @param context ä½¿ç”¨çš„ä¸Šä¸‹æ–‡
     * @param tag     å­˜å…¥å†…å®¹çš„æ ‡è®°ï¼Œçº¦å®šä¿—æˆ?çš„tagç”¨å½“å‰?çš„ç±»å??å‘½å??æ?¥åŒºåˆ†ä¸?å?Œçš„sp
     * @param content å­˜å…¥çš„å†…
     */
    public static void putContent(Context context, String tag, String content) {
        putString(context, tag, content);
    }

    /**
     * èŽ·å?–ä»¥tagå‘½å??çš„å­˜å‚¨å†…
     *
     * @param context å½“å‰?è°ƒç”¨çš„ä¸Šä¸‹æ–‡
     * @param tag     å‘½å??çš„tag
     * @return è¿”å›žä»¥tagåŒºåˆ†çš„å†…å®¹ï¼Œé»˜è®¤ä¸ºç©º
     */
    public static String getContent(Context context, String tag) {
        return getString(context, tag);
    }

    /**
     * SPä¸­å†™å…¥Stringç±»åž‹value
     *
     * @param key   é”®
     * @param value å€¼
     */
    public static void putString(Context context, String key, String value) {
        SharedPreferences sp = context.getSharedPreferences(key, Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = sp.edit();
        editor.putString(key, value);
        editor.apply();
    }

    /**
     * SPä¸­è¯»å?–String
     *
     * @param key é”®
     * @return å­˜åœ¨è¿”å›žå¯¹åº”å€¼ï¼Œä¸?å­˜åœ¨è¿”å›žé»˜è®¤å€¼{@code defaultValue}
     */
    public static String getString(Context context, String key) {
        SharedPreferences sp = context.getSharedPreferences(key, Context.MODE_PRIVATE);
        String value;
        value = sp.getString(key, "");
        return value;
    }

    /**
     * SPä¸­å†™å…¥intç±»åž‹value
     *
     * @param key   é”®
     * @param value å€¼
     */
    public static void putInt(Context context, String key, int value) {
        SharedPreferences sp = context.getSharedPreferences(key, Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = sp.edit();
        editor.putInt(key, value);
        editor.apply();
    }

    /**
     * SPä¸­è¯»å?–int
     *
     * @param key é”®
     * @return å­˜åœ¨è¿”å›žå¯¹åº”å€¼ï¼Œä¸?å­˜åœ¨è¿”å›žé»˜è®¤å€¼-1
     */
    public static int getInt(Context context, String key) {
        SharedPreferences sp = context.getSharedPreferences(key, Context.MODE_PRIVATE);
        int value;
        value = sp.getInt(key, -1);
        return value;
    }

    /**
     * SPä¸­å†™å…¥longç±»åž‹value
     *
     * @param key   é”®
     * @param value å€¼
     */
    public static void putLong(Context context, String key, long value) {
        SharedPreferences sp = context.getSharedPreferences(key, Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = sp.edit();
        editor.putLong(key, value);
        editor.apply();
    }

    /**
     * SPä¸­è¯»å?–long
     *
     * @param key é”®
     * @return å­˜åœ¨è¿”å›žå¯¹åº”å€¼ï¼Œä¸?å­˜åœ¨è¿”å›žé»˜è®¤å€¼-1
     */
    public static long getLong(Context context, String key) {
        SharedPreferences sp = context.getSharedPreferences(key, Context.MODE_PRIVATE);
        long value;
        value = sp.getLong(key, -1L);
        return value;
    }

    /**
     * SPä¸­å†™å…¥floatç±»åž‹value
     *
     * @param key   é”®
     * @param value å€¼
     */
    public static void putFloat(Context context, String key, float value) {
        SharedPreferences sp = context.getSharedPreferences(key, Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = sp.edit();
        editor.putFloat(key, value);
        editor.apply();
    }

    /**
     * SPä¸­è¯»å?–float
     *
     * @param key é”®
     * @return å­˜åœ¨è¿”å›žå¯¹åº”å€¼ï¼Œä¸?å­˜åœ¨è¿”å›žé»˜è®¤å€¼-1
     */
    public static float getFloat(Context context, String key) {
        SharedPreferences sp = context.getSharedPreferences(key, Context.MODE_PRIVATE);
        float value;
        value = sp.getFloat(key, -1F);
        return value;
    }

    /**
     * SPä¸­å†™å…¥booleanç±»åž‹value
     *
     * @param key   é”®
     * @param value å€¼
     */
    public static void putBoolean(Context context, String key, boolean value) {
        SharedPreferences sp = context.getSharedPreferences(key, Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = sp.edit();
        editor.putBoolean(key, value);
        editor.apply();
    }

    /**
     * SPä¸­è¯»å?–boolean
     *
     * @param key é”®
     * @return å­˜åœ¨è¿”å›žå¯¹åº”å€¼ï¼Œä¸?å­˜åœ¨è¿”å›žé»˜è®¤å€¼{@code defaultValue}
     */
    public static boolean getBoolean(Context context, String key) {
        SharedPreferences sp = context.getSharedPreferences(key, Context.MODE_PRIVATE);
        boolean value;
        value = sp.getBoolean(key, false);
        return value;
    }

    /**
     * SPä¸­ç§»é™¤è¯¥key
     *
     * @param key é”®
     */
    public static void remove(Context context, String key) {
        SharedPreferences sp = context.getSharedPreferences(key, Context.MODE_PRIVATE);
        sp.edit().remove(key).apply();
    }


    /**
     * å­˜æ”¾JSONç¼“å­˜æ•°æ?®
     *
     * @param context ä¸Šä¸‹æ–‡
     * @param key é”®å??
     * @param content å†…å®¹
     * @return
     */
    public static void putJSONCache(Context context, String key, String content) {
        SharedPreferences sp = context.getSharedPreferences(JSON_CACHE, Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = sp.edit();
        editor.putString(key, content);
        editor.apply();

    }

    /**
     * è¯»å?–JSONç¼“å­˜æ•°æ?®
     *
     * @param context ä¸Šä¸‹æ–‡
     * @param key é”®å??
     * @return
     */
    public static String readJSONCache(Context context, String key) {
        SharedPreferences sp = context.getSharedPreferences(JSON_CACHE, Context.MODE_PRIVATE);
        String jsoncache = sp.getString(key, null);
        return jsoncache;
    }


    /**
     * æ¸…é™¤æŒ‡å®šçš„ä¿¡æ?¯
     *
     * @param context ä¸Šä¸‹æ–‡
     * @param name é”®å??
     * @param key     è‹¥ä¸ºnull åˆ™åˆ é™¤nameä¸‹æ‰€æœ‰çš„é”®å€¼
     */
    public static void clearPreference(Context context, String name, String key) {
        SharedPreferences sharedPreferences = context.getSharedPreferences(name, Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = sharedPreferences.edit();
        if (key != null) {
            editor.remove(key);
        } else {
            editor.clear();
        }
        editor.apply();
    }
}
