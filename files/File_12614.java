/**
 * IK ä¸­æ–‡åˆ†è¯?  ç‰ˆæœ¬ 5.0
 * IK Analyzer release 5.0
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * æº?ä»£ç ?ç”±æž—è‰¯ç›Š(linliangyi2005@gmail.com)æ??ä¾›
 * ç‰ˆæ?ƒå£°æ˜Ž 2012ï¼Œä¹Œé¾™èŒ¶å·¥ä½œå®¤
 * provided by Linliangyi and copyright 2012 by Oolong studio
 */
package org.wltea.analyzer.core;

import org.wltea.analyzer.cfg.Configuration;

import java.io.IOException;
import java.io.Reader;
import java.util.ArrayList;
import java.util.List;

/**
 * IKåˆ†è¯?å™¨ä¸»ç±»
 *
 */
public final class IKSegmenter {
	
	//å­—ç¬¦çªœreader
	private Reader input;
	//åˆ†è¯?å™¨ä¸Šä¸‹æ–‡
	private AnalyzeContext context;
	//åˆ†è¯?å¤„ç?†å™¨åˆ—è¡¨
	private List<ISegmenter> segmenters;
	//åˆ†è¯?æ­§ä¹‰è£?å†³å™¨
	private IKArbitrator arbitrator;
    private  Configuration configuration;
	

	/**
	 * IKåˆ†è¯?å™¨æž„é€ å‡½æ•°
	 * @param input
     */
	public IKSegmenter(Reader input ,Configuration configuration){
		this.input = input;
        this.configuration = configuration;
        this.init();
	}

	
	/**
	 * åˆ?å§‹åŒ–
	 */
	private void init(){
		//åˆ?å§‹åŒ–åˆ†è¯?ä¸Šä¸‹æ–‡
		this.context = new AnalyzeContext(configuration);
		//åŠ è½½å­?åˆ†è¯?å™¨
		this.segmenters = this.loadSegmenters();
		//åŠ è½½æ­§ä¹‰è£?å†³å™¨
		this.arbitrator = new IKArbitrator();
	}
	
	/**
	 * åˆ?å§‹åŒ–è¯?å…¸ï¼ŒåŠ è½½å­?åˆ†è¯?å™¨å®žçŽ°
	 * @return List<ISegmenter>
	 */
	private List<ISegmenter> loadSegmenters(){
		List<ISegmenter> segmenters = new ArrayList<ISegmenter>(4);
		//å¤„ç?†å­—æ¯?çš„å­?åˆ†è¯?å™¨
		segmenters.add(new LetterSegmenter()); 
		//å¤„ç?†ä¸­æ–‡æ•°é‡?è¯?çš„å­?åˆ†è¯?å™¨
		segmenters.add(new CN_QuantifierSegmenter());
		//å¤„ç?†ä¸­æ–‡è¯?çš„å­?åˆ†è¯?å™¨
		segmenters.add(new CJKSegmenter());
		return segmenters;
	}
	
	/**
	 * åˆ†è¯?ï¼ŒèŽ·å?–ä¸‹ä¸€ä¸ªè¯?å…ƒ
	 * @return Lexeme è¯?å…ƒå¯¹è±¡
	 * @throws java.io.IOException
	 */
	public synchronized Lexeme next()throws IOException{
		Lexeme l = null;
		while((l = context.getNextLexeme()) == null ){
			/*
			 * ä»Žreaderä¸­è¯»å?–æ•°æ?®ï¼Œå¡«å……buffer
			 * å¦‚æžœreaderæ˜¯åˆ†æ¬¡è¯»å…¥bufferçš„ï¼Œé‚£ä¹ˆbufferè¦?  è¿›è¡Œç§»ä½?å¤„ç?†
			 * ç§»ä½?å¤„ç?†ä¸Šæ¬¡è¯»å…¥çš„ä½†æœªå¤„ç?†çš„æ•°æ?®
			 */
			int available = context.fillBuffer(this.input);
			if(available <= 0){
				//readerå·²ç»?è¯»å®Œ
				context.reset();
				return null;
				
			}else{
				//åˆ?å§‹åŒ–æŒ‡é’ˆ
				context.initCursor();
				do{
        			//é??åŽ†å­?åˆ†è¯?å™¨
        			for(ISegmenter segmenter : segmenters){
        				segmenter.analyze(context);
        			}
        			//å­—ç¬¦ç¼“å†²åŒºæŽ¥è¿‘è¯»å®Œï¼Œéœ€è¦?è¯»å…¥æ–°çš„å­—ç¬¦
        			if(context.needRefillBuffer()){
        				break;
        			}
   				//å?‘å‰?ç§»åŠ¨æŒ‡é’ˆ
				}while(context.moveCursor());
				//é‡?ç½®å­?åˆ†è¯?å™¨ï¼Œä¸ºä¸‹è½®å¾ªçŽ¯è¿›è¡Œåˆ?å§‹åŒ–
				for(ISegmenter segmenter : segmenters){
					segmenter.reset();
				}
			}
			//å¯¹åˆ†è¯?è¿›è¡Œæ­§ä¹‰å¤„ç?†
			this.arbitrator.process(context, configuration.isUseSmart());
			//å°†åˆ†è¯?ç»“æžœè¾“å‡ºåˆ°ç»“æžœé›†ï¼Œå¹¶å¤„ç?†æœªåˆ‡åˆ†çš„å?•ä¸ªCJKå­—ç¬¦
			context.outputToResult();
			//è®°å½•æœ¬æ¬¡åˆ†è¯?çš„ç¼“å†²åŒºä½?ç§»
			context.markBufferOffset();			
		}
		return l;
	}

	/**
     * é‡?ç½®åˆ†è¯?å™¨åˆ°åˆ?å§‹çŠ¶æ€?
     * @param input
     */
	public synchronized void reset(Reader input) {
		this.input = input;
		context.reset();
		for(ISegmenter segmenter : segmenters){
			segmenter.reset();
		}
	}
}
