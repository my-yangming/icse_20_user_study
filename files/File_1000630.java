package org.nutz.lang.segment;

import java.io.File;
import java.util.Map;

import org.nutz.lang.Files;
import org.nutz.lang.Lang;
import org.nutz.lang.util.Context;
import org.nutz.lang.util.NutMap;

/**
 * ä»£ç ?ç‰‡æ®µçš„å¸®åŠ©å‡½æ•°
 * 
 * @author zozoh(zozohtnt@gmail.com)
 */
public class Segments {

    /**
     * æ ¹æ?®ä¸€ä¸ªå¯¹è±¡å¡«å……æ‰€æœ‰ç‰‡æ®µçš„å? ä½?ç¬¦
     * 
     * @param seg
     *            ç‰‡æ®µ
     * @param obj
     *            å¯¹è±¡
     * @return å¡«å……å?Žçš„ç‰‡æ®µå¯¹è±¡
     */
    public static Segment fill(Segment seg, Object obj) {
        if (null == obj || null == seg)
            return seg;
        return seg.setBy(obj);
    }

    /**
     * æ ¹æ?®ä¸€ä¸ªæ–‡ä»¶ç”Ÿæˆ?ä¸€ä¸ªä»£ç ?ç‰‡æ®µ
     * 
     * @param f
     *            æ–‡ä»¶
     * @return ç‰‡æ®µå¯¹è±¡
     */
    public static Segment read(File f) {
        String txt = Files.read(f);
        return new CharSegment(txt);
    }

    /**
     * æ ¹æ?®å­—ç¬¦ä¸²ç‰‡æ®µï¼Œå°†ä¸Šä¸‹æ–‡å¯¹è±¡æ›¿æ?¢å¯¹åº”å? ä½?ç¬¦ã€‚æœªèµ‹å€¼çš„å? ä½?ç¬¦ç»´æŒ?åŽŸæ ·
     * <p>
     * æ¯”å¦‚ï¼š
     * 
     * @param seg
     *            ç‰‡æ®µå¯¹è±¡
     * @param context
     *            ä¸Šä¸‹æ–‡å¯¹è±¡
     * @return æ›¿æ?¢å?Žçš„å­—ç¬¦ä¸²
     */
    public static String replace(Segment seg, Context context) {
        if (null == seg)
            return null;

        // å¢žåŠ ç¼ºå¤±çš„å? ä½?ç¬¦å?·
        for (String key : seg.keys())
            if (!context.has(key))
                context.set(key, "${" + key + "}");

        return seg.render(context).toString();
    }

    /**
     * æ ¹æ?®å­—ç¬¦ä¸²ç‰‡æ®µï¼Œå°†ä¸Šä¸‹æ–‡å¯¹è±¡æ›¿æ?¢å¯¹åº”å? ä½?ç¬¦ã€‚æœªèµ‹å€¼çš„å? ä½?ç¬¦ç»´æŒ?åŽŸæ ·
     * 
     * @param pattern
     *            å­—ç¬¦ä¸²ç‰‡æ®µ
     * @param context
     *            ä¸Šä¸‹æ–‡å¯¹è±¡
     * @return æ›¿æ?¢å?Žçš„å­—ç¬¦ä¸²
     */
    public static String replace(String pattern, Context context) {
        if (null == pattern)
            return null;
        if (null == context)
            return pattern;
        return replace(new CharSegment(pattern), context);
    }

    /**
     * @see #replace(Segment, Context)
     */
    public static String replace(String pattern, Map<String, Object> context) {
        return replace(pattern, Lang.context(new NutMap(context)));
    }

    /**
     * æ ¹æ?®ä¸€æ®µå­—ç¬¦ä¸²ç”Ÿæˆ?ä¸€ä¸ªä»£ç ?ç‰‡æ®µ
     * 
     * @param str
     *            å­—ç¬¦ä¸²
     * @return ç‰‡æ®µå¯¹è±¡
     */
    public static Segment create(String str) {
        return new CharSegment(str);
    }
}
