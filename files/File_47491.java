package com.us.example.service;

import com.us.example.dao.PermissionDao;
import com.us.example.domain.Permission;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.ConfigAttribute;
import org.springframework.security.access.SecurityConfig;
import org.springframework.security.web.FilterInvocation;
import org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource;
import org.springframework.security.web.util.matcher.AntPathRequestMatcher;
import org.springframework.stereotype.Service;

import javax.servlet.http.HttpServletRequest;
import java.util.*;

/**
 * Created by yangyibo on 17/1/19.
 */
@Service
public class MyInvocationSecurityMetadataSourceService  implements
        FilterInvocationSecurityMetadataSource {

    //æ­¤æ–¹æ³•æ˜¯ä¸ºäº†åˆ¤å®šç”¨æˆ·è¯·æ±‚çš„url æ˜¯å?¦åœ¨æ?ƒé™?è¡¨ä¸­ï¼Œå¦‚æžœåœ¨æ?ƒé™?è¡¨ä¸­ï¼Œåˆ™è¿”å›žç»™ decide æ–¹æ³•ï¼Œç”¨æ?¥åˆ¤å®šç”¨æˆ·æ˜¯å?¦æœ‰æ­¤æ?ƒé™?ã€‚å¦‚æžœä¸?åœ¨æ?ƒé™?è¡¨ä¸­åˆ™æ”¾è¡Œã€‚
    //å› ä¸ºæˆ‘ä¸?æƒ³æ¯?ä¸€æ¬¡æ?¥äº†è¯·æ±‚ï¼Œéƒ½å…ˆè¦?åŒ¹é…?ä¸€ä¸‹æ?ƒé™?è¡¨ä¸­çš„ä¿¡æ?¯æ˜¯ä¸?æ˜¯åŒ…å?«æ­¤urlï¼Œ
    // æˆ‘å‡†å¤‡ç›´æŽ¥æ‹¦æˆªï¼Œä¸?ç®¡è¯·æ±‚çš„url æ˜¯ä»€ä¹ˆéƒ½ç›´æŽ¥æ‹¦æˆªï¼Œç„¶å?Žåœ¨MyAccessDecisionManagerçš„decide æ–¹æ³•ä¸­å?šæ‹¦æˆªè¿˜æ˜¯æ”¾è¡Œçš„å†³ç­–ã€‚
    //æ‰€ä»¥æ­¤æ–¹æ³•çš„è¿”å›žå€¼ä¸?èƒ½è¿”å›ž null æ­¤å¤„æˆ‘å°±éš?ä¾¿è¿”å›žä¸€ä¸‹ã€‚
    @Override
    public Collection<ConfigAttribute> getAttributes(Object object) throws IllegalArgumentException {
        Collection<ConfigAttribute> co=new ArrayList<>();
        co.add(new SecurityConfig("null"));
        return co;
    }

    @Override
    public Collection<ConfigAttribute> getAllConfigAttributes() {
        return null;
    }

    @Override
    public boolean supports(Class<?> clazz) {
        return true;
    }
}
