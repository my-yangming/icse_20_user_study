package jetbrains.mps.smodel.resources;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.tuples.runtime.MultiTuple;
import org.jetbrains.mps.openapi.module.SModule;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.make.resources.IResourceWithProperties;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.make.resources.IPropertiesIO;
import jetbrains.mps.project.AbstractModule;

public class MResource extends MultiTuple._2<SModule, Iterable<SModel>> implements IMResource, IResourceWithProperties {
  public MResource() {
    super();
  }
  public MResource(SModule module, Iterable<SModel> models) {
    super(module, models);
  }
  public SModule module(SModule value) {
    return super._0(value);
  }
  public Iterable<SModel> models(Iterable<SModel> value) {
    return super._1(value);
  }
  public SModule module() {
    return super._0();
  }
  public Iterable<SModel> models() {
    return super._1();
  }
  public String describe() {
    return NameUtil.compactNamespace(this.module().getModuleReference().getModuleName());
  }
  public IPropertiesIO getProperties() {
    return new FlatFilePropertiesIO(((AbstractModule) this.module()).getDescriptorFile());
  }
}
