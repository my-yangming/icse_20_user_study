package com.vondear.rxtool;

import android.app.Activity;
import android.content.ContentResolver;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;

import java.io.File;
import java.io.IOException;

/**
 *
 * @author vondear
 * @date 2016/1/24
 * ç›¸æœºç›¸å…³å·¥å…·ç±»
 */
public class RxPictureTool {

    /**
     * èŽ·å?–æ‰“å¼€ç…§ç¨‹åº?ç•Œé?¢çš„Intent
     */
    public static Intent getOpenCameraIntent() {
        return new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
    }

    /**
     * èŽ·å?–è·³è½¬è‡³ç›¸å†Œé€‰æ‹©ç•Œé?¢çš„Intent
     */
    public static Intent getImagePickerIntent() {
        Intent intent = new Intent(Intent.ACTION_PICK, null);
        return intent.setDataAndType(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, "image/*");
    }

    /**
     * èŽ·å?–[è·³è½¬è‡³ç›¸å†Œé€‰æ‹©ç•Œé?¢,å¹¶è·³è½¬è‡³è£?å‰ªç•Œé?¢ï¼Œé»˜è®¤å?¯ç¼©æ”¾è£?å‰ªåŒºåŸŸ]çš„Intent
     */
    public static Intent getImagePickerIntent(int outputX, int outputY, Uri fromFileURI,
                                              Uri saveFileURI) {
        return getImagePickerIntent(1, 1, outputX, outputY, true, fromFileURI, saveFileURI);
    }

    /**
     * èŽ·å?–[è·³è½¬è‡³ç›¸å†Œé€‰æ‹©ç•Œé?¢,å¹¶è·³è½¬è‡³è£?å‰ªç•Œé?¢ï¼Œé»˜è®¤å?¯ç¼©æ”¾è£?å‰ªåŒºåŸŸ]çš„Intent
     */
    public static Intent getImagePickerIntent(int aspectX, int aspectY, int outputX, int outputY, Uri fromFileURI,
                                              Uri saveFileURI) {
        return getImagePickerIntent(aspectX, aspectY, outputX, outputY, true, fromFileURI, saveFileURI);
    }

    /**
     * èŽ·å?–[è·³è½¬è‡³ç›¸å†Œé€‰æ‹©ç•Œé?¢,å¹¶è·³è½¬è‡³è£?å‰ªç•Œé?¢ï¼Œå?¯ä»¥æŒ‡å®šæ˜¯å?¦ç¼©æ”¾è£?å‰ªåŒºåŸŸ]çš„Intent
     *
     * @param aspectX     è£?å‰ªæ¡†å°ºå¯¸æ¯”ä¾‹X
     * @param aspectY     è£?å‰ªæ¡†å°ºå¯¸æ¯”ä¾‹Y
     * @param outputX     è¾“å‡ºå°ºå¯¸å®½åº¦
     * @param outputY     è¾“å‡ºå°ºå¯¸é«˜åº¦
     * @param canScale    æ˜¯å?¦å?¯ç¼©æ”¾
     * @param fromFileURI æ–‡ä»¶æ?¥æº?è·¯å¾„URI
     * @param saveFileURI è¾“å‡ºæ–‡ä»¶è·¯å¾„URI
     */
    public static Intent getImagePickerIntent(int aspectX, int aspectY, int outputX, int outputY, boolean canScale,
                                              Uri fromFileURI, Uri saveFileURI) {
        Intent intent = new Intent(Intent.ACTION_PICK);
        intent.setDataAndType(fromFileURI, "image/*");
        intent.putExtra("crop", "true");
        intent.putExtra("aspectX", aspectX <= 0 ? 1 : aspectX);
        intent.putExtra("aspectY", aspectY <= 0 ? 1 : aspectY);
        intent.putExtra("outputX", outputX);
        intent.putExtra("outputY", outputY);
        intent.putExtra("scale", canScale);
        // å›¾ç‰‡å‰ªè£?ä¸?è¶³é»‘è¾¹è§£å†³
        intent.putExtra("scaleUpIfNeeded", true);
        intent.putExtra("return-data", false);
        intent.putExtra(MediaStore.EXTRA_OUTPUT, saveFileURI);
        intent.putExtra("outputFormat", Bitmap.CompressFormat.JPEG.toString());
        // åŽ»é™¤äººè„¸è¯†åˆ«
        return intent.putExtra("noFaceDetection", true);
    }

    /**
     * èŽ·å?–[è·³è½¬è‡³ç›¸å†Œé€‰æ‹©ç•Œé?¢,å¹¶è·³è½¬è‡³è£?å‰ªç•Œé?¢ï¼Œé»˜è®¤å?¯ç¼©æ”¾è£?å‰ªåŒºåŸŸ]çš„Intent
     */
    public static Intent getCameraIntent(Uri saveFileURI) {
        Intent mIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
        return mIntent.putExtra(MediaStore.EXTRA_OUTPUT, saveFileURI);
    }

    /**
     * èŽ·å?–[è·³è½¬è‡³è£?å‰ªç•Œé?¢,é»˜è®¤å?¯ç¼©æ”¾]çš„Intent
     */
    public static Intent getCropImageIntent(int outputX, int outputY, Uri fromFileURI,
                                            Uri saveFileURI) {
        return getCropImageIntent(1, 1, outputX, outputY, true, fromFileURI, saveFileURI);
    }

    /**
     * èŽ·å?–[è·³è½¬è‡³è£?å‰ªç•Œé?¢,é»˜è®¤å?¯ç¼©æ”¾]çš„Intent
     */
    public static Intent getCropImageIntent(int aspectX, int aspectY, int outputX, int outputY, Uri fromFileURI,
                                            Uri saveFileURI) {
        return getCropImageIntent(aspectX, aspectY, outputX, outputY, true, fromFileURI, saveFileURI);
    }


    /**
     * èŽ·å?–[è·³è½¬è‡³è£?å‰ªç•Œé?¢]çš„Intent
     */
    public static Intent getCropImageIntent(int aspectX, int aspectY, int outputX, int outputY, boolean canScale,
                                            Uri fromFileURI, Uri saveFileURI) {
        Intent intent = new Intent("com.android.camera.action.CROP");
        intent.setDataAndType(fromFileURI, "image/*");
        intent.putExtra("crop", "true");
        // Xæ–¹å?‘ä¸Šçš„æ¯”ä¾‹
        intent.putExtra("aspectX", aspectX <= 0 ? 1 : aspectX);
        // Yæ–¹å?‘ä¸Šçš„æ¯”ä¾‹
        intent.putExtra("aspectY", aspectY <= 0 ? 1 : aspectY);
        intent.putExtra("outputX", outputX);
        intent.putExtra("outputY", outputY);
        intent.putExtra("scale", canScale);
        // å›¾ç‰‡å‰ªè£?ä¸?è¶³é»‘è¾¹è§£å†³
        intent.putExtra("scaleUpIfNeeded", true);
        intent.putExtra("return-data", false);
        // éœ€è¦?å°†è¯»å?–çš„æ–‡ä»¶è·¯å¾„å’Œè£?å‰ªå†™å…¥çš„è·¯å¾„åŒºåˆ†ï¼Œå?¦åˆ™ä¼šé€ æˆ?æ–‡ä»¶0byte
        intent.putExtra(MediaStore.EXTRA_OUTPUT, saveFileURI);
        // true-->è¿”å›žæ•°æ?®ç±»åž‹å?¯ä»¥è®¾ç½®ä¸ºBitmapï¼Œä½†æ˜¯ä¸?èƒ½ä¼ è¾“å¤ªå¤§ï¼Œæˆªå¤§å›¾ç”¨URIï¼Œå°?å›¾ç”¨Bitmapæˆ–è€…å…¨éƒ¨ä½¿ç”¨URI
        intent.putExtra("outputFormat", Bitmap.CompressFormat.JPEG.toString());
        // å?–æ¶ˆäººè„¸è¯†åˆ«åŠŸèƒ½
        intent.putExtra("noFaceDetection", true);
        return intent;
    }

    /**
     * èŽ·å¾—é€‰ä¸­ç›¸å†Œçš„å›¾ç‰‡
     *
     * @param context ä¸Šä¸‹æ–‡
     * @param data    onActivityResultè¿”å›žçš„Intent
     * @return bitmap
     */
    public static Bitmap getChoosedImage(Activity context, Intent data) {
        if (data == null) return null;
        Bitmap bm = null;
        ContentResolver cr = context.getContentResolver();
        Uri originalUri = data.getData();
        try {
            bm = MediaStore.Images.Media.getBitmap(cr, originalUri);
        } catch (IOException e) {
            e.printStackTrace();
        }
        return bm;
    }

    /**
     * èŽ·å¾—é€‰ä¸­ç›¸å†Œçš„å›¾ç‰‡è·¯å¾„
     *
     * @param context ä¸Šä¸‹æ–‡
     * @param data    onActivityResultè¿”å›žçš„Intent
     * @return
     */
    public static String getChoosedImagePath(Activity context, Intent data) {
        if (data == null) return null;
        String path = "";
        ContentResolver resolver = context.getContentResolver();
        Uri originalUri = data.getData();
        if (null == originalUri) return null;
        String[] projection = {MediaStore.Images.Media.DATA};
        Cursor cursor = resolver.query(originalUri, projection, null, null, null);
        if (null != cursor) {
            try {
                int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
                cursor.moveToFirst();
                path = cursor.getString(column_index);
            } catch (IllegalArgumentException e) {
                e.printStackTrace();
            } finally {
                try {
                    if (!cursor.isClosed()) {
                        cursor.close();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
        return RxDataTool.isNullString(path) ? originalUri.getPath() : null;
    }

    /**
     * èŽ·å?–æ‹?ç…§ä¹‹å?Žçš„ç…§ç‰‡æ–‡ä»¶ï¼ˆJPGæ ¼å¼?ï¼‰
     *
     * @param data     onActivityResultå›žè°ƒè¿”å›žçš„æ•°æ?®
     * @param filePath æ–‡ä»¶è·¯å¾„
     * @return æ–‡ä»¶
     */
    public static File getTakePictureFile(Intent data, String filePath) {
        if (data == null) return null;
        Bundle extras = data.getExtras();
        if (extras == null) return null;
        Bitmap photo = extras.getParcelable("data");
        File file = new File(filePath);
        if (RxImageTool.save(photo, file, Bitmap.CompressFormat.JPEG)) return file;
        return null;
    }
}
