package org.nutz.mvc.view;

import javax.servlet.RequestDispatcher;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.nutz.lang.Files;
import org.nutz.lang.Lang;
import org.nutz.lang.Strings;
import org.nutz.mvc.Mvcs;

/**
 * å†…éƒ¨é‡?å®šå?‘è§†å›¾
 * <p/>
 * æ ¹æ?®ä¼ å…¥çš„è§†å›¾å??ï¼Œå†³å®šè§†å›¾çš„è·¯å¾„ï¼š
 * <ul>
 * <li>å¦‚æžœè§†å›¾å??ä»¥ '/' å¼€å¤´ï¼Œ åˆ™è¢«è®¤ä¸ºæ˜¯ä¸€ä¸ª å…¨è·¯å¾„
 * <li>å?¦åˆ™ï¼Œå°†è§†å›¾å??ä¸­çš„ '.' è½¬æ?¢æˆ? '/'ï¼Œå¹¶åŠ å…¥å‰?ç¼€ "/WEB-INF/"
 * </ul>
 * é€šè¿‡æ³¨è§£æ˜ å°„çš„ä¾‹å­?ï¼š
 * <ul>
 * <li>'@Ok("forward:abc.cbc")' => /WEB-INF/abc/cbc
 * <li>'@Ok("forward:/abc/cbc")' => /abc/cbc
 * <li>'@Ok("forward:/abc/cbc.jsp")' => /abc/cbc.jsp
 * </ul>
 * 
 * @author mawm(ming300@gmail.com)
 * @author zozoh(zozohtnt@gmail.com)
 * @author wendal(wendal1985@gmail.com)
 */
public class ForwardView extends AbstractPathView {

    public ForwardView(String dest) {
        super(dest == null ? null : dest.replace('\\', '/'));
    }

    public void render(HttpServletRequest req, HttpServletResponse resp, Object obj)
            throws Exception {
        String path = evalPath(req, obj);
        String args = "";
        if (path == null)
            path = "";
        else if (path.contains("?")) { //å°†å?‚æ•°éƒ¨åˆ†åˆ†è§£å‡ºæ?¥
            args = path.substring(path.indexOf('?'));
            path = path.substring(0, path.indexOf('?'));
        }

        String ext = getExt();        
        // ç©ºè·¯å¾„ï¼Œé‡‡ç”¨é»˜è®¤è§„åˆ™
        if (Strings.isBlank(path)) {
            path = Mvcs.getRequestPath(req);
            path = "/WEB-INF"
                    + (path.startsWith("/") ? "" : "/")
                    + Files.renameSuffix(path, ext);
        }
        // ç»?å¯¹è·¯å¾„ : ä»¥ '/' å¼€å¤´çš„è·¯å¾„ä¸?å¢žåŠ  '/WEB-INF'
        else if (path.charAt(0) == '/') {
            if (!path.toLowerCase().endsWith(ext))
                path += ext;
        }
        // åŒ…å??å½¢å¼?çš„è·¯å¾„
        else {
            path = "/WEB-INF/" + path.replace('.', '/') + ext;
        }

        // æ‰§è¡Œ Forward
        path = path + args;
        RequestDispatcher rd = req.getRequestDispatcher(path);
        if (rd == null)
            throw Lang.makeThrow("Fail to find Forward '%s'", path);
        // Do rendering
        rd.forward(req, resp);
    }

    /**
     * å­?ç±»å?¯ä»¥è¦†ç›–è¿™ä¸ªæ–¹æ³•ï¼Œç»™å‡ºè‡ªå·±ç‰¹æ®Šçš„å?Žç¼€,å¿…é¡»å°?å†™å“¦
     * 
     * @return å?Žç¼€
     */
    protected String getExt() {
        return "";
    }

}
