package jetbrains.mps.vcs.actions;

/*Generated by MPS */

import com.intellij.openapi.vcs.actions.AbstractVcsAction;
import com.intellij.openapi.vcs.actions.VcsContext;
import jetbrains.mps.ide.projectPane.ProjectPane;
import com.intellij.openapi.vfs.VirtualFile;
import com.intellij.ide.FileSelectInContext;
import org.jetbrains.annotations.Nullable;
import com.intellij.openapi.project.Project;
import jetbrains.mps.ide.project.ProjectHelper;
import com.intellij.openapi.actionSystem.Presentation;

public class ShowInLogicalView extends AbstractVcsAction {
  public ShowInLogicalView() {
  }

  @Override
  protected void actionPerformed(VcsContext vcsContext) {
    ProjectPane pp = getProjectPane(vcsContext);
    VirtualFile selectedFile = getSelectedFile(vcsContext);

    if (selectedFile == null || pp == null) {
      return;
    }
    FileSelectInContext ctx = new FileSelectInContext(pp.getProject(), selectedFile);
    // I assume this is an action when user want's to get to the node in ProjectPane, not just reveal it, hence requestFocus == true 
    pp.createSelectInTarget().selectIn(ctx, true);
  }

  @Nullable
  private VirtualFile getSelectedFile(VcsContext e) {
    VirtualFile[] selectedFiles = e.getSelectedFiles();
    if (selectedFiles.length != 1) {
      return null;
    }
    return selectedFiles[0];
  }

  @Nullable
  private ProjectPane getProjectPane(VcsContext ctx) {
    final Project project = ctx.getProject();
    if (project == null) {
      return null;
    }
    final jetbrains.mps.project.Project mpsProject = ProjectHelper.fromIdeaProject(project);
    if (mpsProject == null) {
      return null;
    }
    return ProjectPane.getInstance(mpsProject);
  }

  @Override
  protected void update(VcsContext vcsContext, Presentation presentation) {
    ProjectPane pp = getProjectPane(vcsContext);
    VirtualFile selectedFile = getSelectedFile(vcsContext);
    presentation.setEnabled(pp != null && selectedFile != null && pp.createSelectInTarget().canSelect(new FileSelectInContext(pp.getProject(), selectedFile)));
  }
}
