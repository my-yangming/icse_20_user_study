public static HystrixCommandConfiguration sample(HystrixCommandKey commandKey,HystrixThreadPoolKey threadPoolKey,HystrixCommandGroupKey groupKey,HystrixCommandProperties commandProperties){
  HystrixCommandExecutionConfig executionConfig=new HystrixCommandExecutionConfig(commandProperties.executionIsolationSemaphoreMaxConcurrentRequests().get(),commandProperties.executionIsolationStrategy().get(),commandProperties.executionIsolationThreadInterruptOnTimeout().get(),commandProperties.executionIsolationThreadPoolKeyOverride().get(),commandProperties.executionTimeoutEnabled().get(),commandProperties.executionTimeoutInMilliseconds().get(),commandProperties.fallbackEnabled().get(),commandProperties.fallbackIsolationSemaphoreMaxConcurrentRequests().get(),commandProperties.requestCacheEnabled().get(),commandProperties.requestLogEnabled().get());
  HystrixCommandCircuitBreakerConfig circuitBreakerConfig=new HystrixCommandCircuitBreakerConfig(commandProperties.circuitBreakerEnabled().get(),commandProperties.circuitBreakerErrorThresholdPercentage().get(),commandProperties.circuitBreakerForceClosed().get(),commandProperties.circuitBreakerForceOpen().get(),commandProperties.circuitBreakerRequestVolumeThreshold().get(),commandProperties.circuitBreakerSleepWindowInMilliseconds().get());
  HystrixCommandMetricsConfig metricsConfig=new HystrixCommandMetricsConfig(commandProperties.metricsHealthSnapshotIntervalInMilliseconds().get(),commandProperties.metricsRollingPercentileEnabled().get(),commandProperties.metricsRollingPercentileWindowBuckets().get(),commandProperties.metricsRollingPercentileWindowInMilliseconds().get(),commandProperties.metricsRollingStatisticalWindowBuckets().get(),commandProperties.metricsRollingStatisticalWindowInMilliseconds().get());
  return new HystrixCommandConfiguration(commandKey,threadPoolKey,groupKey,executionConfig,circuitBreakerConfig,metricsConfig);
}
