/** 
 * ???????? ????????<br>
 * @param algorithm ???????????????????????<br><ul> <li>??? (viterbi)???????????</li> <li>???trie? (dat)??????????????</li> <li>????? (crf)????????????????????????????NLP??</li> <li>??? (perceptron)??????????????????????</li> <li>N??? (nshort)??????????????????</li> </ul>
 * @return ?????
 */
public static Segment newSegment(String algorithm){
  if (algorithm == null) {
    throw new IllegalArgumentException(String.format("???? algorithm == %s",algorithm));
  }
  algorithm=algorithm.toLowerCase();
  if ("viterbi".equals(algorithm) || "???".equals(algorithm))   return new ViterbiSegment();
 else   if ("dat".equals(algorithm) || "???trie?".equals(algorithm))   return new DoubleArrayTrieSegment();
 else   if ("nshort".equals(algorithm) || "n???".equals(algorithm))   return new NShortSegment();
 else   if ("crf".equals(algorithm) || "?????".equals(algorithm))   try {
    return new CRFLexicalAnalyzer();
  }
 catch (  IOException e) {
    logger.warning("CRF??????");
    throw new RuntimeException(e);
  }
 else   if ("perceptron".equals(algorithm) || "???".equals(algorithm)) {
    try {
      return new PerceptronLexicalAnalyzer();
    }
 catch (    IOException e) {
      logger.warning("?????????");
      throw new RuntimeException(e);
    }
  }
  throw new IllegalArgumentException(String.format("???? algorithm == %s",algorithm));
}
