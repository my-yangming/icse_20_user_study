private static int[] generateDefault8BitClutEntries(){
  int[] entries=new int[256];
  entries[0]=0x00000000;
  for (int i=0; i < entries.length; i++) {
    if (i < 8) {
      entries[i]=getColor(0x3F,((i & 0x01) != 0 ? 0xFF : 0x00),((i & 0x02) != 0 ? 0xFF : 0x00),((i & 0x04) != 0 ? 0xFF : 0x00));
    }
 else {
switch (i & 0x88) {
case 0x00:
        entries[i]=getColor(0xFF,(((i & 0x01) != 0 ? 0x55 : 0x00) + ((i & 0x10) != 0 ? 0xAA : 0x00)),(((i & 0x02) != 0 ? 0x55 : 0x00) + ((i & 0x20) != 0 ? 0xAA : 0x00)),(((i & 0x04) != 0 ? 0x55 : 0x00) + ((i & 0x40) != 0 ? 0xAA : 0x00)));
      break;
case 0x08:
    entries[i]=getColor(0x7F,(((i & 0x01) != 0 ? 0x55 : 0x00) + ((i & 0x10) != 0 ? 0xAA : 0x00)),(((i & 0x02) != 0 ? 0x55 : 0x00) + ((i & 0x20) != 0 ? 0xAA : 0x00)),(((i & 0x04) != 0 ? 0x55 : 0x00) + ((i & 0x40) != 0 ? 0xAA : 0x00)));
  break;
case 0x80:
entries[i]=getColor(0xFF,(127 + ((i & 0x01) != 0 ? 0x2B : 0x00) + ((i & 0x10) != 0 ? 0x55 : 0x00)),(127 + ((i & 0x02) != 0 ? 0x2B : 0x00) + ((i & 0x20) != 0 ? 0x55 : 0x00)),(127 + ((i & 0x04) != 0 ? 0x2B : 0x00) + ((i & 0x40) != 0 ? 0x55 : 0x00)));
break;
case 0x88:
entries[i]=getColor(0xFF,(((i & 0x01) != 0 ? 0x2B : 0x00) + ((i & 0x10) != 0 ? 0x55 : 0x00)),(((i & 0x02) != 0 ? 0x2B : 0x00) + ((i & 0x20) != 0 ? 0x55 : 0x00)),(((i & 0x04) != 0 ? 0x2B : 0x00) + ((i & 0x40) != 0 ? 0x55 : 0x00)));
break;
}
}
}
return entries;
}
