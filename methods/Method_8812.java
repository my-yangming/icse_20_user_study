private static Map<String,Map<String,Object>> createMap(){
  Map<String,Map<String,Object>> result=new HashMap<>();
  Map<String,Object> shader=new HashMap<>();
  shader.put(VERTEX,PAINT_BRUSH_VSH);
  shader.put(FRAGMENT,PAINT_BRUSH_FSH);
  shader.put(ATTRIBUTES,new String[]{"inPosition","inTexcoord","alpha"});
  shader.put(UNIFORMS,new String[]{"mvpMatrix","texture"});
  result.put("brush",Collections.unmodifiableMap(shader));
  shader=new HashMap<>();
  shader.put(VERTEX,PAINT_BRUSH_VSH);
  shader.put(FRAGMENT,PAINT_BRUSHLIGHT_FSH);
  shader.put(ATTRIBUTES,new String[]{"inPosition","inTexcoord","alpha"});
  shader.put(UNIFORMS,new String[]{"mvpMatrix","texture"});
  result.put("brushLight",Collections.unmodifiableMap(shader));
  shader=new HashMap<>();
  shader.put(VERTEX,PAINT_BLIT_VSH);
  shader.put(FRAGMENT,PAINT_BLIT_FSH);
  shader.put(ATTRIBUTES,new String[]{"inPosition","inTexcoord"});
  shader.put(UNIFORMS,new String[]{"mvpMatrix","texture"});
  result.put("blit",Collections.unmodifiableMap(shader));
  shader=new HashMap<>();
  shader.put(VERTEX,PAINT_BLIT_VSH);
  shader.put(FRAGMENT,PAINT_BLITWITHMASKLIGHT_FSH);
  shader.put(ATTRIBUTES,new String[]{"inPosition","inTexcoord"});
  shader.put(UNIFORMS,new String[]{"mvpMatrix","texture","mask","color"});
  result.put("blitWithMaskLight",Collections.unmodifiableMap(shader));
  shader=new HashMap<>();
  shader.put(VERTEX,PAINT_BLIT_VSH);
  shader.put(FRAGMENT,PAINT_BLITWITHMASK_FSH);
  shader.put(ATTRIBUTES,new String[]{"inPosition","inTexcoord"});
  shader.put(UNIFORMS,new String[]{"mvpMatrix","texture","mask","color"});
  result.put("blitWithMask",Collections.unmodifiableMap(shader));
  shader=new HashMap<>();
  shader.put(VERTEX,PAINT_BLIT_VSH);
  shader.put(FRAGMENT,PAINT_COMPOSITEWITHMASK_FSH);
  shader.put(ATTRIBUTES,new String[]{"inPosition","inTexcoord"});
  shader.put(UNIFORMS,new String[]{"mvpMatrix","mask","color"});
  result.put("compositeWithMask",Collections.unmodifiableMap(shader));
  shader=new HashMap<>();
  shader.put(VERTEX,PAINT_BLIT_VSH);
  shader.put(FRAGMENT,PAINT_COMPOSITEWITHMASKLIGHT_FSH);
  shader.put(ATTRIBUTES,new String[]{"inPosition","inTexcoord"});
  shader.put(UNIFORMS,new String[]{"mvpMatrix","texture","mask","color"});
  result.put("compositeWithMaskLight",Collections.unmodifiableMap(shader));
  shader=new HashMap<>();
  shader.put(VERTEX,PAINT_BLIT_VSH);
  shader.put(FRAGMENT,PAINT_NONPREMULTIPLIEDBLIT_FSH);
  shader.put(ATTRIBUTES,new String[]{"inPosition","inTexcoord"});
  shader.put(UNIFORMS,new String[]{"mvpMatrix","texture"});
  result.put("nonPremultipliedBlit",Collections.unmodifiableMap(shader));
  return Collections.unmodifiableMap(result);
}
