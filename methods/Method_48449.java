public static void load(final JanusGraph graph,String mixedIndexName,boolean uniqueNameCompositeIndex){
  if (graph instanceof StandardJanusGraph) {
    Preconditions.checkState(mixedIndexNullOrExists((StandardJanusGraph)graph,mixedIndexName),ERR_NO_INDEXING_BACKEND,mixedIndexName);
  }
  JanusGraphManagement management=graph.openManagement();
  final PropertyKey name=management.makePropertyKey("name").dataType(String.class).make();
  JanusGraphManagement.IndexBuilder nameIndexBuilder=management.buildIndex("name",Vertex.class).addKey(name);
  if (uniqueNameCompositeIndex)   nameIndexBuilder.unique();
  JanusGraphIndex nameIndex=nameIndexBuilder.buildCompositeIndex();
  management.setConsistency(nameIndex,ConsistencyModifier.LOCK);
  final PropertyKey age=management.makePropertyKey("age").dataType(Integer.class).make();
  if (null != mixedIndexName)   management.buildIndex("vertices",Vertex.class).addKey(age).buildMixedIndex(mixedIndexName);
  final PropertyKey time=management.makePropertyKey("time").dataType(Integer.class).make();
  final PropertyKey reason=management.makePropertyKey("reason").dataType(String.class).make();
  final PropertyKey place=management.makePropertyKey("place").dataType(Geoshape.class).make();
  if (null != mixedIndexName)   management.buildIndex("edges",Edge.class).addKey(reason).addKey(place).buildMixedIndex(mixedIndexName);
  management.makeEdgeLabel("father").multiplicity(Multiplicity.MANY2ONE).make();
  management.makeEdgeLabel("mother").multiplicity(Multiplicity.MANY2ONE).make();
  EdgeLabel battled=management.makeEdgeLabel("battled").signature(time).make();
  management.buildEdgeIndex(battled,"battlesByTime",Direction.BOTH,Order.desc,time);
  management.makeEdgeLabel("lives").signature(reason).make();
  management.makeEdgeLabel("pet").make();
  management.makeEdgeLabel("brother").make();
  management.makeVertexLabel("titan").make();
  management.makeVertexLabel("location").make();
  management.makeVertexLabel("god").make();
  management.makeVertexLabel("demigod").make();
  management.makeVertexLabel("human").make();
  management.makeVertexLabel("monster").make();
  management.commit();
  JanusGraphTransaction tx=graph.newTransaction();
  Vertex saturn=tx.addVertex(T.label,"titan","name","saturn","age",10000);
  Vertex sky=tx.addVertex(T.label,"location","name","sky");
  Vertex sea=tx.addVertex(T.label,"location","name","sea");
  Vertex jupiter=tx.addVertex(T.label,"god","name","jupiter","age",5000);
  Vertex neptune=tx.addVertex(T.label,"god","name","neptune","age",4500);
  Vertex hercules=tx.addVertex(T.label,"demigod","name","hercules","age",30);
  Vertex alcmene=tx.addVertex(T.label,"human","name","alcmene","age",45);
  Vertex pluto=tx.addVertex(T.label,"god","name","pluto","age",4000);
  Vertex nemean=tx.addVertex(T.label,"monster","name","nemean");
  Vertex hydra=tx.addVertex(T.label,"monster","name","hydra");
  Vertex cerberus=tx.addVertex(T.label,"monster","name","cerberus");
  Vertex tartarus=tx.addVertex(T.label,"location","name","tartarus");
  jupiter.addEdge("father",saturn);
  jupiter.addEdge("lives",sky,"reason","loves fresh breezes");
  jupiter.addEdge("brother",neptune);
  jupiter.addEdge("brother",pluto);
  neptune.addEdge("lives",sea).property("reason","loves waves");
  neptune.addEdge("brother",jupiter);
  neptune.addEdge("brother",pluto);
  hercules.addEdge("father",jupiter);
  hercules.addEdge("mother",alcmene);
  hercules.addEdge("battled",nemean,"time",1,"place",Geoshape.point(38.1f,23.7f));
  hercules.addEdge("battled",hydra,"time",2,"place",Geoshape.point(37.7f,23.9f));
  hercules.addEdge("battled",cerberus,"time",12,"place",Geoshape.point(39f,22f));
  pluto.addEdge("brother",jupiter);
  pluto.addEdge("brother",neptune);
  pluto.addEdge("lives",tartarus,"reason","no fear of death");
  pluto.addEdge("pet",cerberus);
  cerberus.addEdge("lives",tartarus);
  tx.commit();
}
