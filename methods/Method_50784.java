private boolean isEscapingMethod(ASTMethodCallExpression methodNode){
  return Helper.isMethodCallChain(methodNode,HTML_ESCAPING) || Helper.isMethodCallChain(methodNode,JS_ESCAPING) || Helper.isMethodCallChain(methodNode,JSINHTML_ESCAPING) || Helper.isMethodCallChain(methodNode,URL_ESCAPING) || Helper.isMethodCallChain(methodNode,STRING_HTML3) || Helper.isMethodCallChain(methodNode,STRING_HTML4) || Helper.isMethodCallChain(methodNode,STRING_XML) || Helper.isMethodCallChain(methodNode,STRING_ECMASCRIPT) || Helper.isMethodCallChain(methodNode,INTEGER_VALUEOF) || Helper.isMethodCallChain(methodNode,DOUBLE_VALUEOF) || Helper.isMethodCallChain(methodNode,BOOLEAN_VALUEOF) || Helper.isMethodCallChain(methodNode,ID_VALUEOF) || Helper.isMethodCallChain(methodNode,STRING_ISEMPTY) || Helper.isMethodCallChain(methodNode,STRING_ISBLANK) || Helper.isMethodCallChain(methodNode,STRING_ISNOTBLANK);
}
