@OnLoadStyle static void onLoadStyle(ComponentContext c,Output<TruncateAt> ellipsize,Output<Float> extraSpacing,Output<Boolean> shouldIncludeFontPadding,Output<Float> spacingMultiplier,Output<Integer> minLines,Output<Integer> maxLines,Output<Integer> minEms,Output<Integer> maxEms,Output<Integer> minTextWidth,Output<Integer> maxTextWidth,Output<Boolean> isSingleLine,Output<CharSequence> text,Output<ColorStateList> textColorStateList,Output<Integer> linkColor,Output<Integer> highlightColor,Output<Integer> textSize,Output<Alignment> textAlignment,Output<Integer> breakStrategy,Output<Integer> hyphenationFrequency,Output<Integer> justificationMode,Output<Integer> textStyle,Output<Float> shadowRadius,Output<Float> shadowDx,Output<Float> shadowDy,Output<Integer> shadowColor,Output<VerticalGravity> verticalGravity,Output<Typeface> typeface){
  TextStylesHelper.onLoadStyle(c,ellipsize,extraSpacing,shouldIncludeFontPadding,spacingMultiplier,minLines,maxLines,minEms,maxEms,minTextWidth,maxTextWidth,isSingleLine,text,textColorStateList,linkColor,highlightColor,textSize,textAlignment,breakStrategy,hyphenationFrequency,justificationMode,textStyle,shadowRadius,shadowDx,shadowDy,shadowColor,verticalGravity,typeface);
}
