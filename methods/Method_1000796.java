/** 
 * ??? offs ?????????? <p> ????????????? >0 ???????????????????????? DUMP ??? <br> ???????????????? -1??? 'l' ???0????????????????? ???? r ?? max ?? <p> ??? <ul> <li><b>-1</b> - ????? <li><b>0</b> - ????? <li><b>?? 0</b> - ??????????????????????????????????? </ul>
 * @param bs ??
 * @return -1, 0 ?? +n
 */
int mark(byte[] bs,int[] fails){
  if (!isLoaded)   throw new MarkUnloadedRingItemException();
  byte start=bs[0];
  for (; r < max; r++) {
    if (buffer[r] == start) {
      int re=0;
      int j=r;
      while (true) {
        re++;
        j++;
        if (re == bs.length) {
          nextmark=j;
          return -1;
        }
        if (j == max) {
          nextmark=max;
          if (isStreamEnd) {
            r=max;
            return 0;
          }
          return re;
        }
        if (bs[re] != buffer[j]) {
          re=fails[re];
          if (bs[re] != buffer[j]) {
            break;
          }
 else           if (re == 0) {
            r=j;
          }
 else {
            r+=re == 0 ? 1 : re;
          }
        }
      }
      r=j;
    }
  }
  nextmark=max;
  return 0;
}
