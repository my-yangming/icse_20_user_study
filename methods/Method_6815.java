public void cleanup(){
  ContactsController.getInstance(currentAccount).cleanup();
  MediaController.getInstance().cleanup();
  NotificationsController.getInstance(currentAccount).cleanup();
  SendMessagesHelper.getInstance(currentAccount).cleanup();
  SecretChatHelper.getInstance(currentAccount).cleanup();
  LocationController.getInstance(currentAccount).cleanup();
  DataQuery.getInstance(currentAccount).cleanup();
  DialogsActivity.dialogsLoaded[currentAccount]=false;
  SharedPreferences.Editor editor=notificationsPreferences.edit();
  editor.clear().commit();
  editor=emojiPreferences.edit();
  editor.putLong("lastGifLoadTime",0).putLong("lastStickersLoadTime",0).putLong("lastStickersLoadTimeMask",0).putLong("lastStickersLoadTimeFavs",0).commit();
  editor=mainPreferences.edit();
  editor.remove("archivehint").remove("archivehint_l").remove("gifhint").remove("soundHint").remove("dcDomainName").remove("webFileDatacenterId").commit();
  reloadingWebpages.clear();
  reloadingWebpagesPending.clear();
  dialogs_dict.clear();
  dialogs_read_inbox_max.clear();
  loadingPinnedDialogs.clear();
  dialogs_read_outbox_max.clear();
  exportedChats.clear();
  fullUsers.clear();
  fullChats.clear();
  dialogsByFolder.clear();
  unreadUnmutedDialogs=0;
  joiningToChannels.clear();
  migratedChats.clear();
  channelViewsToSend.clear();
  pollsToCheck.clear();
  pollsToCheckSize=0;
  dialogsServerOnly.clear();
  dialogsForward.clear();
  allDialogs.clear();
  dialogsCanAddUsers.clear();
  dialogsChannelsOnly.clear();
  dialogsGroupsOnly.clear();
  dialogsUsersOnly.clear();
  dialogMessagesByIds.clear();
  dialogMessagesByRandomIds.clear();
  channelAdmins.clear();
  loadingChannelAdmins.clear();
  users.clear();
  objectsByUsernames.clear();
  chats.clear();
  dialogMessage.clear();
  deletedHistory.clear();
  printingUsers.clear();
  printingStrings.clear();
  printingStringsTypes.clear();
  onlinePrivacy.clear();
  loadingPeerSettings.clear();
  deletingDialogs.clear();
  clearingHistoryDialogs.clear();
  lastPrintingStringCount=0;
  Utilities.stageQueue.postRunnable(() -> {
    readTasks.clear();
    readTasksMap.clear();
    updatesQueueSeq.clear();
    updatesQueuePts.clear();
    updatesQueueQts.clear();
    gettingUnknownChannels.clear();
    gettingUnknownDialogs.clear();
    updatesStartWaitTimeSeq=0;
    updatesStartWaitTimePts=0;
    updatesStartWaitTimeQts=0;
    createdDialogIds.clear();
    gettingDifference=false;
    resetDialogsPinned=null;
    resetDialogsAll=null;
  }
);
  createdDialogMainThreadIds.clear();
  visibleDialogMainThreadIds.clear();
  blockedUsers.clear();
  sendingTypings.clear();
  loadingFullUsers.clear();
  loadedFullUsers.clear();
  reloadingMessages.clear();
  loadingFullChats.clear();
  loadingFullParticipants.clear();
  loadedFullParticipants.clear();
  loadedFullChats.clear();
  dialogsLoaded=false;
  nextDialogsCacheOffset.clear();
  loadingDialogs.clear();
  dialogsEndReached.clear();
  serverDialogsEndReached.clear();
  checkingTosUpdate=false;
  nextTosCheckTime=0;
  nextProxyInfoCheckTime=0;
  checkingProxyInfo=false;
  loadingUnreadDialogs=false;
  currentDeletingTaskTime=0;
  currentDeletingTaskMids=null;
  currentDeletingTaskChannelId=0;
  gettingNewDeleteTask=false;
  loadingBlockedUsers=false;
  firstGettingTask=false;
  updatingState=false;
  resetingDialogs=false;
  lastStatusUpdateTime=0;
  offlineSent=false;
  registeringForPush=false;
  getDifferenceFirstSync=true;
  uploadingAvatar=null;
  uploadingWallpaper=null;
  statusRequest=0;
  statusSettingState=0;
  Utilities.stageQueue.postRunnable(() -> {
    ConnectionsManager.getInstance(currentAccount).setIsUpdating(false);
    updatesQueueChannels.clear();
    updatesStartWaitTimeChannels.clear();
    gettingDifferenceChannels.clear();
    channelsPts.clear();
    shortPollChannels.clear();
    needShortPollChannels.clear();
    shortPollOnlines.clear();
    needShortPollOnlines.clear();
  }
);
  if (currentDeleteTaskRunnable != null) {
    Utilities.stageQueue.cancelRunnable(currentDeleteTaskRunnable);
    currentDeleteTaskRunnable=null;
  }
  addSupportUser();
  NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload);
}
