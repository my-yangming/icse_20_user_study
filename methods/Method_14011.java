/** 
 * Evaluates the schema on a project, returning a list of ItemUpdates generated by the schema. Some warnings will be emitted in the warning store: those are only the ones that are generated at evaluation time (such as invalid formats for dates). Issues detected on candidate statements (such as constraint violations) are not included at this stage.
 * @param project the project on which the schema should be evaluated
 * @param engine the engine, which gives access to the current facets
 * @param warningStore a store in which issues will be emitted
 * @return item updates are stored in their generating order (not merged yet).
 */
public List<ItemUpdate> evaluate(Project project,Engine engine,QAWarningStore warningStore){
  List<ItemUpdate> result=new ArrayList<>();
  FilteredRows filteredRows=engine.getAllFilteredRows();
  filteredRows.accept(project,new EvaluatingRowVisitor(result,warningStore));
  return result;
}
